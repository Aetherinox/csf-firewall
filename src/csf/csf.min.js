/*
	@app                        ConfigServer Firewall (csf)
	@author						Copyright (C) 2025 Aetherinox
								Copyright (C) 2006-2025 Jonathan Michaelson
	@license                    GPLv3
	@repo_primary             	https://github.com/Aetherinox/csf-firewall/actions
	@repo_legacy              	https://github.com/waytotheweb/scripts
	@file						cjs.min.js
*/

document.addEventListener( 'DOMContentLoaded', () =>
{

	/*
		csfapp › dropdown
	*/

	document.addEventListener( 'click', function(e)
	{
		var a = e.target.closest && e.target.closest( '.form-csfapp-dropdown .dropdown-menu a' );
		if (!a) return;
	
		e.preventDefault();
		var value = a.getAttribute( 'data-value' );
		var form = a.closest( '.form-csfapp-dropdown' );
		if (!form) return;
	
		var hid = form.querySelector( 'input[name="csfapp"]' );
		if (hid)
		{
			hid.value = value;
			console.log( 'Hidden input updated → csfapp=' + hid.value);
		}
	
		var sel = form.querySelector( '.selected-text' );
		if (sel)
		{
			sel.textContent = value;
			console.log( 'Displayed text updated → ' + value );
		}
	}, false);
	
	/*
		csfapp › Catch form submissions
	*/

	document.addEventListener( 'submit', function( e )
	{
		var form = e.target.closest( '.form-csfapp-dropdown' );
		if (form)
		{
			var hid = form.querySelector( 'input[name="csfapp"]' );
			if (hid)
			{
				console.log( 'Form will submit csfapp=' + hid.value );
			}
		}
	}, false);

	/*
		"All" tab
			ensure that when clicking each category, the correct section appears.
	*/

	const allTabBtn = document.getElementById( 'tabAll' );
	const tabPanes = document.querySelectorAll( '.tab-pane' );
	const tabLinks = document.querySelectorAll( '#myTabs a' );

	/*
		Certain pages do not contain this element; verify first
	*/

	if ( allTabBtn ) 
	{
		allTabBtn.addEventListener( 'click', ( e ) =>
		{
			e.preventDefault( );

			tabLinks.forEach( link => link.parentElement.classList.remove( 'active' ) );		// deactivate all tab links
			allTabBtn.parentElement.classList.add( 'active' );									// activate 'All' tab link
			tabPanes.forEach(pane => pane.classList.add( 'active' ));							// show all panes
		});

		/*
			handle other tab clicks normally
		*/

		tabLinks.forEach( link =>
		{
			if ( link.id !== 'tabAll' )
			{
				link.addEventListener( 'click', () =>
				{
					allTabBtn.parentElement.classList.remove( 'active' );						// remove 'All' tab active class
					tabPanes.forEach( p => p.classList.remove( 'active') ) ;					// remove 'active' from all panes

					/*
						activate the clicked pane
					*/
					
					const targetId = link.getAttribute( 'href' ).substring(1);
					const targetPane = document.getElementById( targetId );
					if (targetPane) targetPane.classList.add( 'active' );
				});
			}
		});
	}

	/*
		Footer › Button › Switch Theme
	*/

	const btnTheme = document.getElementById( 'btn-theme' );
	const html = document.documentElement;

	/*
		load saved theme or fallback to light
	*/
	
	const savedTheme = localStorage.getItem( 'theme' ) || 'light';
	html.setAttribute( 'data-theme', savedTheme );

	/*
		func to update button icon + tooltip
	*/

	function updateButton( theme )
	{
		if (theme === 'dark')
		{
			btnTheme.innerHTML = '<i class="ax-solid ax-sun"></i>';
			btnTheme.setAttribute( 'title', 'Switch to Light Theme' );
		}
		else
		{
			btnTheme.innerHTML = '<i class="ax-solid ax-moon"></i>';
			btnTheme.setAttribute( 'title', 'Switch to Dark Theme' );
		}
	}

	// Initial load
	updateButton( savedTheme );

	btnTheme.addEventListener( 'click', () =>
	{
		const current = html.getAttribute( 'data-theme' );
		const next = current === 'dark' ? 'light' : 'dark';

		/*
			transition css class to fade theme switches
		*/

		html.classList.add( 'theme-transition' );

		/*
			apply theme
		*/

		html.setAttribute( 'data-theme', next );
		localStorage.setItem( 'theme', next );
		updateButton( next );

		/*
			remove transition css class after animation finishes
				set slightly longer than CSS transition (0.1s)
		*/

		setTimeout(() =>
		{
			html.classList.remove( 'theme-transition' );
		}, 200);
	});

	/*
		remove "no-transition" class once page has loaded
	*/
	
	window.addEventListener( 'load', () =>
	{
		html.classList.remove( 'no-transition' );
	});

	/*
		Footer › Button › Logout
			Sync logout link from header to footer
	*/

	const headerLogout = document.querySelector( '.header-right .btn-logout' );
	const footerLogout = document.getElementById( 'btn-logout' );

	if ( headerLogout && footerLogout )
	{
		const logoutHref = headerLogout.getAttribute( 'href' );

		footerLogout.addEventListener( 'click', () =>
		{
			window.location.href = logoutHref;
		});

		footerLogout.setAttribute( 'title', 'Logout of CSF' );
	}

	/*
		Footer › Button › Github
	*/

	const githubBtn = document.getElementById( 'btn-github' );
	if ( githubBtn )
	{
		githubBtn.setAttribute( 'title', 'Visit Github repo' );
		githubBtn.addEventListener( 'click', () =>
		{
			window.open( 'https://github.com/Aetherinox/csf-firewall', '_blank' );
		});
	}
});