{"config": {"lang": ["en"], "separator": "[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])", "pipeline": ["stopWordFilter"]}, "docs": [{"location": "", "title": "ConfigServer Firewall", "text": "<p>Welcome to the ConfigServer documentation</p>"}, {"location": "about_csf/", "title": "About CSF", "text": "", "tags": ["info"]}, {"location": "about_csf/#about-configserver-firewall", "title": "About ConfigServer Firewall", "text": "<p>ConfigServer Firewall, also known as CSF, is a Stateful Packet Inspection (SPI) firewall, Login/Intrusion Detection and Security application for Linux servers. CSF provides better security for your server while giving you an advanced, easy to use interface for managing firewall settings. CSF configures your server\u2019s firewall to lock down public access to services and only allow certain connections, such as logging in to FTP, checking email, or loading websites.</p> <p>ConfigServer Firewall also comes with a service called Login Failure Daemon, or LFD. LFD watches your user activity for excessive login failures which are commonly seen during brute force attacks. If a large number of login failures are seen coming from the same IP address, that IP will immediately be temporarily blocked from all services on your server. These IP blocks will automatically expire, however they can be removed manually through the ConfigServer interface in WebHost Manager. In addition to removing IPs, CSF also allows you to manually whitelist or blacklist IPs in your firewall, as well as real-time monitoring for automatic IP blocks in LFD. Configuration details are covered in Managing Your CSF Firewall.</p> <p></p> <p>When installing CSF; you will be provided with two services:</p> Service Description <code>csf</code> ConfigServer Firewall (csf): SPI iptables firewall which allows you to restrict what is allowed to communicate with your server. <code>lfd</code> Login Failure Daemon (lfd): Process that runs all the time and periodically (every X seconds) scans the latest log file entries for login attempts against your server that continually fail within a short period of time. <p></p> <p></p> <p>A partial list of ConfigServer Firewall features are outlined below.</p> <p></p> <ul> <li>Straight-forward SPI iptables firewall script</li> <li>Daemon process that checks for login authentication failures for:<ul> <li>Courier imap, Dovecot, uw-imap, Kerio</li> <li>openSSH</li> <li>cPanel, WHM, Webmail (cPanel servers only)</li> <li>Pure-ftpd, vsftpd, Proftpd</li> <li>Password protected web pages (htpasswd)</li> <li>Mod_security failures (v1 and v2)</li> <li>Suhosin failures</li> <li>Exim SMTP AUTH</li> <li>Custom login failures with separate log file and regular expression matching</li> </ul> </li> <li>POP3/IMAP login tracking to enforce logins per hour</li> <li>SSH login notification</li> <li>SU login notification</li> <li>Excessive connection blocking</li> <li>UI Integration for cPanel, DirectAdmin, InterWorx, CentOS Web Panel (CWP), VestaCP, CyberPanel - and Webmin</li> <li>Easy upgrade between versions from within the control panel</li> <li>Easy upgrade between versions from shell</li> <li>Pre-configured to work on a cPanel server with all the standard cPanel ports open</li> <li>Pre-configured to work on a DirectAdmin server with all the standard DirectAdmin ports open</li> <li>Auto-configures the SSH port if it\u2019s non-standard on installation</li> <li>Block traffic on unused server IP addresses \u2013 helps reduce the risk to your server</li> <li>Alert when end-user scripts sending excessive emails per hour \u2013 for identifying spamming scripts</li> <li>Suspicious process reporting \u2013 reports potential exploits running on the server</li> <li>Excessive user processes reporting</li> <li>Excessive user process usage reporting and optional termination</li> <li>Suspicious file reporting \u2013 reports potential exploit files in /tmp and similar directories</li> <li>Directory and file watching \u2013 reports if a watched directory or a file changes</li> <li>Block traffic on a variety of Block Lists including DShield Block List and Spamhaus DROP List</li> <li>BOGON packet protection</li> <li>Pre-configured settings for Low, Medium or High firewall security (cPanel servers only)</li> <li>Works with multiple ethernet devices</li> <li>Server Security Check \u2013 Performs a basic security and settings check on the server (via cPanel/- DirectAdmin/Webmin UI)</li> <li>Allow Dynamic DNS IP addresses \u2013 always allow your IP address even if it changes whenever you connect to the internet</li> <li>Alert sent if server load average remains high for a specified length of time</li> <li>mod_security log reporting (if installed)</li> <li>Email relay tracking \u2013 tracks all email sent through the server and issues alerts for excessive usage (cPanel servers only)</li> <li>IDS (Intrusion Detection System) \u2013 the last line of detection alerts you to changes to system and application binaries</li> <li>SYN Flood protection</li> <li>Ping of death protection</li> <li>Port Scan tracking and blocking</li> <li>Permanent and Temporary (with TTL) IP blocking</li> <li>Exploit checks</li> <li>Account modification tracking \u2013 sends alerts if an account entry is modified, e.g. if the password is changed or the login shell</li> <li>Shared syslog aware</li> <li>Messenger Service \u2013 Allows you to redirect connection requests from blocked IP addresses to preconfigured text and html pages to inform the visitor that they have been blocked in the firewall. This can be particularly useful for those with a large user base and help process support requests more efficiently</li> <li>Country Code blocking \u2013 Allows you to deny or allow access by ISO Country Code</li> <li>Port Flooding Detection \u2013 Per IP, per Port connection flooding detection and mitigation to help block DOS attacks</li> <li>WHM root access notification (cPanel servers only)</li> <li>lfd Clustering \u2013 allows IP address blocks to be automatically propagated around a group of servers running lfd. It allows allows cluster-wide allows, removals and configuration changes</li> <li>Quick start csf \u2013 deferred startup by lfd for servers with large block and/or allow lists</li> <li>Distributed Login Failure Attack detection</li> <li>Temporary IP allows (with TTL)</li> <li>IPv6 Support with ip6tables</li> <li>Integrated UI \u2013 no need for a separate Control Panel or Apache to use the csf configuration</li> <li>Integrated support for cse within the Integrated UI</li> <li>cPanel Reseller access to per reseller configurable options Unblock, Deny, Allow and Search IP address blocks</li> <li>System Statistics \u2013 Basic graphs showing the performance of the server, e.g. Load Averages, CPU Usage, Memory Usage, etc</li> <li>ipset support for large IP lists</li> <li>Integrated with the CloudFlare Firewall</li> <li>\u2026lots more!</li> </ul> <p></p> <p></p>", "tags": ["info"]}, {"location": "about_patcher/", "title": "How this patcher works", "text": "", "tags": ["info"]}, {"location": "about_patcher/#how-patcher-works", "title": "How Patcher Works", "text": "<p>This section is optional to read. It simply outlines what the patcher does from the time of execution to better explain what will be happening on your systen.</p> <p></p> <ul> <li>Download all the files in the <code>/patch</code> folder to your system.</li> <li>Set the <code>install.sh</code> file to be executable.<ul> <li><code>sudo chmod +x install.sh</code></li> </ul> </li> <li>Run the <code>install.sh</code> script<ul> <li><code>sudo ./install.sh</code></li> <li>The script will first check to see if you have ConfigServer Firewall and all of its prerequisites installed. It will install them if they are not installed. This includes:<ul> <li>ConfigServer Firewall</li> <li>ipset package</li> <li>iptables / ip6tables package</li> </ul> </li> <li>Two new files will be added:<ul> <li><code>/usr/local/csf/bin/csfpre.sh</code></li> <li><code>/usr/local/csf/bin/csfpost.sh</code></li> </ul> </li> <li>The patches will then be moved onto your system in the locations:<ul> <li><code>/usr/local/include/csf/post.d/docker.sh</code></li> <li><code>/usr/local/include/csf/post.d/openvpn.sh</code></li> </ul> </li> <li>The <code>Docker</code> patch will first check to ensure you have the following:<ul> <li>Must have Docker installed</li> <li>This script will NOT install docker. You must do that.</li> <li>Must have a valid docker network adapter named <code>docker*</code> or <code>br-*</code></li> </ul> </li> <li>The <code>OpenVPN</code> patch will first check to ensure you have the following:<ul> <li>Must have OpenVPN Server installed</li> <li>Must have a valid network tunnel named <code>tun*</code> (tun0, tun1, etc)</li> <li>Must have an outside network adapter named either <code>eth*</code> or <code>enp*</code></li> <li>If any of the checks above are not true, OpenVPN patcher will skip</li> <li>You can check your list of network adapters using any of the commands below:<ul> <li><code>ip link show</code></li> <li><code>ifconfig</code></li> </ul> </li> <li>You can check if OpenVPN server is installed by using the commmand:<ul> <li><code>openvpn --version</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> <p></p> <ul> <li>If you attempt to run the <code>install.sh</code> any time after the initial setup:<ul> <li>The script will check if ConfigServer Firewall and all prerequisites are installed.<ul> <li>If they are not installed; they will be installed.</li> <li>If they are already installed; nothing will happen. The script does NOT update your packages. It installs the latest version of each package from the time that you run the script and do not already have ConfigServer Firewall installed.</li> </ul> </li> <li>The script will look at all of the files it added the first time and check the MD5 hash.<ul> <li>If the <code>csfpre</code>, <code>csfpost</code>, or patch files do not exist; they will be re-added to your system.</li> <li>If the patch files are different from the one the patcher comes with, you will be prompted / asked if you wish to overwrite your already installed copy</li> <li>If the patch files are the same as the ones which comes with the patcher; nothing will be done and it will skip that step.</li> </ul> </li> </ul> </li> </ul> <p></p> <p></p>", "tags": ["info"]}, {"location": "home/", "title": "Home", "text": "ConfigServer Firewall <p>This documentation is related to the github repository for ConfigServer Firewall; a popular and powerful firewall solution for Linux servers. On top of documentation for the software itself; this repository includes added patches which allow you to seamlessly integrate Docker and OpenVPN server with ConfigServer Firewall so that all of the services can communicate between each other without interruption.</p> <p>This documentation covers the following:</p> <ul> <li>Install, Configure &amp; Manage CSF (ConfigServer Firewall)</li> <li>Install CSF WebUI interface</li> <li>Install patches<ul> <li>Docker Integration</li> <li>OpenVPN Integration</li> </ul> </li> <li>Install dark theme</li> </ul> <p></p> <p></p>", "tags": ["home"]}, {"location": "about/backers/", "title": "Backers", "text": ""}, {"location": "about/changelog/", "title": "Changelog", "text": "", "tags": ["changelog"]}, {"location": "about/changelog/#changelog", "title": "Changelog", "text": "", "tags": ["changelog"]}, {"location": "about/changelog/#14.22.0", "title": "14.22.0 Sep 20, 2024", "text": "<ul> <li><code>build</code>: Updates ConfigServer Firewall to v14.22</li> <li><code>remove</code>: session IP match check from DA login</li> <li><code>added</code>: example spamassassin temp file regex to csf.fignore for new installations</li> </ul>", "tags": ["changelog"]}, {"location": "about/changelog/#14.21.1", "title": "14.21.1 Aug 30, 2024", "text": "<ul> <li><code>change</code>: add header animations, app name returns user home</li> <li><code>change</code>: clicking app logo or name now returns user to home page</li> <li><code>change</code>: add favicon</li> <li><code>change</code>: silence curl in openvpn patch</li> <li><code>change</code>: removal of <code>NETWORK_MANUAL_MODE</code>, <code>NETWORK_ADAPT_NAME</code></li> <li><code>fix</code>: docker inspect error when container has more than one network #1</li> <li><code>docs</code>: removal of manual mode values no longer needed</li> </ul>", "tags": ["changelog"]}, {"location": "about/changelog/#14.21.0", "title": "14.21.0 Aug 29, 2024", "text": "<ul> <li><code>change</code>: new animated checkbox input for firewall profiles</li> <li><code>change</code>: clicking logo in header now re-directs user to home</li> <li><code>change</code>: enhanced login screen animations</li> <li><code>change</code>: enhanced mobile view</li> <li><code>build</code>: update main source release to CSF v14.21</li> <li><code>build</code>: dark theme now compatible with CSF v14.21</li> <li><code>fix</code>: extended sized buttons with text cutting off</li> </ul>", "tags": ["changelog"]}, {"location": "about/changelog/#14.20.2", "title": "14.20.2 Aug 28, 2024", "text": "<ul> <li><code>feat</code>: added new login page to dark theme</li> <li><code>change</code>: optimizations to load order</li> <li><code>change</code>: updated toggle switches for various setting pages</li> <li><code>change</code>: start migration of in-line style properties over to stylesheet</li> <li><code>fix</code>: interface bug which existed in light theme which caused certain divs to break</li> </ul>", "tags": ["changelog"]}, {"location": "about/changelog/#14.20.1", "title": "14.20.1 Aug 27, 2024", "text": "<ul> <li><code>feat</code>: add dark theme</li> <li><code>feat</code>: add traefik integration</li> <li><code>feat</code>: add authentik integration</li> <li><code>change</code>: new ruleset for openvpn integration</li> <li><code>change</code>: auto disable csf TESTING mode when patch ran</li> <li><code>change</code>: add <code>-r, --report</code> to display status of dependencies and setup</li> <li><code>fix</code>: openvpn ip detection</li> <li><code>ci</code>: dark theme now included with all releases as .zip</li> <li><code>ci</code>: auto-update /docs/ on push to repo</li> <li><code>docs</code>: update to include traefik and authentic integration</li> </ul>", "tags": ["changelog"]}, {"location": "about/changelog/#14.20.0", "title": "14.20.0 Aug 07, 2024", "text": "<ul> <li><code>feat</code>: add new patch <code>openvpn</code></li> <li><code>feat</code>: add new command-line arguments:<ul> <li>add <code>-d, --dev</code> for advanced logging</li> <li>add <code>-f, --flush</code> to completely remove iptable rules</li> <li>add <code>-r, --report</code> to display dependency stats, app information, etc.</li> <li>add <code>-v, --version</code> to display patcher version</li> </ul> </li> <li><code>enhance</code>: docker patch now allows for multiple ip blocks to be whitelisted</li> <li><code>refactor</code>: re-write of script</li> <li><code>refactor</code>: merge all scripts into one</li> <li><code>bug</code>: fixed issue with manual mode being disabled - #1</li> <li><code>bug</code>: fixed error <code>\"docker network inspect\" requires at least 1 argument.</code> - #1</li> <li><code>bug</code>: fixed error <code>invalid port/service '-j' error</code></li> <li><code>docs</code>: rewrite documentation to include better instructions</li> <li><code>ci</code>: add workflow to automatically grab latest version of ConfigServer Firewall and append to each release</li> </ul>", "tags": ["changelog"]}, {"location": "about/changelog/#14.19.0", "title": "14.19.0 May 06, 2024", "text": "<ul> <li><code>change</code>: switch to using iptables-nft if it exists in <code>/usr/sbin/iptables-nft</code></li> <li><code>added</code>: <code>IO::Handle::clearerr()</code> call before reading data from a log file</li> <li><code>added</code>: \"Require all granted\" to the MESSENGER .htaccess file</li> <li><code>added</code> UID/GID rules to IPv6 if enabled</li> <li><code>modified</code>: dovecot regex to look for \"failed: Connection reset by peer\"</li> </ul>", "tags": ["changelog"]}, {"location": "about/contributing/", "title": "Contributing to CSF-Firewall", "text": "", "tags": ["info"]}, {"location": "about/contributing/#contributing", "title": "\u267e\ufe0f Contributing \u267e\ufe0f", "text": "", "tags": ["info"]}, {"location": "about/contributing/#about", "title": "About", "text": "<p>Below are a list of ways that you can help contribute to this project, as well as policies and guides that explain how to get started.</p> <p>Please review everything on this page before you submit your contribution.</p> <p></p> <p></p> <ul> <li>About</li> <li>Issues, Bugs, Ideas</li> <li>Contributing</li> <li>Before Submitting Pull Requests</li> <li>Conventional Commit Specification<ul> <li>Types</li> <li>Example 1:</li> <li>Example 2:</li> </ul> </li> <li>Committing</li> <li>Languages<ul> <li>Perl</li> <li>Indentation</li> <li>Line Length</li> <li>Blank Lines</li> <li>Imports</li> <li>Commenting</li> <li>Casing</li> <li>Python</li> <li>Indentation</li> <li>Line Length</li> <li>Blank Lines</li> <li>Imports</li> <li>Commenting</li> <li>Casing</li> <li>NodeJS</li> <li>Prettier</li> <li>ESLint<ul> <li>v9 \\&amp; Newer (Config)</li> <li>v8 \\&amp; Older (Config)</li> </ul> </li> <li>Packages</li> <li>Indentation</li> <li>Style</li> <li>Line Length</li> <li>Commenting</li> <li>Casing</li> </ul> </li> </ul> <p></p> <p></p>", "tags": ["info"]}, {"location": "about/contributing/#issues-bugs-ideas", "title": "Issues, Bugs, Ideas", "text": "<p>Stuff happens, and sometimes as best as we try, there may be issues within this project that we are unaware of. That is the great thing about open-source; anyone can use the program and contribute to making it better.</p> <p></p> <p>If you have found a bug, have an issue, or maybe even a cool idea; you can let us know by submitting it. However, before you submit your new issue, bug report, or feature request; head over to the Issues Section and ensure nobody else has already submitted it.</p> <p></p> <p>Once you are sure that your issue has not already being dealt with; you may submit a new issue at here. You'll be asked to specify exactly what your new submission targets, such as: - Bug report - Feature Suggestion</p> <p></p> <p>When writing a new submission; ensure you fill out any of the questions asked of you. If you do not provide enough information, we cannot help. Be as detailed as possible, and provide any logs or screenshots you may have to help us better understand what you mean. Failure to fill out the submission properly may result in it being closed without a response.</p> <p></p> <p>If you are submitting a bug report:</p> <ul> <li>Explain the issue</li> <li>Describe how you expect for a feature to work, and what you're seeing instead of what you expected.</li> <li>List possible options for a resolution or insight</li> <li>Provide screenshots, logs, or anything else that can visually help track down the issue.</li> </ul> <p></p> <p></p> <p></p> <p><code>^        back to top        ^</code></p> <p></p> <p></p>", "tags": ["info"]}, {"location": "about/contributing/#contributing_1", "title": "Contributing", "text": "<p>If you are looking to contribute to this project by actually submit your own code; please review this section completely. There is important information and policies provided below that you must follow for your pull request to get accepted.</p> <p>The source is here for everyone to collectively share and collaborate on. If you think you have a possible solution to a problem; don't be afraid to get your hands dirty.</p> <p>All contributions are made via pull requests. To create a pull request, you need a GitHub account. If you are unclear on this process, see GitHub's documentation on forking and pull requests. Pull requests should be targeted at the master branch.</p> <p></p>", "tags": ["info"]}, {"location": "about/contributing/#before-submitting-pull-requests", "title": "Before Submitting Pull Requests", "text": "<ul> <li>Follow the repository's code formatting conventions (see below);</li> <li>Include tests that prove that the change works as intended and does not add regressions;</li> <li>Document the changes in the code and/or the project's documentation;</li> <li>Your PR must pass the CI pipeline;</li> <li>When submitting your Pull Request, use one of the following branches:</li> <li>For bug fixes: <code>main</code> branch</li> <li>For features &amp; functionality: <code>development</code> branch</li> <li>Include a proper git commit message following the Conventional Commit Specification.</li> </ul> <p>If you have completed the above tasks, the pull request is ready to be reviewed and your pull request's label will be changed to \"Ready for Review\". At this point, a human will need to step in and manually verify your submission.</p> <p>Reviewers will approve the pull request once they are satisfied with the patch it will be merged.</p> <p></p>", "tags": ["info"]}, {"location": "about/contributing/#conventional-commit-specification", "title": "Conventional Commit Specification", "text": "<p>When committing your changes, we require you to follow the Conventional Commit Specification. The Conventional Commits is a specification for the format and content of a commit message. The concept behind Conventional Commits is to provide a rich commit history that can be read and understood by both humans and automated tools. Conventional Commits have the following format:</p> <p></p> <pre><code>&lt;type&gt;[(optional &lt;scope&gt;)]: &lt;description&gt;\n\n[optional &lt;body&gt;]\n\n[optional &lt;footer(s)&gt;]\n</code></pre> <p></p>", "tags": ["info"]}, {"location": "about/contributing/#types", "title": "Types", "text": "<p>Our repositories make use of the following commit tags:</p> <p></p> Type Description <code>feat</code> Introduce new feature <code>fix</code> Bug fix <code>chore</code> Includes technical or preventative maintenance task that is necessary for managing the app or repo, such as updating grunt tasks, but is not tied to any specific feature. Usually done for maintenance purposes.E.g: Edit .gitignore, .prettierrc, .prettierignore, .gitignore, eslint.config.js file <code>revert</code> Revert a previous commit <code>style</code> Update / reformat style of source code. Does not change the way app is implemented. Changes that do not affect the meaning of the codeE.g: white-space, formatting, missing semi-colons, change tabs to spaces, etc) <code>docs</code> Change website or markdown documents. Does not mean changes to the documentation generator script itself, only the documents created from the generator. E.g: documentation, readme.md or markdown <code>build</code> Changes to the build / compilation / packaging process or auxiliary tools such as doc generationE.g: create new build tasks, update release script, etc. <code>refactor</code> Change to production code that leads to no behavior difference,E.g: split files, rename variables, rename package, improve code style, etc. <code>test</code> Add or refactor tests, no production code change. Changes the suite of automated tests for the app. <code>ci</code> Changes related to Continuous Integration (usually <code>yml</code> and other configuration files). <code>perf</code> Performance improvement of algorithms or execution time of the app. Does not change an existing feature. <p></p>", "tags": ["info"]}, {"location": "about/contributing/#example-1", "title": "Example 1:", "text": "<pre><code>feat(core): bug affecting menu [#22]\n^\u2500\u2500\u2500^\u2500\u2500\u2500\u2500^  ^\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500^  ^\u2500\u2500\u2500^\n|   |       |                  |\n|   |       |                  \u2514\u2500\u2af8 (ISSUE):   Reference issue ID\n\u2502   \u2502       \u2502\n\u2502   \u2502       \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2af8 (DESC):   Summary in present tense. Use lower case not title case!\n\u2502   \u2502\n\u2502   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2af8 (SCOPE):  The package(s) that this change affects\n\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2af8 (TYPE):   See list above\n</code></pre>", "tags": ["info"]}, {"location": "about/contributing/#example-2", "title": "Example 2:", "text": "<pre><code>&lt;type&gt;(&lt;scope&gt;): &lt;short summary&gt; [issue]\n  |       |             |           |\n  |       |             |           \u2514\u2500\u2af8 Reference issue id (optional)\n  \u2502       \u2502             \u2502\n  \u2502       \u2502             \u2514\u2500\u2af8 Summary in present tense. Not capitalized. No period at the end.\n  \u2502       \u2502\n  \u2502       \u2514\u2500\u2af8 Commit Scope: animations|bazel|benchpress|common|compiler|compiler-cli|core|\n  \u2502                          elements|forms|http|language-service|localize|platform-browser|\n  \u2502                          platform-browser-dynamic|platform-server|router|service-worker|\n  \u2502                          upgrade|zone.js|packaging|changelog|docs-infra|migrations|ngcc|ve|\n  \u2502                          devtools....\n  \u2502\n  \u2514\u2500\u2af8 Commit Type: build|ci|doc|docs|feat|fix|perf|refactor|test\n                    website|chore|style|type|revert|deprecate\n</code></pre>", "tags": ["info"]}, {"location": "about/contributing/#committing", "title": "Committing", "text": "<p>If you are pushing a commit which addresses a submitted issue, reference your issue at the end of the commit message. You may also optionally add the major issue to the end of your commit body.</p> <p>References should be on their own line, following the word <code>Ref</code> or <code>Refs</code></p> <pre><code>Title:          fix(core): fix error message displayed to users. [#22]\nDescription:    The description of your commit\n\n                Ref: #22, #34, #37\n</code></pre> <p> </p>", "tags": ["info"]}, {"location": "about/contributing/#languages", "title": "Languages", "text": "<p>The formatting of code greatly depends on the language being used for this repository. We provide various different languages below as this guide is utilized across multiple repositories.</p> <ul> <li>Perl</li> <li>Python</li> <li>Javascript / Typescript / NodeJS</li> </ul> <p> </p>", "tags": ["info"]}, {"location": "about/contributing/#perl", "title": "Perl", "text": "<p>The following guidelines apply to any projects written with Perl:</p> <p> </p>", "tags": ["info"]}, {"location": "about/contributing/#indentation", "title": "Indentation", "text": "<p>Use <code>4 spaces</code> per indentation level.</p> <p></p> \u2705 Correct\u274c Incorrect <pre><code>if (scalar(keys %versions) == 0)\n{\n    if ($DEBUG)\n    {\n        dbg(\"=== csget: No version files to fetch \u2014 exiting ===\\n\");\n    }\n\n    my $status_file = \"/var/lib/configserver/last_run_no_versions\";\n    if (!-d \"/var/lib/configserver\")\n    {\n        system(\"mkdir -p /var/lib/configserver\") == 0\n            or die \"Failed to create /var/lib/configserver for status file\";\n    }\n\n    system(\"touch $status_file\") == 0\n        or warn \"Failed to create status file $status_file\";\n\n    exit 0;\n}\n</code></pre> <pre><code>if (scalar(keys %versions) == 0)\n{\n    if ($DEBUG)\n    {\n    dbg(\"=== csget: No version files to fetch \u2014 exiting ===\\n\");\n    }\n\n    my $status_file = \"/var/lib/configserver/last_run_no_versions\";\n    if (!-d \"/var/lib/configserver\")\n    {\n      system(\"mkdir -p /var/lib/configserver\") == 0\n      or die \"Failed to create /var/lib/configserver for status file\";\n    }\n\n    system(\"touch $status_file\") == 0\n    or warn \"Failed to create status file $status_file\";\n\n    exit 0;\n}\n</code></pre> <p> </p>", "tags": ["info"]}, {"location": "about/contributing/#line-length", "title": "Line Length", "text": "<p>Keep the maximum character count to <code>100 characters per line</code>. If you are revising old code which doesn't follow this guideline; please rewrite it to conform.</p> <p></p> \u2705 Correct\u274c Incorrect <pre><code># Each line is under 100 characters\nmy $status_file = \"/var/lib/configserver/last_run_no_versions\";\nsystem(\"mkdir -p /var/lib/configserver\") == 0\n    or die \"Failed to create /var/lib/configserver for status file\";\ndbg(\"=== csget: No version files to fetch \u2014 exiting ===\\n\");\n</code></pre> <pre><code># Lines exceed 100 characters\nmy $status_file = \"/var/lib/configserver/last_run_no_versions\"; \nsystem(\"mkdir -p /var/lib/configserver\") == 0 or die \"Failed to create /var/lib/configserver for status file\"; dbg(\"=== csget: No version files to fetch \u2014 exiting ===\\n\");\n</code></pre> <p> </p>", "tags": ["info"]}, {"location": "about/contributing/#blank-lines", "title": "Blank Lines", "text": "<p>Surround top-level functions and class definitions with a blank line in-between.</p> <p>Method definitions inside a class are surrounded by a single blank line.</p> <p>Extra blank lines may be used (sparingly) to separate groups of functions related to one another. Blank lines may be omitted between a bunch of related one-liners (e.g: set of dummy implementations).</p> <p></p> \u2705 Correct\u274c Incorrect <pre><code># Top-level functions separated by blank lines\n\nsub fetch_versions\n{\n    # fetch versions logic\n    dbg(\"Fetching versions...\\n\");\n}\n\nsub check_versions\n{\n    # check versions logic\n    dbg(\"Checking versions...\\n\");\n}\n\n# Methods inside a package/class with single blank lines in-between\npackage MyClass;\n\nsub new\n{\n    my ($class) = @_;\n    bless {}, $class;\n}\n\nsub run\n{\n    dbg(\"Running...\\n\");\n}\n\nsub stop\n{\n    dbg(\"Stopping...\\n\");\n}\n</code></pre> <pre><code># Top-level functions crammed together\nsub fetch_versions\n{\n    dbg(\"Fetching versions...\\n\");\n}\nsub check_versions\n{\n    dbg(\"Checking versions...\\n\");\n}\n\n# Methods inside a package/class with no spacing\npackage MyClass;\nsub new\n{\n    my ($class) = @_;\n    bless {}, $class;\n}\nsub run\n{\n    dbg(\"Running...\\n\");\n}\nsub stop\n{\n    dbg(\"Stopping...\\n\");\n}\n</code></pre> <p> </p>", "tags": ["info"]}, {"location": "about/contributing/#imports", "title": "Imports", "text": "<p>When importing modules using <code>use</code> and <code>require</code>, try to observe the following:</p> <ul> <li>No namespace polluting, only include what you need</li> <li>Use <code>require</code> for modules that are needed conditionally at runtime.</li> <li>Prefer <code>use</code> for compile-time imports when possible, often safter and catches errors early.</li> <li>Keep imports at the top of the file for clarity.</li> <li>Use fully qualified names when you don\u2019t need to import symbols.</li> <li>Group related imports together and separate core, CPAN, and local modules for readability.</li> <li>Avoid importing entire modules with use Module; unless you truly need everything.</li> <li>Document any unusual or non-standard imports so readers understand why they are used.</li> </ul> <p></p> \u2705 Correct\u274c Incorrect <pre><code># Only import what is needed, keep imports organized\nuse strict;\nuse warnings;\nuse File::Path qw(make_path);   # Only import make_path function\nuse List::Util qw(sum max);     # Only import specific functions\n\n# Local module import with fully qualified usage\nuse My::Utils;                  # We'll call functions as My::Utils::function()\n</code></pre> <pre><code># Polluting namespace by importing everything\nuse File::Path;                 # Imports all functions, even if not used\nuse List::Util;                 # Imports all functions unnecessarily\n\n# Mixing local and CPAN imports randomly in middle of code\nrequire My::Utils;              # Not at top of file\nmy $result = My::Utils::calculate(); \n</code></pre> <p> </p>", "tags": ["info"]}, {"location": "about/contributing/#commenting", "title": "Commenting", "text": "<p>Comment your code. It helps novice readers to better understand the process. It doesn't have to be painfully obvious explanations, but it helps to give an idea of what something does. Explanations should be quick and to the point.</p> <p>Do not include comments above functions that basically say the name of the function all over again.</p> <p>Please append <code>#</code> to the beginning of each line.</p> <p></p> \u2705 Correct\u274c Incorrect <pre><code># #\n#   Daemonize / fork the script when not in debug mode\n#       sudo perl -w /etc/cron.daily/csget --nosleep\n#       sudo perl -d /etc/cron.daily/csget\n#   \n#   - Forks the process: parent exits, freeing the terminal or cron\n#   - Child process continues running in the background\n#   - Changes working directory to root to avoid locking any directory\n#   - Closes standard filehandles (STDIN, STDOUT, STDERR) for background operation\n#   - Redirects STDIN from /dev/null\n#   - Redirects STDOUT and STDERR to the daemon log file\n#   - Ensures that all output/errors from the daemon are captured in the log\n# #\n\nunless ($DEBUG)\n{\n    if (my $pid = fork) { exit 0; }         # parent\n    elsif (defined($pid)) { $pid = $$; }    # child\n    else { die \"Unable to fork: $!\"; }      # cannot fork\n\n    chdir(\"/\");\n    close(STDIN);\n    close(STDOUT);\n    close(STDERR);\n    open(STDIN,  \"&lt;\", \"/dev/null\");\n    open(STDOUT, \"&gt;&gt;\", \"$log_daemon\")\n        or die \"Cannot open STDOUT log: $!\";\n    open(STDERR, \"&gt;&gt;\", \"$log_daemon\")\n        or die \"Cannot open STDERR log: $!\";\n}\n</code></pre> <pre><code># #\n#   does not run in debug mode\n# #\n\nunless ($DEBUG)\n{\n    if (my $pid = fork) { exit 0; }\n    elsif (defined($pid)) { $pid = $$; }\n    else { die \"Unable to fork: $!\"; }\n\n    chdir(\"/\");\n    close(STDIN);\n    close(STDOUT);\n    close(STDERR);\n    open(STDIN,  \"&lt;\", \"/dev/null\");\n    open(STDOUT, \"&gt;&gt;\", \"$log_daemon\")\n        or die \"Cannot open STDOUT log: $!\";\n    open(STDERR, \"&gt;&gt;\", \"$log_daemon\")\n        or die \"Cannot open STDERR log: $!\";\n}\n</code></pre> <p></p> <p>Just repeating the information over again:</p> <pre><code># #\n#   calculates numbers\n# #\n\nsub calculate_sum\n{\n    my ($a, $b) = @_;\n    return $a + $b;\n}\n</code></pre> <p> </p>", "tags": ["info"]}, {"location": "about/contributing/#casing", "title": "Casing", "text": "<ul> <li>Use <code>camelCase</code> for variable and object names<ul> <li>e.g: userName, totalCount</li> </ul> </li> <li>Functions should start with an uppercase letter (PascalCase) if following project convention<ul> <li>e.g: CalculateSum()</li> </ul> </li> <li>Enums and constants should be capitalized or use ALL_CAPS<ul> <li>e.g: STATUS_ACTIVE, ColorRed</li> </ul> </li> <li>When reviewing code, if you encounter names that do not follow this convention, update them in your pull request to maintain consistency.</li> </ul> \u2705 Correct\u274c Incorrect <pre><code>my $userName = \"Aetherinox\";        # camelCase variable\nmy $totalCount = 42;                # camelCase variable\n\nsub CalculateSum                    # Function starts with uppercase\n{\n    my ($a, $b) = @_;\n    return $a + $b;\n}\n\nuse constant STATUS_ACTIVE =&gt; 1;    # Enum/constant capitalized\n</code></pre> <pre><code>my $User_name = \"Aetherinox\";       # Underscores + incorrect capitalization\nmy $totalcount = 42;                # Missing camelCase\n\nsub calculate_sum                   # Function starts with lowercase\n{\n    my ($a, $b) = @_;\n    return $a + $b;\n}\n\nuse constant status_active =&gt; 1;    # Enum/constant not capitalized\n</code></pre>", "tags": ["info"]}, {"location": "about/contributing/#python", "title": "Python", "text": "<p>The following guidelines apply to any projects written with Python:</p> <p></p>", "tags": ["info"]}, {"location": "about/contributing/#indentation_1", "title": "Indentation", "text": "<p>Use <code>4 spaces</code> per indentation level.</p> <p></p> \u2705 Correct\u274c Incorrect <pre><code>def Encrypt( key : int, bytestr : bytes ):\n    res = b''\n    i_blk, left_bytes = divmod( len(bytestr), 3 )\n</code></pre> <pre><code>def Encrypt( key : int, bytestr : bytes ):\nres = b''\ni_blk, left_bytes = divmod( len(bytestr), 3 )\n</code></pre> <p></p>", "tags": ["info"]}, {"location": "about/contributing/#line-length_1", "title": "Line Length", "text": "<p>Keep the maximum character count to <code>100 characters per line</code>. If you are revising old code which doesn't follow this guideline; please rewrite it to conform.</p> <p></p> \u2705 Correct\u274c Incorrect <pre><code>import requests\n\n# Long URL split across multiple lines using parentheses\ndef fetch_user_data(user_id: str) -&gt; dict:\n    response = requests.get(\n        f\"https://api.example.com/users/{user_id}/details?\"\n        f\"include=posts,comments,likes,shares\"\n    )\n    return response.json()\n\n# Using backslash for line continuation (less preferred, usually for long strings)\ndef build_command() -&gt; str:\n    long_command = \"python script.py --option1 value1 --option2 value2 --option3 value3 \" \\\n                  \"--option4 value4 --option5 value5\"\n    return long_command\n</code></pre> <pre><code>import requests\n\n# URL is way too long on a single line, exceeds 100 characters\ndef fetch_user_data(user_id: str) -&gt; dict:\n    response = requests.get(f\"https://api.example.com/users/{user_id}/details?include=posts,comments,likes,shares\")\n    return response.json()\n\n# Long shell command all in one line, very hard to read\ndef build_command() -&gt; str:\n    long_command = \"python script.py --option1 value1 --option2 value2 --option3 value3 --option4 value4 --option5 value5\"\n    return long_command\n</code></pre> <p> </p>", "tags": ["info"]}, {"location": "about/contributing/#blank-lines_1", "title": "Blank Lines", "text": "<p>Surround top-level functions and class definitions with a blank line in-between.</p> <p>Method definitions inside a class are surrounded by a single blank line.</p> <p>Extra blank lines may be used (sparingly) to separate groups of functions related to one another. Blank lines may be omitted between a bunch of related one-liners (e.g: set of dummy implementations).</p> <p></p> \u2705 Correct\u274c Incorrect <pre><code># #\n#   Top-level function with a blank line before and after\n# #\n\ndef initialize_server():\n    print(\"Server initialized\")\n\n\ndef shutdown_server():\n    print(\"Server shutdown\")\n\n\nclass ServerManager:\n\n    # #\n    #   Method inside a class separated by a single blank line#\n    # #\n\n    def start(self):\n        print(\"Starting server\")\n\n    def stop(self):\n        print(\"Stopping server\")\n</code></pre> <pre><code>def initialize_server():\n    print(\"Server initialized\")\ndef shutdown_server():\n    print(\"Server shutdown\")\nclass ServerManager:\n    def start(self):\n        print(\"Starting server\")\n    def stop(self):\n        print(\"Stopping server\")\n</code></pre> <p> </p>", "tags": ["info"]}, {"location": "about/contributing/#imports_1", "title": "Imports", "text": "<p>Imports should usually be on separate lines:</p> <p></p> \u2705 Correct\u274c Incorrect <pre><code>import os\nimport sys\n</code></pre> <pre><code>from mypkg import (\n    siblingA,\n    siblingB,\n    siblingC,\n)\n</code></pre> <pre><code>import sys, os\n</code></pre> <pre><code>from mypkg import siblingA\nfrom mypkg import siblingB\nfrom mypkg import siblingC\n</code></pre> <pre><code>from mypkg import siblingA, siblingB, siblingC\n</code></pre> <p></p>", "tags": ["info"]}, {"location": "about/contributing/#commenting_1", "title": "Commenting", "text": "<p>Please follow these guidelines for commenting:</p> <ul> <li>Use comments to explain why something is done, not what is obvious from the code.</li> <li>Keep comments concise and clear.</li> <li>Do not repeat the function name or code in the comment.</li> <li>Block comments should be used to give a brief explanation of something to note as a developer.</li> <li>Docstrings should be used when writing important descriptions, arguments usage, etc.</li> <li>Wrap block comments in <code>#</code>, two on top, two on bottom, one per comment line.</li> </ul> <p></p> \u2705 Correct\u274c Incorrect <pre><code># #\n#   Docstring Example\n# #\n\ndef fetch_user_data(user_id: str) -&gt; dict:\n    \"\"\"\n    Fetches user data from the API.\n\n    Args:\n        user_id (str): The unique identifier for the user.\n\n    Returns:\n        dict: JSON data containing user information such as\n              'name', 'email', 'posts', and 'comments'.\n\n    Raises:\n        requests.RequestException: If the API call fails.\n    \"\"\"\n    import requests\n    response = requests.get(f\"https://api.example.com/users/{user_id}\")\n    response.raise_for_status()\n    return response.json()\n</code></pre> <pre><code>def fetch_user_data(user_id: str) -&gt; dict:\n    \"\"\"Fetch user data\"\"\"\n    import requests\n    response = requests.get(f\"https://api.example.com/users/{user_id}\")\n    return response.json()  # return data\n</code></pre> <p> </p>", "tags": ["info"]}, {"location": "about/contributing/#casing_1", "title": "Casing", "text": "<ul> <li>Stick to <code>camelCase</code>; unless:</li> <li>naming functions, capitalize the first letter</li> <li>Capitalize enums</li> <li>If you see code not conforming with this, please revise it in your pull request.</li> </ul> <p>[!TIP] \u2705 Correct </p><pre><code>def Encrypt( key : int, byteStr : bytes ):\n    res = b''\n    iBlock, leftBytes = divmod( len(byteStr), 3 )\n</code></pre><p></p> <p></p> <p>[!CAUTION] \u274c Wrong </p><pre><code>def encrypt( key : int, bytestr : bytes ):\n    res = b''\n    i_blk, left_bytes = divmod( len(bytestr), 3 )\n</code></pre><p></p> <p></p> <p></p> <p><code>^        back to top        ^</code></p> <p></p> <p></p>", "tags": ["info"]}, {"location": "about/contributing/#nodejs", "title": "NodeJS", "text": "<p>The following allows you to configure ESLint and Prettier.</p> <p> </p>", "tags": ["info"]}, {"location": "about/contributing/#prettier", "title": "Prettier", "text": "<p>We have opted to make use of ESLint over Prettier. We provide a detailed ESLint flag config file with very specific linting rules. Please review that section for more information.</p> <p> </p>", "tags": ["info"]}, {"location": "about/contributing/#eslint", "title": "ESLint", "text": "<p>Within the root folder of the repo, there are several configuration files which you should be using within the project. These files dictate how prettier and eslint will behave and what is acceptable / not acceptable.</p> <p></p> <p>Pick the config file below depending on which version of ESLint you are using. The v8 and older <code>.eslint</code> may not be there if we have migrated over to an Eslint v9 flat config file:</p> <p></p>", "tags": ["info"]}, {"location": "about/contributing/#v9-newer-config", "title": "v9 &amp; Newer (Config)", "text": "<p>Our NodeJS applications require that you utilize ESLint v9 or newer which makes use of a flat config structure. You may find a copy of our flat config at the link below:</p> <ul> <li>\ud83d\udcc4 eslint.config.mjs</li> </ul> <p></p>", "tags": ["info"]}, {"location": "about/contributing/#v8-older-config", "title": "v8 &amp; Older (Config)", "text": "<ul> <li>We no longer utilize any version of ESLint older than version 9.</li> </ul> <p>Note</p> <p>When submitting your pull request, these linting and style rules will be verified with all of your files.  If you did not follow these rules; the linter tests on your pull request will fail; and you'll be expected  to correct these issues before your submission will be transferred over for human review.</p> <p> </p>", "tags": ["info"]}, {"location": "about/contributing/#packages", "title": "Packages", "text": "<p>We use the following packages for linting and prettier.</p> <p></p> Package Repo File Description @stylistic/eslint-plugin-js package.json JavaScript stylistic rules for ESLint, migrated from eslint core. @stylistic/eslint-plugin-ts package.json TypeScript stylistic rules for ESLint, migrated from typescript-eslint. @stylistic/eslint-plugin-plus package.json Supplementary rules introduced by ESLint Stylistic. eslint-plugin-prettier package.json Runs Prettier as an ESLint rule and reports differences as individual ESLint issues. <p></p> <p>You can add the following to your <code>package.json</code> file:</p> <pre><code>    \"devDependencies\": {\n        \"@types/uuid\": \"^10.0.0\",\n        \"all-contributors-cli\": \"^6.26.1\",\n        \"uuid\": \"^11.1.0\",\n        \"env-cmd\": \"^10.1.0\",\n        \"eslint\": \"9.17.0\",\n        \"eslint-plugin-chai-friendly\": \"^1.0.1\",\n        \"eslint-plugin-import\": \"2.31.0\",\n        \"eslint-plugin-n\": \"17.15.0\",\n        \"eslint-plugin-promise\": \"7.2.1\",\n        \"@stylistic/eslint-plugin-js\": \"^3.1.0\"\n    },\n</code></pre> <p> </p>", "tags": ["info"]}, {"location": "about/contributing/#indentation_2", "title": "Indentation", "text": "<p>Use <code>4 spaces</code> per indentation level.</p> <p> </p>", "tags": ["info"]}, {"location": "about/contributing/#style", "title": "Style", "text": "<p>For files that are not controlled by Prettier or ESLint; use <code>Allman Style</code>.  Braces should be on their own lines, and any code inside the braces should be indented 4 spaces.</p> <p></p> <pre><code>return {\n    status: \"failure\",\n    user:\n    {\n        id: \"1aaa35aa-fb3a-62ae-ffec-a14g7fc401ac\",\n        label: \"Test String\",\n    }\n};\n\nwhile (x == y)\n{\n    foo();\n    bar();\n}\n</code></pre> <p> </p>", "tags": ["info"]}, {"location": "about/contributing/#line-length_2", "title": "Line Length", "text": "<p>Keep the maximum character count to <code>100 characters per line</code>. The configs on this page have prettier automatically set up to detect more than 100 characters per line.</p> <p></p>", "tags": ["info"]}, {"location": "about/contributing/#commenting_2", "title": "Commenting", "text": "<p>Comment your code. It helps novice readers to better understand the process. You may use block style commenting, or single lines:</p> <pre><code>/*\n    tests to decide if the end-user is running on Darwin or another platform.\n*/\n\ntest(`Return true if platform is Darwin`, () =&gt;\n{\n    process.platform = 'darwin';\n    expect(bIsDarwin()).toBe(true);\n});\n\ntest(`Return false if platform is not Darwin`, () =&gt;\n{\n    process.platform = 'linux';\n    expect(bIsDarwin()).toBe(false);\n});\n</code></pre> <p></p>", "tags": ["info"]}, {"location": "about/contributing/#casing_2", "title": "Casing", "text": "<p>Stick to <code>camelCase</code> as much as possible. </p> <pre><code>let myVar = 'one';\nlet secondVar = 'two';\n</code></pre> <p></p> <p>If you are defining a new environment variable; it must be in ALL CAPS in the <code>Dockerfile</code>:</p> <pre><code>ENV DIR_BUILD=/usr/src/app\nENV DIR_RUN=/usr/bin/app\nENV URL_REPO=\"https://github.com/Aetherinox/csf-firewall\"\nENV WEB_IP=\"0.0.0.0\"\nENV WEB_PORT=4124\nENV LOG_LEVEL=4\nENV TZ=\"Etc/UTC\"\n</code></pre> <p></p> <p>Then you may call your new environment variable within the Javascript code; and ensure you define a default value to correct any user misconfigurations:</p> <pre><code>const envUrlRepo = process.env.URL_REPO || 'https://git.binaryninja.net/binaryninja';\nconst envStreamQuality = process.env.STREAM_QUALITY || 'hd';\nconst envFileM3U = process.env.FILE_PLAYLIST || 'playlist.m3u8';\nconst envFileXML = process.env.FILE_EPG || 'xmltv.xml';\nconst envFileTAR = process.env.FILE_TAR || 'xmltv.xml.gz';\n</code></pre> <p> </p> <p><code>^        back to top        ^</code></p> <p> </p> <p> </p>", "tags": ["info"]}, {"location": "about/conventions/", "title": "Conventions", "text": ""}, {"location": "about/conventions/#conventions", "title": "Conventions", "text": "<p>This documentation use some symbols for illustration purposes. Before you read on, please make sure you've made yourself familiar  with the following list of conventions on this page, as they are used quite frequently.</p> <p></p>"}, {"location": "about/conventions/#general-badges", "title": "General Badges", "text": "<p>The badges in this section are for general use.</p> <p></p>"}, {"location": "about/conventions/#flags", "title": "Flags", "text": "Description <p>These icons denote / mark a particular item with a specific category type. Use these to indicate that a feature or service is <code>experimental</code>,  <code>dangerous</code>, <code>setting</code>, or <code>required</code>.</p> <code>Examples</code> <p> Default  <code>&lt;!-- md:flag --&gt;</code></p> <p> Experimental  <code>&lt;!-- md:flag experimental --&gt;</code></p> <p> Required  <code>&lt;!-- md:flag required --&gt;</code></p> <p> Customization  <code>&lt;!-- md:flag customization --&gt;</code></p> <p> Metadata  <code>&lt;!-- md:flag metadata --&gt;</code></p> <p> Dangerous  <code>&lt;!-- md:flag dangerous --&gt;</code></p> <p> Multiple  <code>&lt;!-- md:flag multiple --&gt;</code></p> <p> Setting  <code>&lt;!-- md:flag setting --&gt;</code></p> <p></p>"}, {"location": "about/conventions/#control", "title": "Controls", "text": "Description <p>These icons deonote what type of control a specified setting uses if the settings are controlled by a graphical user interface.</p> <code>Examples</code> <p> default  <code>&lt;!-- md:control --&gt;</code></p> <p> toggle  <code>&lt;!-- md:control toggle --&gt;</code></p> <p> toggle on  <code>&lt;!-- md:control toggle_on --&gt;</code></p> <p> toggle off  <code>&lt;!-- md:control toggle_off --&gt;</code></p> <p> textbox  <code>&lt;!-- md:control textbox --&gt;</code></p> <p> dropdown  <code>&lt;!-- md:control dropdown --&gt;</code></p> <p> button  <code>&lt;!-- md:control button --&gt;</code></p> <p> slider  <code>&lt;!-- md:control slider --&gt;</code></p> <p> docker volume  <code>&lt;!-- md:control volume --&gt;</code></p> <p> env variable  <code>&lt;!-- md:control env --&gt;</code></p> <p> <code>&lt;!-- md:control color #E5E5E5 #121315 --&gt;</code></p> <p></p>"}, {"location": "about/conventions/#version", "title": "Release Type", "text": "Description <p>The tag symbol in conjunction with a version number denotes when a specific feature or functionality was added. Make sure  you're at least on this version if you want to use the specified feature or functionality.</p> <code>Examples</code> <p> default  <code>&lt;!-- md:version --&gt;</code></p> <p> stable  <code>&lt;!-- md:version stable --&gt;</code></p> <p> development  <code>&lt;!-- md:version development --&gt;</code></p> <p>1.6.1 <code>&lt;!-- md:version 1.6.1 --&gt;</code></p> <p>1.6.1 <code>&lt;!-- md:version stable-1.6.1 --&gt;</code></p> <p>1.6.1 <code>&lt;!-- md:version development-1.6.1 --&gt;</code></p> <p></p>"}, {"location": "about/conventions/#default", "title": "Default Value", "text": "Description <p>Denotes what the default value is for a particular setting. If you ever change a setting and wish to revert back to the default value; this is the value you should use.</p> <code>Examples</code> <p> Specified setting has a default value  <code>&lt;!-- md:default --&gt;</code></p> <p> Specified setting has no default value and is empty  <code>&lt;!-- md:default none --&gt;</code></p> <p> Specified setting is automatically computed by the app  <code>&lt;!-- md:default computed --&gt;</code></p> <p><code>false</code> Default value is false  <code>&lt;!-- md:default false --&gt;</code></p> <p></p>"}, {"location": "about/conventions/#command", "title": "Command", "text": "Description <p>Denotes that this item is a command which can be executed via a terminal, command prompt or some other console.</p> <code>Examples</code> <p> Specified setting has a default value  <code>&lt;!-- md:command --&gt;</code></p> <p><code>-s,  --start</code> Specified setting has a default value  <code>&lt;!-- md:command -s, --start --&gt;</code></p> <p></p>"}, {"location": "about/conventions/#3rdparty", "title": "3<sup>rd</sup> Party", "text": "Description <p>Denotes that this item is provided by a 3<sup>rd</sup> party service or app which is not directly associated with this application.</p> <code>Examples</code> <p> <code>&lt;!-- md:3rdparty --&gt;</code></p> <p>mike <code>&lt;!-- md:3rdparty mike --&gt;</code></p> <p></p>"}, {"location": "about/conventions/#plugin", "title": "Plugin", "text": "Description <p>Denotes that this item requires a specific plugin in order to function.</p> <code>Examples</code> <p> <code>&lt;!-- md:plugin --&gt;</code></p> <p>name <code>&lt;!-- md:plugin name --&gt;</code></p> <p>[typeset] \u2013 built-in With Details  <code>&lt;!-- md:plugin [typeset] \u2013 built-in --&gt;</code></p> <p> </p>"}, {"location": "about/conventions/#feature", "title": "Feature", "text": "Description <p>Denotes a feature available within the app.</p> <code>Examples</code> <p> <code>&lt;!-- md:feature --&gt;</code></p> <p>name <code>&lt;!-- md:feature name --&gt;</code></p> <p> </p>"}, {"location": "about/conventions/#requires", "title": "Requires File", "text": "Description <p>Denotes that a particular feature or functionality looks for, or requires a specific file on your system.</p> <code>Examples</code> <p> <code>&lt;!-- md:requires --&gt;</code></p> <p>/etc/csf/csf.conf <code>&lt;!-- md:requires /etc/csf/csf.conf --&gt;</code></p> <p> </p>"}, {"location": "about/conventions/#source", "title": "Source File", "text": "Description <p>Denotes a feature available within the app.</p> <code>Examples</code> <p> <code>&lt;!-- md:source --&gt;</code></p> <p>/etc/csf/csf.conf <code>&lt;!-- md:source /etc/csf/csf.conf --&gt;</code></p> <p> </p>"}, {"location": "about/conventions/#setting", "title": "Configurable Settings", "text": "DescriptionUsage <p>Denotes that this item is a configurable setting. Using this requires that you place it within a heading, typically <code>h4</code></p> <code>Examples</code> <pre><code>#### &lt;!-- md:setting config.archive --&gt;\n</code></pre> <p></p>"}, {"location": "about/conventions/#config.archive", "title": "<code>archive</code>", "text": ""}, {"location": "about/conventions/#extension", "title": "Markdown extension", "text": "DescriptionUsage <p>This symbol denotes that the thing described is a Markdown element. When adding links, ensure you create a reference-style link</p> <code>Examples</code> <p> <code>&lt;!-- md:markdown --&gt;</code></p> <p>admonition <code>&lt;!-- md:markdown [admonition][Admonition] --&gt;</code></p> <pre><code>:   &lt;!-- md:markdown [admonition][Admonition] --&gt;\n\n[Admonition]: https://python-markdown.github.io/extensions/admonition/\n</code></pre> <p> </p>"}, {"location": "about/conventions/#file-preview", "title": "File Preview", "text": "Description <p>Creates a badge which allows a user to download a file. Badges will contain three sections:</p> <ol> <li>View Example</li> <li>Download Example</li> <li>.ext filename extension</li> </ol> <code>Examples</code> <p> Icon Only  </p> <p><code>.rar</code> Left Aligned</p> <p>Right Aligned <code>.rar</code></p> <p><code>&lt;!-- md:file something.rar --&gt;</code> Right Aligned</p> <p><code>&lt;!-- md:file something.rar left</code> \u2192 Left Aligned</p> <p><code>&lt;!-- md:file something.rar right</code> \u2192 Right Aligned</p> <p> </p>"}, {"location": "about/conventions/#backers", "title": "Backers Only", "text": "Description <p>The pumping heart symbol denotes that a specific feature or behavior is only available to backers.  Normal users will not have access to this particular item.</p> <code>Examples</code> <p> Backer  </p> <p> </p> <p></p> <p></p>"}, {"location": "about/conventions/#options", "title": "Options", "text": "<p>Options are another form of setting which lists what the option does, and then examples of how it works.</p> <code>rss.enabled</code> <p><code>true</code> This option specifies whether the plugin is enabled when building your project. If you want to speed up local builds, you can use an [environment variable][mkdocs.env]:</p> <pre><code>plugins:\n  - rss:\n      enabled: !ENV [CI, false]\n</code></pre> <code>rss.match_path</code> <p><code>.*</code> This option specifies which pages should be included in the feed. For example, to only include blog posts in the feed, use the following regular expression:</p> <pre><code>plugins:\n  - rss:\n      match_path: blog/posts/.*\n</code></pre> <p> </p> <p></p>"}, {"location": "about/conventions/#general-examples", "title": "General Examples", "text": "<p>These are just generic examples with no specific purpose. They demonstrate how badges can be used.</p> <p></p>"}, {"location": "about/conventions/#debug_enabled", "title": "DEBUG_ENABLED", "text": "<p>2.0.0 <code>false</code> <code>.zip</code></p> <p>This is an example setting.</p> example.md <pre><code>#### &lt;!-- md:flag setting --&gt; DEBUG_ENABLED \n&lt;!-- md:version stable-2.0.0 --&gt; &lt;!-- md:default `false` --&gt; &lt;!-- md:flag required --&gt; &lt;!-- md:file test.zip --&gt;\n\nThis is an example setting.\n</code></pre> <p> </p>"}, {"location": "about/csf/", "title": "About ConfigServer Firewall Suite", "text": "", "tags": ["info"]}, {"location": "about/csf/#about-configserver-firewall-security", "title": "About ConfigServer Firewall &amp; Security", "text": "<p>ConfigServer Firewall &amp; Security (CSF) is a comprehensive security suite for Linux servers, first released in 2005. At its core, CSF is a Stateful Packet Inspection (SPI) firewall and intrusion detection system that works as a front-end to iptables or nftables, the standard Linux firewall frameworks.</p> <p></p> <p></p>", "tags": ["info"]}, {"location": "about/csf/#about", "title": "About", "text": "<p>ConfigServer Firewall &amp; Security, also known as CSF, is a Stateful Packet Inspection (SPI) firewall and Login/Intrusion Detection and Security application for Linux servers which started back in 2005. CSF works as a front-end to iptables or nftables, configuring your server\u2019s firewall rules to lock down public access to services while allowing only approved connections. This provides better security for your server while giving you an advanced, easy-to-use interface for managing firewall settings. With CSF in place, you can safely permit activities such as logging in via FTP or SSH, checking email, and loading websites, while unauthorized access attempts are blocked.</p> <p></p> <p>As part of the ConfigServer Firewall suite, CSF includes the companion service Login Failure Daemon (LFD). LFD continuously monitors authentication activity on your server to detect excessive login failures, a common sign of brute force attacks. When repeated failures are detected from the same IP address, LFD will automatically and temporarily block that IP from accessing any services on your server. These blocks expire after a set period, but they can also be manually removed through the ConfigServer interface. You can also extend the duration of a blocked IP address, or block an IP indefinitely.</p> <p></p> <p>Beyond automated blocking, CSF provides tools to whitelist trusted IPs, blacklist unwanted IPs, and monitor real-time activity of LFD\u2019s actions. Detailed instructions for configuring these features are covered in Managing Your CSF Firewall.</p> <p></p> <p>When you install the CSF suite on your server; you will be provided with two services:</p> Service Description <code>csf</code> ConfigServer Firewall (csf): SPI iptables firewall which allows you to restrict what is allowed to communicate with your server. <code>lfd</code> Login Failure Daemon (lfd): Process that runs all the time and periodically (every X seconds) scans the latest log file entries for login attempts against your server that continually fail within a short period of time. <p></p> <p></p>", "tags": ["info"]}, {"location": "about/csf/#features", "title": "Features", "text": "<p>Interested in Config Server Firewall &amp; Security? Check out a partial list of the included features below:</p> <p></p>", "tags": ["info"]}, {"location": "about/csf/#firewall-network-security", "title": "Firewall &amp; Network Security", "text": "<ul> <li>Easy-to-use SPI firewall powered by iptables/nftables</li> <li>Pre-configured for cPanel and DirectAdmin (standard ports open by default)</li> <li>Auto-detects non-standard SSH ports during installation</li> <li>Works with multiple network interfaces</li> <li>Supports IPv6 via ip6tables</li> <li>Block traffic on unused server IPs to reduce attack surface</li> <li>Country-based access control (allow/deny by ISO Country Code)</li> <li>Protection against:<ul> <li>SYN floods</li> <li>Ping of Death</li> <li>Port scans</li> <li>Connection flooding (per IP/per port detection)</li> </ul> </li> <li>Permanent or temporary IP blocking (with TTL support)</li> <li>Integration with blocklists like DShield and Spamhaus DROP</li> <li>BOGON packet protection</li> </ul>", "tags": ["info"]}, {"location": "about/csf/#login-user-monitoring", "title": "Login &amp; User Monitoring", "text": "<ul> <li>Login Failure Daemon (LFD): detects repeated login failures (brute force protection)</li> <li>Monitors authentication for:<ul> <li>SSH (OpenSSH)</li> <li>FTP (Pure-ftpd, vsftpd, Proftpd)</li> <li>Mail (Courier IMAP, Dovecot, Kerio, Exim SMTP AUTH, POP3/IMAP)</li> <li>Web (cPanel/WHM, Webmail, htpasswd-protected pages)</li> <li>ModSecurity (v1 &amp; v2)</li> <li>Suhosin</li> <li>Custom services via regex and log file matching</li> </ul> </li> <li>POP3/IMAP login tracking (limit logins per hour)</li> <li>Distributed attack detection (across multiple servers)</li> <li>LFD clustering \u2013 share blocks/whitelists across a server group</li> <li>Temporary IP allows (with TTL)</li> </ul>", "tags": ["info"]}, {"location": "about/csf/#alerts-notifications", "title": "Alerts &amp; Notifications", "text": "<ul> <li>SSH and su login notifications</li> <li>Root access notifications (WHM)</li> <li>Alerts for:<ul> <li>High server load average</li> <li>Excessive email sending per hour (spamming detection)</li> <li>Suspicious processes running</li> <li>Abnormal file activity in /tmp and similar directories</li> <li>Excessive user processes or resource usage</li> <li>Account changes (password updates, shell changes, etc.)</li> </ul> </li> </ul>", "tags": ["info"]}, {"location": "about/csf/#intrusion-detection-exploit-protection", "title": "Intrusion Detection &amp; Exploit Protection", "text": "<ul> <li>Intrusion Detection System (IDS) \u2013 monitors system/application binaries</li> <li>Suspicious process and file reporting</li> <li>Exploit checks</li> <li>Directory and file integrity monitoring</li> <li>ModSecurity log reporting</li> <li>Messenger Service \u2013 optionally redirect blocked users to a custom page explaining why access is denied</li> </ul>", "tags": ["info"]}, {"location": "about/csf/#management-control", "title": "Management &amp; Control", "text": "<ul> <li>Integrated UI for major control panels:<ul> <li>cPanel, DirectAdmin, InterWorx, CWP, VestaCP, CyberPanel, Webmin</li> </ul> </li> <li>cPanel reseller access (per-reseller firewall controls: Allow, Deny, Unblock, Search)</li> <li>Integrated with CloudFlare Firewall</li> <li>Upgrade firewall directly from control panel or shell</li> <li>Quick start mode for servers with large allow/deny lists</li> <li>Easy Dynamic DNS support (auto-allow your changing home IP)</li> <li>System statistics &amp; graphs (CPU, load, memory, etc.)</li> <li>ipset support for handling large IP lists efficiently</li> <li>Integrated support for cse within the UI</li> </ul>", "tags": ["info"]}, {"location": "about/license/", "title": "License", "text": ""}, {"location": "about/license/#license", "title": "License", "text": "<p>MIT License</p> <p>Copyright \u00a9 2024 Aetherinox</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p> <p></p> <p></p>"}, {"location": "about/patcher/", "title": "How this patcher works", "text": "", "tags": ["info"]}, {"location": "about/patcher/#how-patcher-works", "title": "How Patcher Works", "text": "<p>This section is optional to read. It simply outlines what the patcher does from the time of execution to better explain what will be happening on your systen.</p> <p></p> <ul> <li>Download all the files in the <code>/patch</code> folder to your system.</li> <li>Set the <code>install.sh</code> file to be executable.<ul> <li><code>sudo chmod +x install.sh</code></li> </ul> </li> <li>Run the <code>install.sh</code> script<ul> <li><code>sudo ./install.sh</code></li> <li>The script will first check to see if you have ConfigServer Firewall and all of its prerequisites installed. It will install them if they are not installed. This includes:<ul> <li>ConfigServer Firewall</li> <li>ipset package</li> <li>iptables / ip6tables package</li> </ul> </li> <li>Two new files will be added:<ul> <li><code>/usr/local/csf/bin/csfpre.sh</code></li> <li><code>/usr/local/csf/bin/csfpost.sh</code></li> </ul> </li> <li>The patches will then be moved onto your system in the locations:<ul> <li><code>/usr/local/include/csf/post.d/docker.sh</code></li> <li><code>/usr/local/include/csf/post.d/openvpn.sh</code></li> </ul> </li> <li>The <code>Docker</code> patch will first check to ensure you have the following:<ul> <li>Must have Docker installed</li> <li>This script will NOT install docker. You must do that.</li> <li>Must have a valid docker network adapter named <code>docker*</code> or <code>br-*</code></li> </ul> </li> <li>The <code>OpenVPN</code> patch will first check to ensure you have the following:<ul> <li>Must have OpenVPN Server installed</li> <li>Must have a valid network tunnel named <code>tun*</code> (tun0, tun1, etc)</li> <li>Must have an outside network adapter named either <code>eth*</code> or <code>enp*</code></li> <li>If any of the checks above are not true, OpenVPN patcher will skip</li> <li>You can check your list of network adapters using any of the commands below:<ul> <li><code>ip link show</code></li> <li><code>ifconfig</code></li> </ul> </li> <li>You can check if OpenVPN server is installed by using the commmand:<ul> <li><code>openvpn --version</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> <p></p> <ul> <li>If you attempt to run the <code>install.sh</code> any time after the initial setup:<ul> <li>The script will check if ConfigServer Firewall and all prerequisites are installed.<ul> <li>If they are not installed; they will be installed.</li> <li>If they are already installed; nothing will happen. The script does NOT update your packages. It installs the latest version of each package from the time that you run the script and do not already have ConfigServer Firewall installed.</li> </ul> </li> <li>The script will look at all of the files it added the first time and check the MD5 hash.<ul> <li>If the <code>csfpre</code>, <code>csfpost</code>, or patch files do not exist; they will be re-added to your system.</li> <li>If the patch files are different from the one the patcher comes with, you will be prompted / asked if you wish to overwrite your already installed copy</li> <li>If the patch files are the same as the ones which comes with the patcher; nothing will be done and it will skip that step.</li> </ul> </li> </ul> </li> </ul> <p></p> <p></p>", "tags": ["info"]}, {"location": "about/tags/", "title": "Tags", "text": ""}, {"location": "about/tags/#tags", "title": "Tags", "text": "<p>Following is a list of relevant tags:</p>"}, {"location": "about/tags/#tag:changelog", "title": "changelog", "text": "<ul> <li>            Changelog          </li> </ul>"}, {"location": "about/tags/#tag:cheatsheet", "title": "cheatsheet", "text": "<ul> <li>            Cheatsheet: Troubleshooting          </li> <li>            Commands          </li> <li>            Example Configs          </li> <li>            Home          </li> <li>            Structure          </li> </ul>"}, {"location": "about/tags/#tag:configs", "title": "configs", "text": "<ul> <li>            Example Configs          </li> </ul>"}, {"location": "about/tags/#tag:configure", "title": "configure", "text": "<ul> <li>            1. Getting Started          </li> <li>            Authentik Integration          </li> <li>            Cheatsheet: Troubleshooting          </li> <li>            Commands          </li> <li>            Configure &amp; Startup          </li> <li>            Example Configs          </li> <li>            Geo Blocking          </li> <li>            Home          </li> <li>            Structure          </li> <li>            Traefik Integration          </li> </ul>"}, {"location": "about/tags/#tag:dependencies", "title": "dependencies", "text": "<ul> <li>            1. Dependencies          </li> </ul>"}, {"location": "about/tags/#tag:diagnostics", "title": "diagnostics", "text": "<ul> <li>            3. Diagnostic Tests          </li> </ul>"}, {"location": "about/tags/#tag:home", "title": "home", "text": "<ul> <li>            Home          </li> </ul>"}, {"location": "about/tags/#tag:info", "title": "info", "text": "<ul> <li>            About CSF          </li> <li>            Contributing          </li> <li>            How this patcher works          </li> <li>            How this patcher works          </li> <li>            Introduction          </li> </ul>"}, {"location": "about/tags/#tag:install", "title": "install", "text": "<ul> <li>            1. Dependencies          </li> <li>            2. Download          </li> <li>            3. Diagnostic Tests          </li> <li>            4. Install          </li> <li>            5. Start Services          </li> <li>            6. Enable Web Interface          </li> <li>            Install CSF          </li> <li>            Install CSF &gt; Testing          </li> <li>            Install WebUI          </li> <li>            Patcher: Configure          </li> <li>            Patcher: Download          </li> <li>            Themes: Install          </li> <li>            Uninstall CSF          </li> </ul>"}, {"location": "about/tags/#tag:patch", "title": "patch", "text": "<ul> <li>            Patcher: Configure          </li> <li>            Patcher: Download          </li> </ul>"}, {"location": "about/tags/#tag:resource", "title": "resource", "text": "<ul> <li>            Example Configs          </li> </ul>"}, {"location": "about/tags/#tag:setup", "title": "setup", "text": "<ul> <li>            2. Download          </li> <li>            3. Diagnostic Tests          </li> <li>            4. Install          </li> <li>            5. Start Services          </li> <li>            6. Enable Web Interface          </li> </ul>"}, {"location": "about/tags/#tag:tests", "title": "tests", "text": "<ul> <li>            3. Diagnostic Tests          </li> </ul>"}, {"location": "about/tags/#tag:themes", "title": "themes", "text": "<ul> <li>            Themes: Install          </li> </ul>"}, {"location": "about/tags/#tag:tutorials", "title": "tutorials", "text": "<ul> <li>            Authentik Integration          </li> <li>            Geo Blocking          </li> <li>            Traefik Integration          </li> </ul>"}, {"location": "about/tags/#tag:usage", "title": "usage", "text": "<ul> <li>            1. Getting Started          </li> </ul>"}, {"location": "blog/", "title": "Blog", "text": ""}, {"location": "blog/#blog", "title": "Blog", "text": ""}, {"location": "csf/configure/", "title": "Configure & Startup", "text": "", "tags": ["configure"]}, {"location": "csf/configure/#configure-startup", "title": "Configure &amp; Startup", "text": "<p>After you have installed ConfigServer Firewall in the previous chapter; you can start configuring it to suit your server\u2019s requirements.</p> <p></p>", "tags": ["configure"]}, {"location": "csf/configure/#configure", "title": "Configure", "text": "<p>The main configuration file for CSF is located at <code>/etc/csf/csf.conf</code>. You can use your preferred text editor to modify the file, such as nano or vim:</p> <pre><code>sudo nano /etc/csf/csf.conf\n</code></pre> <p></p> <p>The list below outlines just a few of the important settings that you can modify within ConfigServer Firewall.</p> <p>Patcher Note</p> <p>When you run the patcher <code>install.sh</code>; TESTING MODE will automatically be disabled after the script has successfully completed.</p> <ul> <li><code>TESTING</code>: Set this value to 0 to disable testing mode and activate the firewall.</li> <li><code>TCP_IN</code> and <code>TCP_OUT</code>: These settings define the allowed incoming and outgoing TCP ports, respectively. Add or remove ports as required, separated by commas.</li> <li><code>UDP_IN</code> and <code>UDP_OUT</code>: These settings define the allowed incoming and outgoing UDP ports, respectively. Add or remove ports as required, separated by commas.</li> <li><code>DENY_IP_LIMIT</code>: This setting defines the maximum number of IP addresses that can be listed in the /etc/csf/csf.deny file. Adjust this limit as needed.</li> <li><code>CT_LIMIT</code>: This setting controls the number of connections from a single IP address that are allowed before the IP is temporarily blocked. Adjust this value according to your server\u2019s requirements.</li> </ul> <p></p> <p>Make sure to review the configuration file and adjust the settings to suit your server\u2019s needs. After making changes to the configuration file, save and exit the text editor.</p> <p>Two csf.conf configuration files have been provided as examples; a full version, and clean (uncommented) version, and can be viewed on the csf.conf page.</p> <p></p> <p></p>", "tags": ["configure"]}, {"location": "csf/configure/#start-configserver", "title": "Start ConfigServer", "text": "<p>After you have set your config file to its desired values; you can now start up or restart the CSF service to apply the configurations. Open Terminal and run:</p> <p></p>", "tags": ["configure"]}, {"location": "csf/configure/#enable", "title": "Enable", "text": "<p><code>-e,  --enable</code></p> <p>Enable csf and lfd if previously disabled</p> <pre><code>sudo csf -e\n</code></pre> <p></p>", "tags": ["configure"]}, {"location": "csf/configure/#start", "title": "Start", "text": "<p><code>-s,  --start</code></p> <p>Starts the firewall and applies any rules that have been configured at startup.</p> <pre><code>sudo csf -s\n</code></pre> <p></p>", "tags": ["configure"]}, {"location": "csf/configure/#restart", "title": "Restart", "text": "<p><code>-r,  --restart</code></p> <p>Restart firewall rules (csf)</p> <pre><code>sudo csf -r\n</code></pre> <p></p> <p>A full list of CSF commands have been provided in our Cheatsheet: Commands section.</p> <p></p> <p></p>", "tags": ["configure"]}, {"location": "csf/configure/#next-steps", "title": "Next Steps", "text": "<pre><code>url:            ../webui\nname:           Next: Installing the Admin WebUI\ndesc:           Instructions for installing the CSF Admin Web Interface\nimage:          https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSjXOa4WN-mW3gXnIo_hEY6uAwoi2v_e02eG3TCHxSwIY70Y_OzErdaeaepXFoRa2sYx8M&amp;usqp=CAU\nfavicon:        https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSjXOa4WN-mW3gXnIo_hEY6uAwoi2v_e02eG3TCHxSwIY70Y_OzErdaeaepXFoRa2sYx8M&amp;usqp=CAU\nfavicon_size:   25\ntarget:         same\naccent:         a40547E0\n</code></pre>", "tags": ["configure"]}, {"location": "csf/install/", "title": "Install CSF", "text": "", "tags": ["install"]}, {"location": "csf/install/#install-csf", "title": "Install CSF", "text": "<p>These steps explain how to install ConfigServer Firewall on your system. There are two possible ways to install CSF which are listed below: </p> <ul> <li>Install: Using Patch</li> <li>Install: Manually</li> </ul> <p></p> <p>The Patch method attempts to take much of the work out of installing CSF. It installs all prerequisites automatically, and sets CSF to start with <code>TESTING MODE</code> disabled. After CSF is installed using the patcher; then the Docker and OpenVPN patches will automatically be installed next.</p> <p>The Manual method requires you to manually install all prerequisites using your OS package manager, and then manually downloading the latest copy of CSF and extracting / installing it on your system. You will have to run the patcher after you have installed CSF.</p> <p></p> <p></p>", "tags": ["install"]}, {"location": "csf/install/#install-using-patch", "title": "Install: Using Patch", "text": "<p>If you would like to install ConfigServer Firewall using this repo's patcher; download the patch: </p><pre><code>git clone https://github.com/Aetherinox/csf-firewall.git\n</code></pre><p></p> <p></p> <p>Set the permissions for the <code>install.sh</code> file: </p><pre><code>sudo chmod +x /csf-firewall/patch/install.sh\n</code></pre><p></p> <p></p> <p>Run the script: </p><pre><code>sudo ./csf-firewall/patch/install.sh\n</code></pre><p></p> <p></p> <p>If ConfigServer Firewall is not already installed on your system; you should see: </p><pre><code>  Installing package iptables\n  Installing package ipset\n  Installing package ConfigServer Firewall\n\n  Patch installer will now start ...\n</code></pre><p></p> <p></p> <p>After the patcher has installed CSF; it will then automatically install the Docker and OpenVPN patches. All you will need to do after; is ensure CSF is up and running.</p> <p>Please proceed to the section Configure &amp; Start CSF</p> <p></p> <p></p>", "tags": ["install"]}, {"location": "csf/install/#install-manually", "title": "Install: Manually", "text": "", "tags": ["install"]}, {"location": "csf/install/#prerequisites", "title": "Prerequisites", "text": "<ul> <li>A Linux server running CentOS, Debian, Ubuntu, or any other compatible Linux distribution. </li> <li>Root access or a user account with sudo privileges.</li> <li>Perl installed on your server. If Perl is not installed, you can install it by running the following commands:</li> <li> <p>For CentOS/RHEL:     </p><pre><code>sudo yum install perl ipset\n</code></pre><p></p> </li> <li> <p>For Debian/Ubuntu:</p> <pre><code>sudo apt-get update \nsudo apt-get install perl ipset\n</code></pre> </li> </ul> <p></p>", "tags": ["install"]}, {"location": "csf/install/#download-and-install-csf", "title": "Download and Install CSF", "text": "<p>To download and install CSF, follow these steps:</p> <ul> <li>Log in to your server via SSH. </li> <li>Download the latest version of CSF using the wget command:     <pre><code>wget https://download.configserver.com/csf.tgz\n</code></pre></li> <li>Extract the downloaded archive:     <pre><code>tar -xzf csf.tgz\n</code></pre></li> <li>Navigate to the extracted directory:     <pre><code>cd csf\n</code></pre></li> <li>Run the installation script:     <pre><code>sudo sh install.sh\n</code></pre></li> </ul> <p></p> <p>CSF will now be installed on your server, along with its Web UI (ConfigServer Firewall &amp; Security) if you have a control panel like cPanel or DirectAdmin installed.</p> <p></p> <p></p>", "tags": ["install"]}, {"location": "csf/install/#next-steps", "title": "Next Steps", "text": "<pre><code>url:            ../configure\nname:           Next: How to Configure &amp; Start CSF\ndesc:           Instructions for editing the CSF config file and starting CSF for the first time\nimage:          https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSjXOa4WN-mW3gXnIo_hEY6uAwoi2v_e02eG3TCHxSwIY70Y_OzErdaeaepXFoRa2sYx8M&amp;usqp=CAU\nfavicon:        https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSjXOa4WN-mW3gXnIo_hEY6uAwoi2v_e02eG3TCHxSwIY70Y_OzErdaeaepXFoRa2sYx8M&amp;usqp=CAU\nfavicon_size:   25\ntarget:         same\naccent:         a40547E0\n</code></pre>", "tags": ["install"]}, {"location": "csf/testing/", "title": "Install CSF > Testing", "text": "", "tags": ["install"]}, {"location": "csf/testing/#install-csf-testing", "title": "Install CSF: Testing", "text": "<p>Before enabling and configuring CSF, it is crucial to test whether it is compatible with your server. Run the following command to initiate the test:</p> <pre><code>sudo perl /usr/local/csf/bin/csftest.pl\n</code></pre> <p></p> <p>The test will check for any potential issues or conflicts. If the test completes successfully, you will see the message:</p> Console<pre><code>\u201cRESULT: csf should function on this server.\u201d\n</code></pre> <p></p> <p>If there are any problems, the test will provide information on how to resolve them.</p> <p></p> <p></p>", "tags": ["install"]}, {"location": "csf/uninstall/", "title": "Uninstall CSF", "text": "", "tags": ["install"]}, {"location": "csf/uninstall/#uninstall-csf", "title": "Uninstall CSF", "text": "<p>If you decide to uninstall CSF for any reason, follow these steps:</p> <ol> <li>Navigate to the CSF directory:     <pre><code>cd /etc/csf\n</code></pre></li> <li>Run the uninstallation script:     <pre><code>sudo sh uninstall.sh\n</code></pre></li> </ol> <p></p> <p>The script will remove CSF and its associated files from your server.</p> <p></p> <p></p>", "tags": ["install"]}, {"location": "csf/webui/", "title": "Install WebUI", "text": "", "tags": ["install"]}, {"location": "csf/webui/#install-webui", "title": "Install WebUI", "text": "<p>ConfigServer Firewall offers a WebUI for the managing firewall from the web interface. This section explains how to install the WebUI.</p> <p></p>", "tags": ["install"]}, {"location": "csf/webui/#step-1-install-required-perl-modules", "title": "Step 1: Install Required Perl Modules:", "text": "<p>The CSF WebUI requires a few Perl modules to be installed on your system. Use the following commands to install the required modules as per your operating system.</p> <p></p> <p>Debian based systems: </p><pre><code>sudo apt-get install libio-socket-ssl-perl libcrypt-ssleay-perl \\\n                    libnet-libidn-perl libio-socket-inet6-perl libsocket6-perl\n</code></pre><p></p> <p></p> <p>Redhat based systems: </p><pre><code>sudo yum install perl-IO-Socket-SSL.noarch perl-Net-SSLeay perl-Net-LibIDN \\\n               perl-IO-Socket-INET6 perl-Socket6\n</code></pre><p></p> <p></p>", "tags": ["install"]}, {"location": "csf/webui/#step-2-enable-csf-firewall-web-ui", "title": "Step 2: Enable CSF Firewall Web UI:", "text": "<p>To enable CSF web UI edit /etc/csf/csf.conf file in your favorite text editor and update the following values.</p> <pre><code>sudo vim /etc/csf/csf.conf\n</code></pre> <pre><code># 1 to enable, 0 to disable web ui \nUI = \"1\"\n\n# Set port for web UI. The default port is 6666, but\n# I change this to 1025 to easy access. Default port create some issue\n# with popular chrome and firefox browser (in my case) \n\nUI_PORT = \"1025\"\n\n# Leave blank to bind to all IP addresses on the server \nUI_IP = \"\"\n\n# Set username for authetnication \nUI_USER = \"admin\"\n\n# Set a strong password for authetnication \nUI_PASS = \"admin\"\n</code></pre> <p></p> <p>Change the following values to your own:</p> <ul> <li><code>UI_PORT</code></li> <li><code>UI_USER</code></li> <li><code>UI_PASS</code></li> </ul> <p></p> <p>After making changes, edit <code>/etc/csf/ui/ui.allow</code> configuration file and add your public IP to allow access to CSF UI. Change <code>YOUR_PUBLIC_IP_ADDRESS</code> with your public IP address.</p> <pre><code>sudo echo \"YOUR_PUBLIC_IP_ADDRESS\" &gt;&gt;  /etc/csf/ui/ui.allow\n</code></pre> <p></p> <p>Web UI works under lfd daemon. So restart the lfd daemon on your system using the following command.</p> <pre><code>sudo service lfd restart\n</code></pre> <p></p> <p>In order to gain access to the online admin panel; you must ensure lfd and csf are running. You can check by running the command:</p> <pre><code>sudo service lfd status\n</code></pre> <p></p> <p>You should see the <code>lfd</code> service running:</p> <pre><code>\u25cf lfd.service - ConfigServer Firewall &amp; Security - lfd\n     Loaded: loaded (/lib/systemd/system/lfd.service; enabled; preset: enabled)\n     Active: active (running) since Mon 2024-08-05 11:59:38 MST; 1s ago\n    Process: 46393 ExecStart=/usr/sbin/lfd (code=exited, status=0/SUCCESS)\n   Main PID: 46407 (lfd - sleeping)\n      Tasks: 8 (limit: 4613)\n     Memory: 121.7M\n        CPU: 2.180s\n     CGroup: /system.slice/lfd.service\n</code></pre> <p></p> <p>Next, confirm <code>csf</code> service is also running:</p> <pre><code>sudo service csf status\n</code></pre> <p></p> <p>Check the output for errors on service <code>csf</code>. You should see no errors:</p> <pre><code>\u25cf csf.service - ConfigServer Firewall &amp; Security - csf\n     Loaded: loaded (/lib/systemd/system/csf.service; enabled; preset: enabled)\n     Active: active (exited) since Mon 2024-08-05 12:04:09 MST; 1s ago\n    Process: 46916 ExecStart=/usr/sbin/csf --initup (code=exited, status=0/SUCCESS)\n   Main PID: 46916 (code=exited, status=0/SUCCESS)\n        CPU: 12.692s\n</code></pre> <p></p> <p>If you see the following error when running <code>csf status</code>:</p> <pre><code>csf[46313]: open3: exec of /sbin/ipset flush failed: No such file or directory at /usr/sbin/csf line 5650.\n</code></pre> <p></p> <p>You must install <code>ipset</code>:</p> <pre><code>sudo apt-get update \nsudo apt-get install ipset\n</code></pre> <p></p>", "tags": ["install"]}, {"location": "csf/webui/#step-3-access-and-use-web-ui", "title": "Step 3: Access and Use Web UI:", "text": "<p>Now, access CSF UI on your browser with the specified port. For this tutorial; we used 1025 port and accessed the CSF admin panel by opening our browser and going to:</p> <pre><code>https://127.0.0.1:1025\n</code></pre> <p></p> <p>When prompted for the username and password; the default is:</p> Field Value Username <code>admin</code> Password <code>admin</code> <p></p> <p></p> <p></p> <p>After successful login, you will find the screen like below.</p> <p></p> <p></p> <p>Allow IP Address: You can use below option to allow any IP quickly. This action adds the entry to the <code>/etc/csf/csf.allow</code> file.</p> <p></p> <p></p> <p>Deny IP Address: You can use below option to deny any IP quickly. This action adds the entry to the <code>/etc/csf/csf.deny</code> file.</p> <p></p> <p></p> <p>Unblock IP Address: You can use below option to quickly unblocked any IP which is already blocked by CSF.</p> <p></p> <p></p> <p></p>", "tags": ["install"]}, {"location": "csf/tutorials/authentik/", "title": "CSF: Authentik Integration", "text": "", "tags": ["configure", "tutorials"]}, {"location": "csf/tutorials/authentik/#authentik-integration", "title": "Authentik Integration", "text": "<p>This section explains how to add Authentik as a middleware through Traefik so that you can secure the ConfigServer WebUI behind an authentication server.</p> <p></p> <p>If you are adding Authentik as middleware in the steps above; the last thing you must do is log in to your Authentik admin panel and add a new Provider so that we can access the CSF WebUI via your domain.</p> <p></p> <p>Once you sign into the Authentik admin panel, go to the left-side navigation, select Applications -&gt; Providers. Then at the top of the new page, click Create.</p> <p></p> <p></p> <p></p> <p></p> <p>For the provider, select <code>Proxy Provider</code>.</p> <p></p> <p></p> <p></p> <p>Add the following provider values:</p> <ul> <li>Name: <code>CSF ForwardAuth</code></li> <li>Authentication Flow: <code>default-source-authentication (Welcome to authentik!)</code></li> <li>Authorization Flow: <code>default-provider-authorization-implicit-consent (Authorize Application)</code></li> </ul> <p></p> <p>Select Forward Auth (single application):</p> <ul> <li>External Host: <code>https://csf.domain.com</code></li> </ul> <p></p> <p></p> <p></p> <p>Once finished, click Create. Then on the left-side menu, select Applications -&gt; Applications. Then at the top of the new page, click Create.</p> <p></p> <p></p> <p></p> <p></p> <p>Add the following parameters:</p> <ul> <li>Name: <code>CSF (ConfigServer Firewall)</code></li> <li>Slug: <code>csf</code></li> <li>Group: <code>Administrative</code></li> <li>Provider: <code>CSF ForwardAuth</code></li> <li>Backchannel Providers: <code>None</code></li> <li>Policy Engine Mode: <code>any</code></li> </ul> <p></p> <p></p> <p></p> <p>Save, and then on the left-side menu, select Applications -&gt; Outposts:</p> <p></p> <p></p> <p></p> <p>Find your Outpost and edit it.</p> <p></p> <p></p> <p>Move <code>CSF (ConfigServer Firewall)</code> to the right side Selected Applications box.</p> <p></p> <p></p> <p></p> <p>You should be able to access <code>csf.domain.com</code> and be prompted now to authenticate with Authentik.</p> <p></p> <p></p>", "tags": ["configure", "tutorials"]}, {"location": "csf/tutorials/geographical/", "title": "CSF: Enable Geo Block", "text": "", "tags": ["configure", "tutorials"]}, {"location": "csf/tutorials/geographical/#enable-geographical-blocks", "title": "Enable Geographical Blocks", "text": "<p>Geographical blocks allow you to blacklist or whitelist an entire country from accessing your services from within ConfigServer Firewall. </p> <p></p>", "tags": ["configure", "tutorials"]}, {"location": "csf/tutorials/geographical/#getting-started", "title": "Getting Started", "text": "<p>CSF allows you to pick which service you want to use for geographical blocks. By default, CSF uses db-ip, but you have the option to pick any of the following:</p> <ul> <li>Maxmind</li> <li>db-ip, ipdeny, iptoasn</li> </ul> <p></p> <code>Maxmind</code> <p>This service is free, but it requires you to sign up for an account and  generate an API key in order to use the services. Some have reported that Maxmind databases are slightly more accurate than db-ip.</p> <p>If you choose this provider; you must fill out <code>MM_LICENSE_KEY</code> within the <code>csf.conf</code>.</p> <p>Advantages: This is a one stop shop for all of the databases required for these features. They provide a consistent dataset for blocking and reporting purposes</p> <p>Disadvantages: MaxMind require a license key to download their databases. This is free of charge, but requires the user to create an account on their website to generate the required key.</p> <code>db-ip, ipdeny, iptoasn</code> <p>Advantages: The ipdeny.com databases form CC blocking are better optimised and so are quicker to process and create fewer iptables entries. All of these databases are free to download without requiring login or key</p> <p>Disadvantages: Multiple sources mean that any one of the three could interrupt the provision of these features. It may also mean that there are inconsistences between them</p> <p></p> <p>Performance Impact</p> <p>If using MaxMind, be aware of how many countries you allow / deny from accessing your server. The more countries you add, the more rules that will be added to CSF. These rules will be loaded every time you start or restart CSF; and may cause CSF to take longer-than-normal times to boot.</p> <p></p> <p>To change which database is used for geo blocking; open your CSF's <code>csf.conf</code> config file and locate the setting <code>CC_SRC</code>. If you have the ConfigServer WebUI enabled; you can access these settings from the CSF Admin WebUI.</p> <pre><code># 2. DB-IP, ipdeny.com, iptoasn.com\n#\n# Advantages: The ipdeny.com databases form CC blocking are better optimised\n# and so are quicker to process and create fewer iptables entries. All of these\n# databases are free to download without requiring login or key\n#\n# Disadvantages: Multiple sources mean that any one of the three could\n# interrupt the provision of these features. It may also mean that there are\n# inconsistences between them\n#\n# https://db-ip.com/db/lite.php\n# http://ipdeny.com/\n# https://iptoasn.com/\n# http://download.geonames.org/export/dump/readme.txt\n\n# Set the following to your preferred source:\n#\n# \"1\" - MaxMind\n# \"2\" - db-ip, ipdeny, iptoasn\n#\n# The default is \"2\" on new installations of csf, or set to \"1\" to use the\n# MaxMind databases after obtaining a license key\nCC_SRC = \"2\"\n</code></pre> <p></p> <p></p>", "tags": ["configure", "tutorials"]}, {"location": "csf/tutorials/geographical/#using-maxmind", "title": "Using MaxMind", "text": "<p>To configure MaxMind as your specified geo service; you must go to their website and register an account.</p> <ul> <li>Register for MaxMind</li> </ul> <p></p> <p>Once you have your account, on the left side; select Manage License Keys.</p> <p></p> <p></p> <p>In the middle of the page, you should be able to generate a license key:</p> <p></p> <p></p> <p>After the license key is generated, you must go back to your <code>csf.conf</code> and add the License key to your config. If you are using the CSF WebUI:</p> <p></p> <p></p> <p>Next, you must install MaxMind's GeoIpUpdater utility which is what will download the IP address databases. This tool automatically updates GeoIP2 and GeoLite2 databases. The program connects to the MaxMind GeoIP Update server to check for new databases. If a new database is available, the program will download and install it.</p> <p>A full set of instructions can also be found at:</p> <ul> <li>Setting up GeoIpUpdate</li> </ul> <p></p> <p>Warning</p> <p>If you are using a firewall, you must have the DNS and HTTPS ports open.</p> <p></p> <p>First, install:</p> <pre><code>sudo add-apt-repository ppa:maxmind/ppa\nsudo apt update\nsudo apt install geoipupdate\n</code></pre> <p></p> <p>Once installed make sure you have a License key generated on the maxmind website, you will then need to create a new file in <code>/etc/</code>:</p> <pre><code>sudo touch /etc/GeoIP.conf\n</code></pre> <p></p> <p>Add the following code to your newly created <code>/etc/GeoIP.conf</code>. After you paste the code below; you must change the following values:</p> <ul> <li><code>AccountID</code></li> <li><code>LicenseKey</code></li> </ul> <pre><code># Please see https://dev.maxmind.com/geoip/updating-databases?lang=en for\n# instructions on setting up geoipupdate, including information on how to\n# download a pre-filled GeoIP.conf file.\n\n# Replace YOUR_ACCOUNT_ID_HERE and YOUR_LICENSE_KEY_HERE with an active account\n# ID and license key combination associated with your MaxMind account. These\n# are available from https://www.maxmind.com/en/my_license_key.\nAccountID 1000101\nLicenseKey ABC1234_56af7s8dshF53Ha_abck\n\n# Enter the edition IDs of the databases you would like to update.\n# Multiple edition IDs are separated by spaces.\nEditionIDs GeoLite2-ASN GeoLite2-City GeoLite2-Country\n\n# The remaining settings are OPTIONAL.\n\n# The directory to store the database files. Defaults to /usr/share/GeoIP\n# DatabaseDirectory /usr/share/GeoIP\n\n# The server to use. Defaults to \"updates.maxmind.com\".\n# Host updates.maxmind.com\n\n# The proxy host name or IP address. You may optionally specify a\n# port number, e.g., 127.0.0.1:8888. If no port number is specified, 1080\n# will be used.\n# Proxy 127.0.0.1:8888\n\n# The user name and password to use with your proxy server.\n# ProxyUserPassword username:password\n\n# Whether to preserve modification times of files downloaded from the server.\n# Defaults to \"0\".\n# PreserveFileTimes 0\n\n# The lock file to use. This ensures only one geoipupdate process can run at a\n# time.\n# Note: Once created, this lockfile is not removed from the filesystem.\n# Defaults to \".geoipupdate.lock\" under the DatabaseDirectory.\n# LockFile /usr/share/GeoIP/.geoipupdate.lock\n\n# The amount of time to retry for when errors during HTTP transactions are\n# encountered. It can be specified as a (possibly fractional) decimal number\n# followed by a unit suffix. Valid time units are \"ns\", \"us\" (or \"\u00b5s\"), \"ms\",\n# \"s\", \"m\", \"h\".\n# Defaults to \"5m\" (5 minutes).\n# RetryFor 5m\n\n# The number of parallel database downloads.\n# Defaults to \"1\".\n# Parallelism 1\n</code></pre> <p></p> <p>After you have created the above config; you need to launch the <code>geoipupdate</code> app. Multiple commands are provided below depending on if you want to specify where you placed your downloaded databases. A list of arguments are also provided. In our example, we are going to start <code>geoipupdate</code> and download the databases to the path <code>/var/lib/csf/Geo/</code>.</p> <p></p> Argument Description <code>-d</code>, <code>--database-directory</code> Install databases to a custom directory. This is optional. If provided, it overrides the <code>DatabaseDirectory</code> value from the configuration file and the <code>GEOIPUPDATE_DB_DIR</code> environment variable. <code>-f</code>, <code>--config-file</code> The configuration file to use. See <code>GeoIP.conf</code> and its documentation for more information. This is optional. It defaults to the environment variable <code>GEOIPUPDATE_CONF_FILE</code> if it is set, or CONFFILE otherwise. <code>--parallelism</code> Set the number of parallel database downloads. <code>-h</code>, <code>--help</code> Display help and exit. <code>--stack-trace</code> Show a stack trace on any error message. This is primarily useful for debugging. <code>-V</code>, <code>--version</code> Display version information and exit. <code>-v</code>, <code>--verbose</code> Enable verbose mode. Prints out the steps that <code>geoipupdate</code> takes. If provided, it overrides any <code>GEOIPUPDATE_VERBOSE</code> environment variable. <code>-o</code>, <code>--output</code> Output download/update results in JSON format. Start (Basic)Start (Custom Paths)Start (Verbose Logging) <pre><code>sudo geoipupdate\n</code></pre> <pre><code>sudo geoipupdate --database-directory /var/lib/csf/Geo/ --config-file /etc/GeoIP.conf\n</code></pre> <pre><code>sudo geoipupdate -v --database-directory /var/lib/csf/Geo/ --config-file /etc/GeoIP.conf\n</code></pre> <p></p> <p></p>", "tags": ["configure", "tutorials"]}, {"location": "csf/tutorials/geographical/#using-db-ip-ipdeny-iptoasn", "title": "Using db-ip, ipdeny, iptoasn", "text": "<p>This is the second option you can pick within CSF for Geographical blocking. When initially tried, it worked right out of box. It required no modifications, no packages to be installed, and no license keys.</p> <p></p> <p></p>", "tags": ["configure", "tutorials"]}, {"location": "csf/tutorials/geographical/#allow-deny-countries", "title": "Allow / Deny Countries", "text": "<p>After you've completed the steps above; you can now whitelist or blacklist specific countries from accessing your server and will be managed through your ConfigServer Firewall.</p> <p>Pick your preferred method:</p> <ul> <li>Manage countries using csf.conf</li> <li>Manage countries with ConfigServer WebUI</li> </ul> <p></p>", "tags": ["configure", "tutorials"]}, {"location": "csf/tutorials/geographical/#manage-with-csfconf", "title": "Manage with csf.conf", "text": "<p>Open up your <code>csf.conf</code> file in a text editor and locate the following settings:</p> <ul> <li><code>CC_DENY</code></li> <li><code>CC_ALLOW</code></li> </ul> <p></p> <pre><code># In the following options, specify the the two-letter ISO Country Code(s).\n# The iptables rules are for incoming connections only\n#\n# Additionally, ASN numbers can also be added to the comma separated lists\n# below that also list Country Codes. The same WARNINGS for Country Codes apply\n# to the use of ASNs. More about Autonomous System Numbers (ASN):\n# http://www.iana.org/assignments/as-numbers/as-numbers.xhtml\n# ASNs must be listed as ASnnnn (where nnnn is the ASN number)\n#\n# You should consider using LF_IPSET when using any of the following options\n#\n# WARNING: These lists are never 100% accurate and some ISP's (e.g. AOL) use\n# non-geographic IP address designations for their clients\n#\n# WARNING: Some of the CIDR lists are huge and each one requires a rule within\n# the incoming iptables chain. This can result in significant performance\n# overheads and could render the server inaccessible in some circumstances. For\n# this reason (amongst others) we do not recommend using these options\n#\n# WARNING: Due to the resource constraints on VPS servers this feature should\n# not be used on such systems unless you choose very small CC zones\n#\n# WARNING: CC_ALLOW allows access through all ports in the firewall. For this\n# reason CC_ALLOW probably has very limited use and CC_ALLOW_FILTER is\n# preferred\n#\n# Each option is a comma separated list of CC's, e.g. \"US,GB,DE\"\nCC_DENY = \"\"\nCC_ALLOW = \"\"\n</code></pre> <p></p> <p>In our example, we will blacklist the country China, which uses the abbreviation <code>CN</code>. To do so; our config will look like the following:</p> <pre><code>CC_DENY = \"CN\"\nCC_ALLOW = \"\"\n</code></pre> <p></p> <p>To specify multiple countries; add a comma <code>,</code> delimiter between each country.</p> <pre><code>CC_DENY = \"CN\"\nCC_ALLOW = \"US,GB,DE\"\n</code></pre> <p></p> <p>Our rules above mean:</p> Setting Countries Description <code>CC_DENY</code> <code>China</code> Blacklisted countries: cannot access our server <code>CC_ALLOW</code> <code>United States</code> <code>Great Britain</code> <code>Germany</code> Whitelisted countries: can access our server <p></p>", "tags": ["configure", "tutorials"]}, {"location": "csf/tutorials/geographical/#manage-with-csf-webui", "title": "Manage with CSF WebUI", "text": "<p>Sign into the ConfigServer WebUI. </p> <p>Select the tab CSF, scroll down and select Firewall Configuration, and then in the top dropdown box in the middle of the page, select Country Code Lists and Settings.</p> <p></p> <p>We will add the following to each setting:</p> <pre><code>CC_DENY = \"CN\"\nCC_ALLOW = \"US,GB,DE\"\n</code></pre> <p></p> <p>Below is an animated gif showing the steps.</p> <p></p> <p></p> <p>Once you have modified your country values; scroll to the very bottom and press the Change button.</p> <p></p> <p></p>", "tags": ["configure", "tutorials"]}, {"location": "csf/tutorials/geographical/#restart-csf", "title": "Restart CSF", "text": "<p>After you have whitelisted / blacklisted your desired countries; give CSF a restart:</p> <p></p> <p><code>-ra, --restartall</code></p> <p>Restart firewall rules (csf) and then restart lfd daemon. Both csf and then lfd should be restarted after making any changes to the configuration files</p> <pre><code>sudo csf -ra\n</code></pre> <p></p> <p></p>", "tags": ["configure", "tutorials"]}, {"location": "csf/tutorials/traefik/", "title": "CSF: Traefik Integration", "text": "", "tags": ["configure", "tutorials"]}, {"location": "csf/tutorials/traefik/#traefik-integration", "title": "Traefik Integration", "text": "<p>This section explains how to integrate ConfigServer Firewall and Traefik so that you can access the CSF WebUI via your domain name, but restrict access to the server IP address and port.</p> <p></p> <p>Open <code>/etc/csf/csf.conf</code> and change <code>UI_IP</code>. This specifies the IP address that the CSF WebUI will bind to. By default, the value is empty and binds CSF's WebUI to all IPs on your server.</p> <p>Find:</p> <pre><code>UI_IP = \"\"\n</code></pre> <p></p> <p>Change the IP to your Docker network subnet. You MUST use the format below, which is <code>::IPv6:IPv4</code></p> <pre><code>UI_IP = \"::ffff:172.17.0.1\"\n</code></pre> <p></p> <p>The above change will ensure that your CSF WebUI is not accessible via your public IP address. We're going to allow access to it via your domain name, but add some Traefik middleware so that you must authenticate before you can access the WebUI.</p> <p></p> <p>Next, we can add CSF through Docker and Traefik so that it's accessible via <code>csf.domain.com</code>. Open up your Traefik's <code>dynamic.yml</code> and add the following:</p> dynamic.yml (routers)dynamic.yml (middleware) <pre><code>http:\n  routers:\n    csf-http:\n      service: \"csf\"\n      rule: \"Host(`csf.domain.com`)\"\n      entryPoints:\n        - \"http\"\n      middlewares:\n        - https-redirect@file\n\n    csf-https:\n      service: \"csf\"\n      rule: \"Host(`csf.domain.com`)\"\n      entryPoints:\n        - \"https\"\n      middlewares:\n        - authentik@file\n        - whitelist@file\n        - geoblock@file\n      tls:\n        certResolver: cloudflare\n        domains:\n          - main: \"domain.com\"\n            sans:\n              - \"*.domain.com\"\n</code></pre> <pre><code>http:\n  middlewares:\n    authentik:\n      forwardauth:\n        address: http://authentik-server:9000/outpost.goauthentik.io/auth/traefik\n        trustForwardHeader: true\n        authResponseHeaders:\n          - X-authentik-username\n          - X-authentik-groups\n          - X-authentik-email\n          - X-authentik-name\n          - X-authentik-uid\n          - X-authentik-jwt\n          - X-authentik-meta-jwks\n          - X-authentik-meta-outpost\n          - X-authentik-meta-provider\n          - X-authentik-meta-app\n          - X-authentik-meta-version\n\n    geoblock:\n      plugin:\n        GeoBlock:\n          allowLocalRequests: \"true\"\n          allowUnknownCountries: \"false\"\n          blackListMode: \"false\"\n          api: https://get.geojs.io/v1/ip/country/{ip}\n          ipGeolocationHttpHeaderField: \"Cf-Ipcountry\"\n          xForwardedFor: \"X-Forwarded-For\"\n          apiTimeoutMs: \"150\"\n          cacheSize: \"15\"\n          addCountryHeader: \"true\"\n          forceMonthlyUpdate: \"true\"\n          logAllowedRequests: \"true\"\n          logApiRequests: \"true\"\n          logLocalRequests: \"true\"\n          silentStartUp: \"false\"\n          unknownCountryApiResponse: nil\n          countries:\n            - US\n\n    whitelist:\n      ipAllowList:\n        sourceRange:\n          - \"127.0.0.0/8\"\n        ipStrategy:\n          excludedIPs:\n            # Cloudflare IP List\n            # These will be ignored and the next IP in line will be checked\n            - 173.245.48.0/20\n            - 103.21.244.0/22\n            - 103.22.200.0/22\n            - 103.31.4.0/22\n            - 141.101.64.0/18\n            - 108.162.192.0/18\n            - 190.93.240.0/20\n            - 188.114.96.0/20\n            - 197.234.240.0/22\n            - 198.41.128.0/17\n            - 162.158.0.0/15\n            - 104.16.0.0/13\n            - 104.24.0.0/14\n            - 172.64.0.0/13\n            - 131.0.72.0/22\n            - 2400:cb00::/32\n            - 2606:4700::/32\n            - 2803:f800::/32\n            - 2405:b500::/32\n            - 2405:8100::/32\n            - 2a06:98c0::/29\n            - 2c0f:f248::/32\n</code></pre> <p></p> <p>At the bottom of the same file, we must now add a new loadBalancer rule under <code>http</code> -&gt; <code>services</code>. Change the <code>ip</code> and <code>port</code> if you have different values:</p> <pre><code>http:\n  routers:\n    [CODE FROM ABOVE]\n  services:\n    csf:\n      loadBalancer:\n        servers:\n          - url: \"https://172.17.0.1:8546/\"\n</code></pre> <p></p> <p>With the example above, we are also going to add a few middlewares:</p> <ul> <li>Authentik</li> <li>IP Whitelist</li> <li>Geographical Location Blocking</li> </ul> <p></p> <p>By applying the above middlewares, we can restrict what IP addresses can access your CSF WebUI, as well as add Authentik's authentication system so that you must authenticate first before getting into the CSF WebUI. These are all optional, and you can apply whatever middlewares you deem fit.</p> <p></p> <p>You must configure the above middleware if you have not added it to Traefik yet. This guide does not go into how to add middleware to Traefik, that information can be found at:</p> <ul> <li>https://doc.traefik.io/traefik/middlewares/overview/</li> </ul> <p></p> <p>Once you configure these changes in Traefik, you can restart your Traefik docker container. The command for that depends on how you set up the container. If you used <code>docker-compose.yml</code>, you can <code>cd</code> into the folder with the <code>docker-compose.yml</code> file and then execute:</p> <pre><code>docker compose down &amp;&amp; docker compose up -d\n</code></pre> <p></p> <p></p>", "tags": ["configure", "tutorials"]}, {"location": "csf/tutorials/traefik/#next-steps", "title": "Next Steps", "text": "<pre><code>url:            ../authentik\nname:           Next: Integrating Authentik\ndesc:           Instructions for adding Authentik middleware to ConfigServer via Traefik\nimage:          https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSjXOa4WN-mW3gXnIo_hEY6uAwoi2v_e02eG3TCHxSwIY70Y_OzErdaeaepXFoRa2sYx8M&amp;usqp=CAU\nfavicon:        https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSjXOa4WN-mW3gXnIo_hEY6uAwoi2v_e02eG3TCHxSwIY70Y_OzErdaeaepXFoRa2sYx8M&amp;usqp=CAU\nfavicon_size:   25\ntarget:         same\naccent:         a40547E0\n</code></pre>", "tags": ["configure", "tutorials"]}, {"location": "includes/abbreviations/", "title": "Abbreviations", "text": ""}, {"location": "install/dependencies/", "title": "CSF \u203a Dependencies", "text": "", "tags": ["install", "dependencies"]}, {"location": "install/dependencies/#dependencies", "title": "Dependencies", "text": "<p>To ensure ConfigServer Firewall &amp; Security (CSF) functions correctly, all required dependencies must be installed. Some dependencies are essential for the core operation of CSF, while others are only necessary if you plan to use specific optional features.</p> <p></p>", "tags": ["install", "dependencies"]}, {"location": "install/dependencies/#optional-features", "title": "Optional Features", "text": "<ul> <li>To enable Statistics <code>ST_ENABLE = \"1\"</code>, you must install:<ul> <li>GB Graphics Library</li> <li>GD::Graph Perl Module</li> </ul> </li> </ul>", "tags": ["install", "dependencies"]}, {"location": "install/dependencies/#install", "title": "Install", "text": "<p>For our documentation, we are going to include all packages you will need in order to run all functionality within CSF. A lot of the packages listed below will be installed along with the base <code>perl</code> package; however, we've included them to ensure nothing gets left behind.</p> <p>Depending on your distro, pick your preferred installation method below:</p> Debian/Ubuntu (apt-get)CentOS/RHEL (yum/dnf)Perl (CPAN) <pre><code>apt-get update\napt-get install -y perl \\\n  libio-socket-ssl-perl \\\n  libwww-perl \\\n  libjson-perl \\\n  libnet-ssleay-perl \\\n  libcrypt-ssleay-perl \\\n  liblwp-protocol-https-perl \\\n  libgd-graph-perl \\\n  libio-socket-inet6-perl \\\n  libsocket6-perl \\\n  libnet-libidn-perl \\\n  libtime-hires-perl \\\n  sendmail-bin \\\n  dnsutils \\\n  unzip \\\n  wget\n</code></pre> <pre><code>yum install -y perl \\\n  perl-libwww-perl \\\n  perl-IO-Socket-SSL.noarch \\\n  perl-JSON \\\n  perl-Net-SSLeay \\\n  perl-Net-LibIDN \\\n  perl-Crypt-SSLeay \\\n  perl-LWP-Protocol-https.noarch \\\n  perl-GDGraph \\\n  perl-Math-BigInt \\\n  perl-Time-HiRes \\\n  perl-Socket \\\n  perl-Socket6 \\\n  perl-IO-Socket-Inet6 \\\n  wget \\\n  unzip \\\n  net-tools \\\n  ipset \\\n  bind-utils\n</code></pre> <pre><code>perl -MCPAN -eshell\ncpan&gt; install IO::Socket::SSL IO::Socket::INET6 Socket6 Net::LibIDN \\\nLWP LWP::Protocol::https LWP::UserAgent JSON Net::SSLeay \\\nCrypt::SSLeay Digest::MD5 Digest::SHA Email::Valid \\\nGD::Graph Time::HiRes Socket\n</code></pre> <p></p> <p></p>", "tags": ["install", "dependencies"]}, {"location": "install/dependencies/#next-steps", "title": "Next Steps", "text": "<p>Select what documentation you would like to proceed with next ...</p> <ul> <li> <p> Downloading CSF</p> <p>The next part of the guide will explain how to download CSF from one of our official sources, and then extract it to a temp location on your server.</p> </li> </ul>", "tags": ["install", "dependencies"]}, {"location": "install/download/", "title": "Install \u203a Download CSF", "text": "", "tags": ["install", "setup"]}, {"location": "install/download/#download-csf", "title": "Download CSF", "text": "<p>In the previous section, we explained how to install all the required dependencies for CSF. Now, we\u2019ll guide you through downloading the latest version of ConfigServer Firewall &amp; Security.</p> <p></p>", "tags": ["install", "setup"]}, {"location": "install/download/#generic-environment", "title": "Generic Environment", "text": "<p>These instructions are primarily written for servers without a control panel (such as cPanel, DirectAdmin, etc.).  However, most users can still follow along since the installation process is largely the same across all environments.  </p> <p>The main difference comes after installation \u2014 the way you access and manage CSF will vary depending on the control panel in use.</p> <p> </p> <p>Download the latest version of CSF. You can either download a specific version, or download the repositories' current version.</p> Finding the Latest Version <p>You can find out what the latest version of CSF is by visiting our Github Releases page. </p>  Download Specific Version Download Latest Version <pre><code>wget -O /tmp/csf-firewall-latest.zip \\\n  https://github.com/Aetherinox/csf-firewall/releases/download/15.00/csf-firewall-v15.00.zip\n</code></pre> <pre><code>wget -O /tmp/csf-firewall-latest.zip \"$(\n  curl -s https://api.github.com/repos/Aetherinox/csf-firewall/releases/latest \\\n    | grep 'browser_download_url.*csf-firewall-v[0-9]\\+\\.[0-9]\\+\\.zip\"' \\\n    | grep -v 'helpers' \\\n    | cut -d '\"' -f 4\n)\"\n</code></pre> <p></p> <p>Next, we need to extract the <code>.zip</code> to a folder on our server. We are going to unzip the CSF zip to <code>/tmp/csf</code>:</p>  .zip .tgz <pre><code>unzip /tmp/csf-firewall-latest.zip \\\n  -d /tmp/csf\n</code></pre> <pre><code>tar -xzf /tmp/csf-firewall-latest.tgz \\\n  -C /tmp/csf\n</code></pre> <p></p> <p>After you extract the <code>.zip</code>, you can now change over to the folder where the extracted CSF files are located:</p> <pre><code>cd /tmp/csf\n</code></pre> <p></p> <p>Set the <code>install.sh</code> script to have <code>+x</code> executable permissions by running the command:</p> <pre><code>sudo chmod +x /tmp/csf/install.sh\n</code></pre> <p></p> <p>At this point, we have CSF downloaded to your system and ready to install. However, we are going to first run Diagnostic Tests to ensure that our system is ready to handle CSF and has all required dependencies.</p> <p></p> <p>Select what documentation you would like to proceed with next ...</p> <ul> <li> <p> Run Diagnostic Tests</p> <p>Up next, we will explain how to run some diagnostic tests on your server before installing CSF.  These tests ensure that your server meets all requirements regarding perl dependencies.  </p> <p>Running these checks will confirm whether CSF can function properly on your server.</p> </li> </ul> <p> </p>", "tags": ["install", "setup"]}, {"location": "install/download/#cpanel-whm", "title": "cPanel &amp; WHM", "text": "<p>If you have a server which you do not personally manage or do not have root access for, you will need to sign into WHM and see if your server provider has already pre-installed a copy of CSF which you can use. Without root access to the server, you will be unable to install CSF. Contact your hosting provider for additional information.</p> <p>However, if you manage your own server with root shell access, and have a valid cPanel &amp; WHM license, this means that you can manually install ConfigServer Firewall onto your server to utilize it.</p> <p></p> <p>First, log in to your server as the <code>root</code> user via SSH.</p>  Using Password Using Private Key <pre><code>ssh -vvv root@XX.XX.XX.XX -p 22\n</code></pre> <pre><code>ssh -i /path/to/private_key -vvv root@XX.XX.XX.XX -p 22\n</code></pre> <p></p> <p>You will need to download the latest version of CSF. You can either download a specific version, or download the repositories' current version.</p>  Download Specific Version Download Latest Version <pre><code>wget -O /root/csf-firewall-latest.zip \\\n  https://github.com/Aetherinox/csf-firewall/releases/download/15.00/csf-firewall-v15.00.zip\n</code></pre> <pre><code>wget -O /root/csf-firewall-latest.zip \"$(\n  curl -s https://api.github.com/repos/Aetherinox/csf-firewall/releases/latest \\\n    | grep 'browser_download_url.*csf-firewall-v[0-9]\\+\\.[0-9]\\+\\.zip\"' \\\n    | grep -v 'helpers' \\\n    | cut -d '\"' -f 4\n)\"\n</code></pre> <p></p> <p>Unzip / decompress the downloaded file to your server. We have provided instructions for extracting both the newer <code>.zip</code> format, and the older tar <code>.tgz</code> format:</p>  .zip .tgz <pre><code>unzip /root/csf-firewall-latest.zip \\\n  -d /root/csf\n</code></pre> <pre><code>tar -xzf /root/csf-firewall-latest.tgz \\\n  -C /root/csf\n</code></pre> <p></p> <p>After you extract the <code>.zip</code>, you can now change over to the folder where the extracted CSF files are located:</p> <pre><code>cd /root/csf\n</code></pre> <p></p> <p>Set the <code>install.sh</code> script to have <code>+x</code> executable permissions by running the command:</p> <pre><code>sudo chmod +x /root/csf/install.sh\n</code></pre> <p></p> <p>At this point, we have CSF downloaded to your system and ready to install. However, we are going to first run Diagnostic Tests to ensure that our system is ready to handle CSF and has all required dependencies.</p> <p></p> <p>Select what documentation you would like to proceed with next ...</p> <ul> <li> <p> Run Diagnostic Tests</p> <p>Up next, we will explain how to run some diagnostic tests on your server before installing CSF.  These tests ensure that your server meets all requirements regarding perl dependencies.  </p> <p>Running these checks will confirm whether CSF can function properly on your server.</p> </li> </ul> <p></p> <p></p>", "tags": ["install", "setup"]}, {"location": "install/install/", "title": "Install \u203a Install CSF", "text": "", "tags": ["install", "setup"]}, {"location": "install/install/#install-csf", "title": "Install CSF", "text": "<p>In the previous section, we covered how to install the required dependencies for CSF, download and extract the necessary files, and run the csftest.pl script.  </p> <p>If your tests were successful, you are now ready to install CSF on your server and begin configuring your new firewall. This section focuses on the basic installation process \u2014 detailed configuration will be covered in a later chapter.</p> <p> </p>", "tags": ["install", "setup"]}, {"location": "install/install/#installer-script-summary", "title": "Installer Script Summary", "text": "<p>The installation process for CSF is handled through a main script that triggers several sub-installer scripts. You will run the <code>install.sh</code> script, which automatically detects your platform and then executes the appropriate sub-script.  </p> <p>Each sub-script follows the naming scheme <code>install.&lt;PLATFORM&gt;.sh</code>. We have provided a list of the files below:</p> File Requires Platform <code>install.sh</code> Main installer script, detects your platform and re-reroutes your installation request to the correct installer sub-script listed below <code>install.generic.sh</code> Baremetal <code>install.cpanel.sh</code> <code>/usr/local/cpanel/version</code> cPanel / WHM <code>install.cwp.sh</code> <code>/usr/local/cwpsrv</code> CentOS Web Panel (CWP) <code>install.cyberpanel.sh</code> <code>/usr/local/CyberCP</code> CyberPanel <code>install.directadmin.sh</code> <code>/usr/local/directadmin/directadmin</code> DirectAdmin <code>install.interworx.sh</code> <code>/usr/local/interworx</code> Interworx <code>install.vesta.sh</code> <code>/usr/local/vesta</code> VestaCP <p></p>", "tags": ["install", "setup"]}, {"location": "install/install/#installsh", "title": "install.sh", "text": "<p>The <code>install.sh</code> script serves as a launcher that directs you to the appropriate installation script for your platform. It can be run on any system, automatically detects your environment, and executes the correct installer from the files listed above. Before running it, make sure the script is executable by running <code>chmod +x install.sh</code>. We\u2019ll cover this in the steps below.</p> <p></p>", "tags": ["install", "setup"]}, {"location": "install/install/#installgenericsh", "title": "install.generic.sh", "text": "<p>This is the generic bare-metal installer for CSF. You should use this script when installing CSF on a server that does not have WHM, cPanel, DirectAdmin, or other control panels installed. If you run <code>install.sh</code>  and it does not detect any supported control panels, it will automatically start <code>install.generic.sh</code> to begin the installation.</p> <p></p>", "tags": ["install", "setup"]}, {"location": "install/install/#installcpanelsh", "title": "install.cpanel.sh", "text": "<p><code>/usr/local/cpanel/version</code></p> <p>The <code>install.cpanel.sh</code> script is ran in order to integrate CSF with an existing cPanel/WHM installation. This file triggers if you run <code>install.sh</code>, which checks to see if your server has the file <code>/usr/local/cpanel/version</code>. </p> <p></p>", "tags": ["install", "setup"]}, {"location": "install/install/#installcwpsh", "title": "install.cwp.sh", "text": "<p><code>/usr/local/cwpsrv</code></p> <p>The <code>install.cwp.sh</code> script is ran in order to integrate CSF with an existing copy of CentOS Web Panel (CWP). This file triggers when you run <code>install.sh</code>, which checks to see if your server has the file <code>/usr/local/cwpsrv</code>.</p> <p></p>", "tags": ["install", "setup"]}, {"location": "install/install/#installcyberpanelsh", "title": "install.cyberpanel.sh", "text": "<p><code>/usr/local/CyberCP</code></p> <p>The <code>install.cyberpanel.sh</code> script is ran in order to integrate CSF with an existing copy of Cyber Panel. This file triggers when you run <code>install.sh</code>, which checks to see if your server has the file <code>/usr/local/CyberCP</code>.</p> <p></p>", "tags": ["install", "setup"]}, {"location": "install/install/#installdirectadminsh", "title": "install.directadmin.sh", "text": "<p><code>/usr/local/directadmin/directadmin</code></p> <p>The <code>install.directadmin.sh</code> script is ran in order to integrate CSF with an existing copy of DirectAdmin. This file triggers when you run <code>install.sh</code>, which checks to see if your server has the file <code>/usr/local/directadmin/directadmin</code>.</p> <p></p>", "tags": ["install", "setup"]}, {"location": "install/install/#installinterworxsh", "title": "install.interworx.sh", "text": "<p><code>/usr/local/interworx</code></p> <p>The <code>install.interworx.sh</code> script is ran in order to integrate CSF with an existing copy of Interworx. This file triggers when you run <code>install.sh</code>, which checks to see if your server has the file <code>/usr/local/interworx</code>.</p> <p></p>", "tags": ["install", "setup"]}, {"location": "install/install/#installvestash", "title": "install.vesta.sh", "text": "<p><code>/usr/local/vesta</code></p> <p>The <code>install.vesta.sh</code> script is ran in order to integrate CSF with an existing copy of VestaCP. This file triggers when you run <code>install.sh</code>, which checks to see if your server has the file <code>/usr/local/vesta</code>.</p> <p></p> <p></p>", "tags": ["install", "setup"]}, {"location": "install/install/#generic", "title": "Generic", "text": "<p>In the previous download step; you were instructed to download a copy of CSF which comes in the form of a zip archive. You then extracted that zip to <code>/tmp/csf</code>, and set <code>+x</code> executable permissions on the <code>install.sh</code> file. </p> <p>Next, you must ensure that your server does not have <code>firewalld</code> installed, as CSF and firewalld cannot function together.</p>  Debian/Ubuntu (apt-get) CentOS/RHEL (yum/dnf) <pre><code>sudo apt remove --purge firewalld -y\n</code></pre> <pre><code>sudo yum remove firewalld -y\n</code></pre> <p></p> Finally, run the installation script. You can either execute <code>/tmp/csf/install.sh</code> or <code>/tmp/csf/install.generic.sh</code>. Pick one of the run options below.  <p> Runs <code>install.sh</code>  uses shebang interpreter  requires executable <code>+x</code> permission</p> <p> Runs <code>install.sh</code>  uses <code>sh</code> shell  executable permission not required</p> <p> Runs <code>install.generic.sh</code>  uses shebang interpreter  requires executable <code>+x</code> permission</p> <p> Runs <code>install.generic.sh</code>  uses <code>sh</code> shell  executable permission not required</p>  Option 1 Option 2 Option 3 Option 4 <pre><code>sudo chmod +x /tmp/csf/install.sh\n/tmp/csf/install.sh\n</code></pre> <pre><code>sh /tmp/csf/install.sh\n</code></pre> <pre><code>sudo chmod +x /tmp/csf/install.generic.sh\n/tmp/csf/install.generic.sh\n</code></pre> <pre><code>sh /tmp/csf/install.generic.sh\n</code></pre> <p></p> <p>When you run the installer script, initially it will execute the code inside <code>/tmp/csf/install.sh</code>, however, it will then be passed off to the correct sub-script to complete the installation. If you are not running any control panels such as cPanel, VestaCP, etc, then the installation wizard will run the sub-script <code>/tmp/csf/install.generic.sh</code>.</p> <p>Follow the instructions on-screen. If you are prompted for any additional information, enter it when asked. For the most part, the installation wizard is automated.</p> <p>Once the wizard completes, you can confirm if CSF is installed and functioning by accessing your server via SSH, and running the CSF version command:</p>  Terminal <pre><code>$ sudo csf -v\ncsf: v15.10 (generic)\n</code></pre> <p></p> <p>You can also confirm the status of <code>csf</code> and <code>lfd</code> by running:</p>  Terminal <pre><code>$ sudo systemctl status csf\n\n\u25cf csf.service - ConfigServer Firewall &amp; Security - csf\n    Loaded: loaded (/lib/systemd/system/csf.service; enabled; vendor preset: enabled)\n    Active: active (exited) since Mon 2025-09-15 23:45:04 UTC; 14 seconds ago\n  Main PID: 597 (code=exited, status=0/SUCCESS)\n        CPU: 0min 14.956s\n\nNotice: journal has been rotated since unit was started, output may be incomplete.\n</code></pre> <p></p> <p>If you recieve the correct response, you can skip the rest of this page and proceed to the section Next Steps. A more detailed explanation of how to use CSF will be explained in the next chapter of this guide.</p> <p> </p> <p> </p>", "tags": ["install", "setup"]}, {"location": "install/install/#cpanel-and-whm", "title": "cPanel and WHM", "text": "<p>Installing CSF for WHM is almost the same process outlined in the Generic steps, just with different extraction paths, and how you will access the CSF web interface.</p> <p></p> <p>If you have not yet logged into your server, log in as the <code>root</code> user via SSH.</p>  Using Password Using Private Key <pre><code>ssh -vvv root@XX.XX.XX.XX -p 22\n</code></pre> <pre><code>ssh -i /path/to/private_key -vvv root@XX.XX.XX.XX -p 22\n</code></pre> <p></p> <p>Next, you must ensure that your server does not have <code>firewalld</code> installed, as CSF and firewalld cannot function together.</p>  Debian/Ubuntu (apt-get) CentOS/RHEL (yum/dnf) <pre><code>sudo apt remove --purge firewalld -y\n</code></pre> <pre><code>sudo yum remove firewalld -y\n</code></pre> <p></p> Finally, run the installation script. You can either execute <code>/root/csf/install.sh</code> or <code>/root/csf/install.cpanel.sh</code>. Pick one of the run options below.  <p> Runs <code>install.sh</code>  uses shebang interpreter  requires executable <code>+x</code> permission</p> <p> Runs <code>install.sh</code>  uses <code>sh</code> shell  executable permission not required</p> <p> Runs <code>install.cpanel.sh</code>  uses shebang interpreter  requires executable <code>+x</code> permission</p> <p> Runs <code>install.cpanel.sh</code>  uses <code>sh</code> shell  executable permission not required</p>  Option 1 Option 2 Option 3 Option 4 <pre><code>sudo chmod +x /root/csf/install.sh\n/root/csf/install.sh\n</code></pre> <pre><code>sh /root/csf/install.sh\n</code></pre> <pre><code>sudo chmod +x /root/csf/install.cpanel.sh\n/root/csf/install.cpanel.sh\n</code></pre> <pre><code>sh /root/csf/install.cpanel.sh\n</code></pre> <p></p> <p>When you run the installer script, initially it will execute the code inside <code>/root/csf/install.sh</code>, however, it will then be passed off to the correct sub-script. For cPanel, it will run the sub-script <code>/root/csf/install.cpanel.sh</code>.</p> <p>Follow the instructions on-screen. If you are prompted for any additional information, enter it when asked. For the most part, the installation wizard is automated.</p> <p>Once the installation is complete, you can access CSF through the WHM control panel:</p> <ul> <li>WHM \u00bb Home \u00bb Plugins \u00bb <code>ConfigServer Security &amp; Firewall</code> </li> </ul> <p></p> <p>If you see ConfigServer Security &amp; Firewall within WHM, you can skip the rest of this page and proceed to the section Next Steps. A more detailed explanation of how to configure and use CSF will be explained in the next chapter of this guide.</p> <p></p> <p></p>", "tags": ["install", "setup"]}, {"location": "install/install/#next-steps", "title": "Next Steps", "text": "<p>Select what documentation you would like to proceed with next ...</p> <ul> <li> <p> Enable Web Interface</p> <p>Enable and access the CSF web interface via your  browser.</p> <p>This is an optional step and is not required in order to use CSF.</p> </li> <li> <p> Run Diagnostic Tests</p> <p>Select this option to see documentation on how to run diagnostic tests for your install of CSF. </p> <p>Tests will confirm whether or not CSF is running properly on your server.</p> </li> </ul> <p></p> <p></p>", "tags": ["install", "setup"]}, {"location": "install/services/", "title": "Install \u203a Start Services", "text": "", "tags": ["install", "setup"]}, {"location": "install/services/#start-services", "title": "Start Services", "text": "<p>After you have installed CSF, we can now start the services required for CSF and LFD to run properly. This section covers the basics of getting the services up and running. However, it does not go into detailed configurations.</p> <p> </p>", "tags": ["install", "setup"]}, {"location": "install/services/#testing-mode", "title": "Testing Mode", "text": "<p>Out of box, CSF enables <code>TESTING MODE</code>. If this mode is enabled, the LFD daemon service will not start.  To disable testing mode, we need to open <code>/etc/csf/csf.conf</code> and locate the following:</p> /etc/csf/csf.conf<pre><code># ##############################################################################\n#   Initial Settings\n# ##############################################################################\n#   Testing flag - enables a CRON job that clears iptables incase of\n#   configuration problems when you start csf. This should be enabled until you\n#   are sure that the firewall works - i.e. incase you get locked out of your\n#   server! Then do remember to set it to 0 and restart csf when you're sure\n#   everything is OK. Stopping csf will remove the line from /etc/crontab\n#   \n#   lfd will not start while this is enabled\n# #\nTESTING = \"1\"\n</code></pre> <p></p> <p>Flip the value of <code>TESTING</code> from <code>1</code> to <code>0</code>:</p>  Find Change To /etc/csf/csf.conf<pre><code>TESTING = \"1\"\n</code></pre> /etc/csf/csf.conf<pre><code>TESTING = \"0\"\n</code></pre> <p></p> <p>After disabling <code>TESTING</code> mode, you can now start the services up. Proceed to the section Enable &amp; Disable Services.</p> <p> </p> <p> </p>", "tags": ["install", "setup"]}, {"location": "install/services/#enable-and-disable-services", "title": "Enable and Disable Services", "text": "<p>CSF and LFD can be set to either the status <code>enabled</code> or <code>disabled</code>. Once you complete this section and enable csf, you can then confirm that CSF and LFD are running.</p> <p></p> <code>enabled</code> <p> Both CSF and LFD can be enabled.</p> <pre><code>sudo csf --enable\n</code></pre> <code>disabled</code> <p> CSF can be enabled, but LFD will fail to start.</p> <pre><code>sudo csf --disable\n</code></pre> <p> </p> <p> </p>", "tags": ["install", "setup"]}, {"location": "install/services/#csf-service", "title": "CSF Service", "text": "<p>This section outlines how to ensure the CSF service is operating correctly. First, let's start up the CSF service:</p>  Terminal <pre><code>$ sudo systemctl start csf\n$ sudo csf -ra\n</code></pre> <p></p> <p>Check the current status of CSF by running the command:</p>  Terminal <pre><code>$ sudo systemctl status csf\n\n\u25cf csf.service - ConfigServer Firewall &amp; Security - csf\n    Loaded: loaded (/lib/systemd/system/csf.service; enabled; vendor preset: enabled)\n    Active: active (exited) since Mon 2025-09-15 23:45:04 UTC; 14 seconds ago\n  Main PID: 597 (code=exited, status=0/SUCCESS)\n        CPU: 0min 14.956s\n\nNotice: journal has been rotated since unit was started, output may be incomplete.\n</code></pre> <p></p> <p>If you notice that CSF is not running or has the status <code>inactive (dead)</code> like the following:</p>  Terminal <pre><code>$ sudo systemctl status csf\n\n\u25cb csf.service - ConfigServer Firewall &amp; Security - csf\n    Loaded: loaded (/usr/lib/systemd/system/csf.service; enabled; preset: enabled)\n    Active: inactive (dead)\n</code></pre> <p></p> <p>We must enable the services to ensure they are running. Execute the three commands below in your terminal:</p>  Terminal <pre><code>$ sudo systemctl start csf\n$ sudo csf -ra\n</code></pre> <p></p> <p>Confirm now that the service is up and running:</p>  Terminal <pre><code>$ sudo systemctl status csf\n\n\u25cf csf.service - ConfigServer Firewall &amp; Security - csf\n    Loaded: loaded (/usr/lib/systemd/system/csf.service; enabled; preset: enabled)\n    Active: active (exited) since Sun 2025-09-21 01:35:45 UTC; 4s ago\n    Process: 449564 ExecStart=/usr/sbin/csf --initup (code=exited, status=0/SUCCESS)\n  Main PID: 449564 (code=exited, status=0/SUCCESS)\n        CPU: 621ms\n</code></pre> <p></p> <p>After you have confirmed that the CSF service is running, now we need to ensure that the LFD is also operating normally.</p> <p> </p> <p> </p>", "tags": ["install", "setup"]}, {"location": "install/services/#lfd-service", "title": "LFD Service", "text": "<p>This section outlines how to ensure the LFD service is operating correctly. First, let's start up the LFD service:</p>  Terminal <pre><code>$ sudo systemctl start lfd\n$ sudo csf -ra\n</code></pre> <p></p> <p>Check the current status of LFD by running the command:</p>  Terminal <pre><code>$ sudo systemctl status lfd\n\n\u25cf lfd.service - ConfigServer Firewall &amp; Security - lfd\n    Loaded: loaded (/usr/lib/systemd/system/lfd.service; enabled; preset: enabled)\n    Active: active (running) since Sun 2025-09-21 01:11:21 UTC; 1min 17s ago\n    Process: 335736 ExecStart=/usr/sbin/lfd (code=exited, status=0/SUCCESS)\n  Main PID: 335770 (lfd - sleeping)\n      Tasks: 1 (limit: 4546)\n    Memory: 38.8M (peak: 55.0M)\n        CPU: 4.375s\n    CGroup: /system.slice/lfd.service\n            \u2514\u2500335770 \"lfd - sleeping\"\n</code></pre> <p></p> <p>If you see the status <code>failed</code> like the following example, this could be for any number of reasons. We will review below:</p>  Terminal <pre><code>$ sudo systemctl status lfd\n\n\u00d7 lfd.service - ConfigServer Firewall &amp; Security - lfd\n    Loaded: loaded (/usr/lib/systemd/system/lfd.service; enabled; preset: enabled)\n    Active: failed (Result: signal) since Sun 2025-09-21 01:52:34 UTC; 20min ago\n    Process: 115504 ExecStart=/usr/sbin/lfd (code=killed, signal=KILL)\n        CPU: 186ms\n</code></pre> <p></p> <p>Ensure CSF and LFD are both enabled:</p>  Terminal <pre><code>$ sudo csf -e\n</code></pre> <p></p> <p>Another option to check the reason for the failure is to read out the lfd logs located at <code>/var/log/lfd.log</code>:</p>  Terminal <pre><code>sudo tail -n 50 /var/log/lfd.log\n\nSep 21 01:44:34 server lfd[99819]: *Error* lfd will not run with TESTING enabled in /etc/csf/csf.conf, at line 98\nSep 21 01:44:34 server lfd[99819]: daemon stopped\nSep 21 01:47:24 server lfd[105308]: *Error* lfd will not run with TESTING enabled in /etc/csf/csf.conf, at line 98\nSep 21 01:47:24 server lfd[105308]: daemon stopped\nSep 21 01:47:56 server lfd[101396]: *Error* lfd will not run with TESTING enabled in /etc/csf/csf.conf, at line 98\nSep 21 01:47:56 server lfd[101396]: daemon stopped\nSep 21 01:50:39 server lfd[111685]: *Error* lfd will not run with TESTING enabled in /etc/csf/csf.conf, at line 98\nSep 21 01:50:39 server lfd[111685]: daemon stopped\nSep 21 01:52:07 server lfd[114496]: *Error* lfd will not run with TESTING enabled in /etc/csf/csf.conf, at line 98\nSep 21 01:52:07 server lfd[114496]: daemon stopped\nSep 21 01:52:34 server lfd[115504]: *Error* lfd will not run with TESTING enabled in /etc/csf/csf.conf, at line 98\nSep 21 01:52:34 server lfd[115504]: daemon stopped\nSep 21 01:55:17 server lfd[120584]: *Error* lfd will not run with TESTING enabled in /etc/csf/csf.conf, at line 98\nSep 21 01:55:17 server lfd[120584]: daemon stopped\n</code></pre> <p></p> <p>As our logs above show, it is complaining that <code>TESTIN</code> mode is enabled. You must ensure this mode is disabled before you will be able to enable the lfd service. Check that <code>TESTING = \"0\"</code> is set in your <code>/etc/csf/csf.conf</code>. Flip the value of <code>TESTING</code> from <code>1</code> to <code>0</code>:</p>  Find Change To /etc/csf/csf.conf<pre><code>TESTING = \"1\"\n</code></pre> /etc/csf/csf.conf<pre><code>TESTING = \"0\"\n</code></pre> <p></p> <p>Attempt to start LFD again:</p>  Terminal <pre><code>$ sudo systemctl start lfd\n$ sudo csf -ra\n</code></pre> <p></p> <p>You should now be able to confirm that LFD is running:</p>  Terminal <pre><code>$ sudo systemctl status lfd\n\n\u25cf lfd.service - ConfigServer Firewall &amp; Security - lfd\n    Loaded: loaded (/usr/lib/systemd/system/lfd.service; enabled; preset: enabled)\n    Active: active (running) since Sun 2025-09-21 01:44:00 UTC; 53min ago\n    Process: 335736 ExecStart=/usr/sbin/lfd (code=exited, status=0/SUCCESS)\n  Main PID: 335770 (lfd - sleeping)\n      Tasks: 1 (limit: 4546)\n    Memory: 39.2M (peak: 63.3M)\n        CPU: 15.090s\n    CGroup: /system.slice/lfd.service\n            \u2514\u2500335770 \"lfd - sleeping\"\n</code></pre> <p> </p> <p> </p>", "tags": ["install", "setup"]}, {"location": "install/services/#troubleshooting", "title": "Troubleshooting", "text": "<p>Refer to the following troubleshooting tips if you have issues with installing and starting CSF or the LFD daemon.</p> <p></p>", "tags": ["install", "setup"]}, {"location": "install/services/#lfdservice-will-not-start-inactive-dead", "title": "lfd.service will not start (inactive (dead))", "text": "<p>First, let's ensure <code>TESTING</code> mode is not enabled. Run the following <code>tail</code> command to look at the lfd logs located in <code>/var/log/lfd.log</code>:</p> <pre><code>sudo tail -n 50 /var/log/lfd.log\n\nSep 21 01:44:34 server lfd[99819]: *Error* lfd will not run with TESTING enabled in /etc/csf/csf.conf, at line 98\nSep 21 01:44:34 server lfd[99819]: daemon stopped\nSep 21 01:47:24 server lfd[105308]: *Error* lfd will not run with TESTING enabled in /etc/csf/csf.conf, at line 98\nSep 21 01:47:24 server lfd[105308]: daemon stopped\nSep 21 01:47:56 server lfd[101396]: *Error* lfd will not run with TESTING enabled in /etc/csf/csf.conf, at line 98\nSep 21 01:47:56 server lfd[101396]: daemon stopped\nSep 21 01:50:39 server lfd[111685]: *Error* lfd will not run with TESTING enabled in /etc/csf/csf.conf, at line 98\nSep 21 01:50:39 server lfd[111685]: daemon stopped\nSep 21 01:52:07 server lfd[114496]: *Error* lfd will not run with TESTING enabled in /etc/csf/csf.conf, at line 98\nSep 21 01:52:07 server lfd[114496]: daemon stopped\nSep 21 01:52:34 server lfd[115504]: *Error* lfd will not run with TESTING enabled in /etc/csf/csf.conf, at line 98\nSep 21 01:52:34 server lfd[115504]: daemon stopped\nSep 21 01:55:17 server lfd[120584]: *Error* lfd will not run with TESTING enabled in /etc/csf/csf.conf, at line 98\nSep 21 01:55:17 server lfd[120584]: daemon stopped\n</code></pre> <p></p> <p>If you see the above logs, this means that <code>TESTING</code> mode is enabled. In order for the LFD daemon to start, you must disable testing mode. Open <code>/etc/csf/csf.conf</code> and change the following:</p>  Find Change To /etc/csf/csf.conf<pre><code>TESTING = \"1\"\n</code></pre> /etc/csf/csf.conf<pre><code>TESTING = \"0\"\n</code></pre> <p></p> <p>You can also try to run LFD with <code>strace</code>:</p>  Command Output <pre><code>sudo strace -f /usr/sbin/lfd --check\n</code></pre> <pre><code>rt_sigaction(SIGRT_25, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\nrt_sigaction(SIGRT_26, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\nrt_sigaction(SIGRT_27, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\nrt_sigaction(SIGRT_28, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\nrt_sigaction(SIGRT_29, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\nrt_sigaction(SIGRT_30, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\nrt_sigaction(SIGRT_31, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\nrt_sigaction(SIGRT_32, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\nrt_sigaction(SIGABRT, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\nrt_sigaction(SIGCHLD, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\nrt_sigaction(SIGIO, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\nexit_group(0)                           = ?\n+++ exited with 0 +++\n</code></pre> <p></p> <p>Sometimes <code>strace</code> will give you hints as to what went wrong. In the example above, lfd is exiting with <code>error code 0</code>, which means \u201csuccess / no error\u201d. The program is choosing to shut itself down and telling the OS \u201cI finished cleanly.\u201d. This tells us that it's not due to something failing. When a daemon exits cleanly (exit code 0), you usually have to look inside lfd's own logs, not just systemd\u2019s.</p> <p>In our example above, we clearly see in the <code>/var/log/lfd.log</code> log file that it was due to us having <code>TESTING</code> enabled.</p> <p></p> <p>Another option for checking failure reasons is to run the following command:</p>  Command <pre><code>sudo dmesg -T | tail -n 20\n</code></pre> <p></p> <p>You can also check <code>journalctl</code> for any errors:</p>  Command <pre><code>sudo journalctl -xeu lfd.service\n</code></pre> <p></p> <p>All of the listed methods above will help you narrow down exactly why CSF or LFD are not starting properly.</p> <p></p> <p></p>", "tags": ["install", "setup"]}, {"location": "install/services/#next-steps", "title": "Next Steps", "text": "<p>Select what documentation you would like to proceed with next ...</p> <ul> <li> <p> Enable Web Interface</p> <p>Enable and access the CSF web interface via your  browser.</p> <p>This is an optional step and is not required in order to use CSF.</p> </li> <li> <p> Usage Getting Started</p> <p>Select this option if you would like to start  using CSF to manage your server. This section will introduce you to the basic features and how you can configure the CSF and LFD services.</p> </li> </ul> <p></p> <p></p>", "tags": ["install", "setup"]}, {"location": "install/tests/", "title": "Install \u203a Diagnostic Tests", "text": "", "tags": ["install", "setup", "tests", "diagnostics"]}, {"location": "install/tests/#diagnostic-tests", "title": "Diagnostic Tests", "text": "<p>ConfigServer Firewall &amp; Security includes a few diagnostic tests which you can run and will output the current status of your CSF installation, including whether or not it is operating normally.</p> <p> </p>", "tags": ["install", "setup", "tests", "diagnostics"]}, {"location": "install/tests/#csftestpl", "title": "csftest.pl", "text": "<p>The <code>csftest.pl</code> script is a diagnostic tool included with CSF. Its primary purpose is to check whether your server environment is compatible with CSF and LFD (Login Failure Daemon) before and after installation. When you run <code>csftest.pl</code>, it performs a series of tests to verify:</p> <ul> <li>That required Perl modules are installed and available</li> <li>That essential system commands and binaries (such as iptables, ip6tables, and others) can be found and executed</li> <li>That your operating system and kernel support the necessary firewall features</li> <li>That no conflicting firewall rules or services prevent CSF from running correctly</li> </ul> <p></p> <p>If any issues are detected, the script will report them so you can fix missing dependencies or adjust your system configuration. Running this script is a recommended step before installing CSF to your server, as it ensures that your server is properly prepared for firewall deployment.</p> <p></p> <p>To run these tests; ensure you have the package <code>perl</code> installed on your system as explained in the previous step Dependencies. After you have perl installed, run the command:</p> <pre><code>sudo perl /usr/local/csf/bin/csftest.pl\n</code></pre> <p></p> <p>When the tests run; you should see the following:</p> <pre><code>Testing ip_tables/iptable_filter...OK\nTesting ipt_LOG...OK\nTesting ipt_multiport/xt_multiport...OK\nTesting ipt_REJECT...OK\nTesting ipt_state/xt_state...OK\nTesting ipt_limit/xt_limit...OK\nTesting ipt_recent...OK\nTesting xt_connlimit...OK\nTesting ipt_owner/xt_owner...OK\nTesting iptable_nat/ipt_REDIRECT...OK\nTesting iptable_nat/ipt_DNAT...OK\n\nRESULT: csf should function on this server\n</code></pre> <p> If the tests failed, proceed to the next step Troubleshooting to see if your error is listed and consult it for a possible fix.</p> <p> If the tests succeed, proceed to the next part of the guide:</p> <p></p> <p>Select what documentation you would like to proceed with next ...</p> <ul> <li> <p> Install (Generic)</p> <p>Choose this step if you wish to install CSF using the generic installer. This is good for users who are installing CSF on a bare metal machine with no existing control panels such as cPanel, DirectAdmin, etc.</p> </li> <li> <p> Install (cPanel)</p> <p>Choose this step if you wish to install CSF on a server which already has cPanel and WHM installed. This will allow CSF to be integrated into WHM and will be listed under WHM's Plugins category.</p> </li> </ul> <p></p> <p></p>", "tags": ["install", "setup", "tests", "diagnostics"]}, {"location": "install/tests/#troubleshooting", "title": "Troubleshooting", "text": "<p>If you received any errors during the process of running <code>csftest.pl</code>, review the list of possible errors and solutions below:</p> <p></p>", "tags": ["install", "setup", "tests", "diagnostics"]}, {"location": "install/tests/#unknown-option-dport-csf-requires-legacy-iptables", "title": "unknown option --dport: (CSF requires legacy iptables)", "text": "<p>If you see this error during the CSF tests, your system is using the nftables backend for iptables. CSF requires the legacy iptables backend. Check the current setting with:</p> <pre><code>sudo update-alternatives --display iptables\n</code></pre> <p></p> <p>If you see <code>link currently points to /usr/sbin/iptables-nft</code>, you need to change this over to <code>/usr/sbin/iptables-legacy</code>. Two methods are listed below for doing this, pick one:</p> <p></p>  Method 1 Method 2 <p>To switch over to <code>/usr/sbin/iptables-legacy</code>, run the command:</p> <pre><code>sudo update-alternatives --config iptables\n</code></pre> <p></p> <p>You will see the following:</p> <pre><code>There are 2 choices for the alternative iptables (providing /usr/sbin/iptables).\n\n  Selection    Path                       Priority   Status\n------------------------------------------------------------\n* 0            /usr/sbin/iptables-nft      20        auto mode\n  1            /usr/sbin/iptables-legacy   10        manual mode\n  2            /usr/sbin/iptables-nft      20        manual mode\n</code></pre> <p></p> <p>There may be an asterisk next to <code>selection</code> 0, you need to press 1 and press Enter to switch over to <code>/usr/sbin/iptables-legacy</code>. Then repeat these steps for IPv6</p> <pre><code>sudo update-alternatives --config ip6tables\n</code></pre> <p></p> <p>Along with ipv4 and ipv6, there are two other tables you can switch, which are <code>arptables</code> and <code>ebtables</code>. </p> arptables &amp; ebtables <ul> <li><code>arptables</code>: Works on Layer 2 (link layer), specifically for the ARP protocol.<ul> <li>Lets you control ARP traffic (who can send ARP requests/replies, block spoofing, etc.).</li> <li>Example: prevent ARP spoofing in a local network.</li> </ul> </li> <li><code>ebtables</code>: Works on Ethernet bridge frames (Layer 2).<ul> <li>Lets you filter traffic based on MAC addresses, Ethernet types, or VLAN tags before IP-level filtering happens.</li> <li>Used when the system is acting as a bridge or switch.</li> </ul> </li> </ul> <p></p> <p>If you need to switch the other options over to legacy, those commands are:</p> <pre><code>sudo update-alternatives --config arptables\nsudo update-alternatives --config ebtables\n</code></pre> <p>To switch over to <code>/usr/sbin/iptables-legacy</code>, run the commands listed below:</p>  Debian/Ubuntu (apt-get) CentOS/RHEL (yum/dnf) Error: Not registered; Not setting <p>On newer systems (Debian 11+, Ubuntu 20.04+, RHEL 8+), <code>ebtables</code> and <code>arptables</code> are often completely replaced by nftables, so there isn\u2019t always a legacy version available. This means that you may not have any binaries installed for these two types and could receive the following error if you attempt to change <code>ebtables</code> and <code>arptables</code>:</p> <pre><code>update-alternatives: error: alternative /usr/sbin/ebtables-legacy for ebtables not registered; not setting\nupdate-alternatives: error: alternative /usr/sbin/arptables-legacy for arptables not registered; not setting\n</code></pre> <p>If you receive the error(s) above; simply skip setting <code>ebtables</code> and <code>arptables</code>. Only focus on switching <code>iptables</code> and <code>ip6tables</code> over to <code>iptables-legacy</code></p> <pre><code>sudo update-alternatives --set iptables /usr/sbin/iptables-legacy\nsudo update-alternatives --set ip6tables /usr/sbin/ip6tables-legacy\nsudo update-alternatives --set arptables /usr/sbin/arptables-legacy\nsudo update-alternatives --set ebtables /usr/sbin/ebtables-legacy\n</code></pre> <pre><code>sudo alternatives --config iptables\nsudo alternatives --config ip6tables\nsudo alternatives --config arptables\nsudo alternatives --config ebtables\n</code></pre> <p></p> <p>You\u2019ll be presented with a numbered list of installed binaries (usually nftables and legacy). You need to type the number corresponding to the legacy version so that <code>iptables-legacy</code> becomes the default.</p> <pre><code>There are 2 choices for the alternative iptables (providing /usr/sbin/iptables).\n\n  Selection    Path                       Priority   Status\n------------------------------------------------------------\n* 0            /usr/sbin/iptables-nft      20        auto mode\n  1            /usr/sbin/iptables-legacy   10        manual mode\n  2            /usr/sbin/iptables-nft      20        manual mode\n\nEnter to keep the current selection[+], or type selection number: 1\n</code></pre> <p></p> <p>You can confirm your changes by running the command:</p> <pre><code>iptables -V\n</code></pre> <p></p> <p>Which should return:</p> <pre><code>$ iptables -V\niptables v1.8.7 (legacy)\n</code></pre> <p></p> <p>You can also run:</p> <pre><code>sudo update-alternatives --display iptables\n</code></pre> <p></p> <p>Which should output:</p> <pre><code>iptables - manual mode\nlink currently points to /usr/sbin/iptables-legacy\n</code></pre> <p></p> <p>You can always switch back to <code>iptables-nft</code> by running:</p> <pre><code>sudo update-alternatives --set iptables /usr/sbin/iptables-nft\n</code></pre> <p></p> <p></p>", "tags": ["install", "setup", "tests", "diagnostics"]}, {"location": "install/tests/#next-steps", "title": "Next Steps", "text": "<p>Select what documentation you would like to proceed with next ...</p> <ul> <li> <p> Install (Generic)</p> <p>Choose this step if you wish to install CSF using the generic installer. This is good for users who are installing CSF on a bare metal machine with no existing control panels such as cPanel, DirectAdmin, etc.</p> </li> <li> <p> Install (cPanel)</p> <p>Choose this step if you wish to install CSF on a server which already has cPanel and WHM installed. This will allow CSF to be integrated into WHM and will be listed under WHM's Plugins category.</p> </li> </ul>", "tags": ["install", "setup", "tests", "diagnostics"]}, {"location": "install/webui/", "title": "Enable CSF Web Interface", "text": "", "tags": ["install", "setup"]}, {"location": "install/webui/#enable-web-interface", "title": "Enable Web Interface", "text": "<p>ConfigServer Firewall provides an optional web-based interface that lets you manage CSF from your browser. With it, you can configure settings, and blacklist or whitelist IPs without using commands or editing configuration files manually. If you choose not to enable the interface, all management must be done directly through the CSF config files, or by running commands through your shell.</p> <p></p> <p></p>", "tags": ["install", "setup"]}, {"location": "install/webui/#setup", "title": "Setup", "text": "<p>This section covers the initial setup of the CSF web interface with only the essential requirements. Follow these steps to get the web interface up and running quickly.</p> <p></p>", "tags": ["install", "setup"]}, {"location": "install/webui/#step-1-install-perl-modules", "title": "Step 1: Install Perl Modules", "text": "<p>To get the CSF web interface functioning on your server, you must first ensure that you have a few perl modules installed. If you followed our dependencies guide, you should already have these dependencies satisfied. If you have not yet installed them, run one of the following commands in your server's terminal:</p>  Debian/Ubuntu (apt-get) CentOS/RHEL (yum/dnf) Perl (CPAN) <pre><code>apt-get update\napt-get install -y perl \\\n  libio-socket-ssl-perl \\\n  libwww-perl \\\n  libjson-perl \\\n  libnet-ssleay-perl \\\n  libcrypt-ssleay-perl \\\n  liblwp-protocol-https-perl \\\n  libgd-graph-perl \\\n  libio-socket-inet6-perl \\\n  libsocket6-perl \\\n  libnet-libidn-perl \\\n  libtime-hires-perl \\\n  sendmail-bin \\\n  dnsutils \\\n  unzip \\\n  wget\n</code></pre> <pre><code>yum install -y perl \\\n  perl-libwww-perl \\\n  perl-IO-Socket-SSL.noarch \\\n  perl-JSON \\\n  perl-Net-SSLeay \\\n  perl-Net-LibIDN \\\n  perl-Crypt-SSLeay \\\n  perl-LWP-Protocol-https.noarch \\\n  perl-GDGraph \\\n  perl-Math-BigInt \\\n  perl-Time-HiRes \\\n  perl-Socket \\\n  perl-Socket6 \\\n  perl-IO-Socket-Inet6 \\\n  wget \\\n  unzip \\\n  net-tools \\\n  ipset \\\n  bind-utils\n</code></pre> <pre><code>perl -MCPAN -eshell\ncpan&gt; install IO::Socket::SSL IO::Socket::INET6 Socket6 Net::LibIDN \\\nLWP LWP::Protocol::https LWP::UserAgent JSON Net::SSLeay \\\nCrypt::SSLeay Digest::MD5 Digest::SHA Email::Valid \\\nGD::Graph Time::HiRes Socket\n</code></pre> <p> </p>", "tags": ["install", "setup"]}, {"location": "install/webui/#step-2-enable-web-ui", "title": "Step 2: Enable Web UI", "text": "<p>To enable CSF web interface, edit the file <code>/etc/csf/csf.conf</code> in your favorite text editor:</p> <pre><code>sudo nano /etc/csf/csf.conf\n</code></pre> <p></p> <p>We need to update the following values. Click  to see information about each setting.</p> /etc/csf/csf.conf<pre><code># #\n#   1 to enable, 0 to disable web ui \n# #\n\nUI = \"1\" # (1)!\n\n# #\n#   Set port for web UI. The default port is 6666, but\n#   I change this to 1025 to easy access. Default port create some issue\n#   with popular chrome and firefox browser (in my case) \n# #\n\nUI_PORT = \"1025\" # (2)!\n\n# #\n#   Leave blank to bind to all IP addresses on the server \n# #\n\nUI_IP = \"\" # (3)!\n\n# #\n#   Set username for authetnication \n# #\n\nUI_USER = \"admin\" # (4)!\n\n# #\n#   Set a strong password for authetnication \n# #\n\nUI_PASS = \"admin\" # (5)!\n</code></pre> <ol> <li> Defines if the CSF web interface is enabled or not. Will be     accessible via your web browser.     Required Values: <code>0</code>, <code>1</code></li> <li> Defines the port to assign for the CSF web interface.     This should be set to a value of <code>1023</code> or higher.     Required Values: <code>&gt; 1023</code></li> <li> Defines the IP address to bind to the CSF web interface.     If you plan to route this through Traefik, you should set this to your docker subnet such as <code>::ffff:172.17.0.1</code>.     Leave blank if you want to bind to all IP addresses on server. Required Values: <code>blank</code>, <code>::IPv6:IPv4</code></li> <li> Defines the username that will be required in order to     sign into the CSF web interface. This should be alphabetic or numerical characters.     Required Values: <code>A-Z,a-z,0-9</code></li> <li> Defines the password that will be required in order to     sign into the CSF web interface. This should alphabetic, numerical, or special characters.     Required Values: <code>A-Z,a-z,0-9</code></li> </ol> <p></p> <p>Once you have edited the file, save and exit. Next, open the file <code>/etc/csf/ui/ui.allow</code> and add your public IP to allow access to the CSF web interface. Ensure you only add one IP address per line:</p>  /etc/csf/ui/ui.allow Command <pre><code>10.10.0.6           # example LAN ip\n40.159.100.6        # example WAN ip\n</code></pre> <pre><code>sudo echo \"YOUR_PUBLIC_IP_ADDRESS\" &gt;&gt;  /etc/csf/ui/ui.allow\n</code></pre> <p></p> <p>The CSF web interface works under the <code>lfd daemon _LFD_</code>. We need to restart the LFD on your system using the following command:</p> <pre><code>sudo service lfd restart\n</code></pre> <p></p> <p>In order to gain access to the online admin panel; you must ensure LFD and CSF are running. You can check by running the commands:</p> <pre><code>sudo service lfd status\n</code></pre> <p></p> <p>You should see the following:</p> <pre><code>\u25cf lfd.service - ConfigServer Firewall &amp; Security - lfd\n     Loaded: loaded (/lib/systemd/system/lfd.service; enabled; preset: enabled)\n     Active: active (running) since Mon 2025-19-21 11:59:38 UTC; 1s ago\n    Process: 46393 ExecStart=/usr/sbin/lfd (code=exited, status=0/SUCCESS)\n   Main PID: 46407 (lfd - sleeping)\n      Tasks: 8 (limit: 4613)\n     Memory: 121.7M\n        CPU: 2.180s\n     CGroup: /system.slice/lfd.service\n</code></pre> <p></p> <p>Next, confirm CSF service is also running:</p> <pre><code>sudo service csf status\n</code></pre> <p></p> <p>Check the output for any errors; which there should be none.</p> <pre><code>\u25cf csf.service - ConfigServer Firewall &amp; Security - csf\n     Loaded: loaded (/lib/systemd/system/csf.service; enabled; preset: enabled)\n     Active: active (exited) since Mon 2024-08-05 12:04:09 MST; 1s ago\n    Process: 46916 ExecStart=/usr/sbin/csf --initup (code=exited, status=0/SUCCESS)\n   Main PID: 46916 (code=exited, status=0/SUCCESS)\n        CPU: 12.692s\n</code></pre> <p></p> <p>If you see the following error; you must install <code>ipset</code> on your system:</p> <pre><code>csf[46313]: open3: exec of /sbin/ipset flush failed: No such file or directory at /usr/sbin/csf line 5650.\n</code></pre> <p></p>  Debian/Ubuntu (apt-get) CentOS/RHEL (yum/dnf) <pre><code>sudo apt-get update \nsudo apt-get install -y ipset\n</code></pre> <pre><code>sudo yum makecache\nsudo yum install -y ipset\n</code></pre> <p></p> <p>Alternatively, you can restart <code>CSF</code> and <code>LFD</code> at the same time by running:</p> <pre><code>sudo csf -ra\n</code></pre> <p> </p>", "tags": ["install", "setup"]}, {"location": "install/webui/#step-3-access-web-ui", "title": "Step 3: Access Web UI", "text": "<p>Now, access the CSF interface in your browser with the specified port. For this tutorial; we used 1025 port and accessed the CSF admin panel by opening our browser and going to:</p> <pre><code>http://127.0.0.1:1025\n</code></pre> <p></p> Default Username &amp; Password <p>If you did not change the default username and password in <code>/etc/csf/csf.conf</code>, you will get an error about the default credentials not being changed. You need to go back to the <code>/etc/csf/csf.conf</code>  set <code>UI_USER</code> and <code>UI_PASS</code></p> <p></p> CSF Login Interface <p></p> <p>After successful login, you will find the screen like below.</p> CSF Main Dashboard <p></p> <p>We will cover how to actually use the CSF web interface in another section. As of right now you should at least be able to access the web interface by going to <code>http://127.0.0.1:1025</code> in your browser. Or whatever IP and port you assigned within the <code>/etc/csf/csf.conf</code>.</p> <p></p> <p></p>", "tags": ["install", "setup"]}, {"location": "install/webui/#traefik-integration", "title": "Traefik Integration", "text": "<p>This section of the guide explains how to set up CSF along with Traefik reverse proxy integration.</p> <p></p>", "tags": ["install", "setup"]}, {"location": "install/webui/#domain-name", "title": "Domain Name", "text": "<p>Before you begin, you\u2019ll need to decide how you want to access Traefik and CSF from your browser. There are three main options:</p> <ol> <li> <p>Use the server\u2019s IP address    Access services directly by memorizing and entering their IP addresses.  </p> </li> <li> <p>Purchase a valid domain name    Register a real TLD (e.g., <code>.com</code>, <code>.org</code>, <code>.net</code>, <code>.io</code>) for public access.  </p> </li> <li> <p>Use a local domain    Configure a <code>.local</code> or <code>.lan</code> domain for internal access only.    \u26a0\ufe0f These domains cannot be reached from outside your local network.</p> </li> </ol> <p>The main reason for choosing how you will access Traefik will determine how you generate the correct SSL certificate. SSL certificates allow you to securely access Traefik and the CSF web interface over the <code>https</code> protocol. Without a valid certificate, you would be limited to using the insecure <code>http</code> protocol.</p> <p>We will outline the differences in the options below:</p> <p> </p>", "tags": ["install", "setup"]}, {"location": "install/webui/#purchase-domain", "title": "Purchase Domain", "text": "<p>This option involves you buying your own TLD / domain name from a valid domain regisrar online.</p> <p></p>", "tags": ["install", "setup"]}, {"location": "install/webui/#how-to-obtain", "title": "How To Obtain", "text": "<p>If you plan to go the route of purchasing a valid TLD / domain, you can find a relatively cheap domain through registrars online. We've listed a few recommendations, but you can pick whichever company you want to go with:</p> Our Recommendation <p>We make no money from this recommendation, and there is no affiliate link included.  </p> <p>That said, we personally recommend Porkbun as a reliable domain registrar. They offer competitive pricing and include free WHOIS privacy with any domain purchase.  </p> <p>We have interacted with their support in the past and have been impressed with their professionalism. Of course, you are free to choose whichever registrar you prefer. We only recommend them because we have been an actual customer for over six years, and have never had a negative experience.</p> <p>Plus, the comedy on their website is fun to read.</p> <ul> <li>Porkbun</li> <li>Cloudflare</li> <li>NameSilo</li> </ul> <p>Once you get your domain purchased, you'll need to set up the domain name to point to your server. You could also decide to set up your domain name to run through Cloudflare (optional).</p> <p> </p>", "tags": ["install", "setup"]}, {"location": "install/webui/#ssl-certificate", "title": "SSL Certificate", "text": "<p>Generating an SSL certificate for a purchased domain is extremely simple, and you have a few options:</p> <ol> <li>You can create a Cloudflare account, link your domain with Cloudflare, and get a free SSL certificate</li> <li>Your domain name may include a free 1-year SSL certificate</li> <li>When you set up your domain to run with Traefik, there are settings which allow you to have Traefik automatically generate an SSL certificate free of charge.</li> </ol> <p> </p>", "tags": ["install", "setup"]}, {"location": "install/webui/#setup_1", "title": "Setup", "text": "<p>After you have purchased a valid TLD, you will need to associate that domain with the IP address or nameservers that are assigned to your server where Traefik and CSF will be hosted. There are a multitude of tutorials online about configuring your domain, so we won't go into great detail. The process however, is simple.</p> <p>We do recommend setting your domain up with Cloudflare. This allows you to configure your domain name with your server, and also receive free services such as DNS management, SSL certificates, firewall rules, and DDoS protection. No extra cost.</p> <p> </p>", "tags": ["install", "setup"]}, {"location": "install/webui/#local-domain", "title": "Local Domain", "text": "<p>This option allows you to use a free local domain such as <code>.lan</code> or <code>.local</code> to generate a self-signed certificate and access services such as CSF and Traefik, however, on a local network only.</p> <p></p>", "tags": ["install", "setup"]}, {"location": "install/webui/#how-to-obtain_1", "title": "How To Obtain", "text": "<p>If you decide not to purchase a domain, another option is to configure your server so it can be accessed through a local domain (such as <code>.lan</code> or <code>.local</code>).  </p> <ul> <li><code>.local</code> is an officially reserved special-use domain name defined in RFC 6762.   It is typically used with Multicast DNS (mDNS) and is only accessible within your local network.  </li> <li><code>.lan</code> (and similar names like <code>.home</code> or <code>.internal</code>) are unofficial pseudo-domains.   They are commonly used for private networks but are not recognized or reserved by ICANN.  </li> </ul> <p>Unlike a registered domain (e.g., <code>.com</code>, <code>.net</code>, <code>.org</code>), a local domain:</p> <ul> <li>Will not resolve on the public internet.</li> <li>Can only be accessed within your own LAN.</li> <li>May cause conflicts if the pseudo-domain is ever assigned as a real TLD in the future.</li> </ul> <p>This setup works well if you only need access to CSF and Traefik on your internal network. However, if you need external access from an outside network, you\u2019ll need to purchase a domain.</p> <p> </p>", "tags": ["install", "setup"]}, {"location": "install/webui/#ssl-certificate_1", "title": "SSL Certificate", "text": "<p>Obtaining an SSL certificate for a local domain involves more work. You have the following options:</p> <ol> <li>Self-generate your own SSL certificate using an app such as OpenSSL<ul> <li> Windows</li> <li> Linux</li> </ul> </li> <li>Find an SSL Certificate authority which allows you to generate certificates for a public IP address.<ul> <li>Let's Encrypt announced that IP based SSL certificates would be available in Q4 of 2025</li> </ul> </li> <li>Use an online self-signed certificate generator instead of OpenSSL.<ul> <li>One example: https://www.devglan.com/online-tools/generate-self-signed-cert</li> </ul> </li> <li>Traefik also provides quick documentation on how to generate your own self-signed certificate; follow that tutorial here</li> </ol> <p> </p>", "tags": ["install", "setup"]}, {"location": "install/webui/#setup_2", "title": "Setup", "text": "<p>If you have decide to go with a <code>.local</code> or <code>.lan</code> self-hosted domain, you will need to tell your network / computers what domain you want to use, and where the domain / subdomains should go when you type it into your browser.</p> <p>To configure local domain access, you\u2019ll need to edit your operating system\u2019s hosts file. This ensures that when you type a local domain into your browser, your computer redirects it to the IP address of your Traefik Docker container.  </p> <p>Before you can do this, make sure Traefik is installed and running so you know which IP address has been assigned to the container. Once you have the container\u2019s IP, open your OS hosts file and create entries like the following examples. For ours, Traefik is assigned the docker ip <code>172.18.0.2</code>:</p>  C:\\Windows\\system32\\drivers\\etc\\hosts /etc/hosts <pre><code>172.18.0.2 myserver.local\n172.18.0.2 traefik.myserver.local\n::1 myserver.local localhost\n</code></pre> <pre><code>172.18.0.2 myserver.local\n172.18.0.2 traefik.myserver.local\n::1 myserver.local localhost\n</code></pre> <p></p> <p>The host file changes above means that any time you go to <code>myserver.local</code> in your browser, the local domain will automatically try to establish a connection with your Traefik container via the IP <code>172.18.0.2</code>.</p> <p> </p>", "tags": ["install", "setup"]}, {"location": "install/webui/#setup-traefik", "title": "Setup Traefik", "text": "<p>Now that we have all of the domain information out of the way, we can now install Traefik Reverse Proxy on your server. Traefik allows you to install their software on a few different platforms:</p> <ol> <li>Binary Distribution</li> <li>Docker</li> <li>Docker Swarm</li> <li>Kubernetes</li> </ol> <p></p> <p>We are not going to provide detailed instructions on installing Traefik since that is outside the scope of this documentation, but there are many tutorials online, and we have linked several above next to each installation option.</p> <p>If you opted to use a local domain that you did not purchase, you will need to generate a self-signed certificate and install it in Traefik. This allows you to access your server securely over <code>https</code> rather than the insecure <code>http</code> protocol.  </p> <p>For guidance on generating a self-signed SSL certificate, refer to Traefik\u2019s documentation creating a self-signed certificate.</p> <p> </p>", "tags": ["install", "setup"]}, {"location": "install/webui/#setup-traefik-with-csf", "title": "Setup Traefik with CSF", "text": "<p>By this point in the guide, you should have:</p> <ul> <li>A registered domain or a local/LAN domain name</li> <li>A Let's Encrypt or self-signed SSL certificate</li> <li>A running installation of Traefik Reverse Proxy</li> <li>An installed copy of ConfigServer Firewall &amp; Security (CSF)</li> </ul> <p></p> <p>Next, we\u2019ll configure CSF so it can be accessed through Traefik.  </p> <p>Open <code>/etc/csf/csf.conf</code> and update the <code>UI_IP</code> setting. This defines the IP address that the CSF web interface will bind to.  By default, the value is empty, which means CSF\u2019s web interface binds to all IPs on the server.</p> <p>When setting <code>UI_IP</code>, we will use the IP address of our docker network, which is formatted as <code>::ffff:172.17.0.1</code>. This is an IPv6-mapped IPv4 address which consists of:</p> Value Description <code>::</code> shorthand for \u201call zeros\u201d in IPv6. <code>ffff:</code> a marker that indicates the address is an IPv4-mapped address <code>172.17.0.1</code> the actual IPv4 address being represented (in this case, the Docker bridge gateway) <p>In short, <code>::ffff:172.17.0.1</code> is just another way of writing the IPv4 address <code>172.17.0.1</code>, but inside the IPv6 address space.  </p> <pre><code>UI_IP = \"::ffff:172.17.0.1\"\n</code></pre> <p>The above change will ensure that your CSF web interface is not accessible via your public IP address. We're going to allow access to it through our docker network and domain name.</p> <p> </p> <p>Next, we need to edit the Traefik config files to add a few things:</p> <ul> <li>Middleware</li> <li>Routers</li> <li>Entrypoints</li> <li>Services</li> </ul> <p></p> <p>We will also define Middleware, which adds an extra layer of security to the CSF web interface.  Users must pass through this middleware before they can successfully access the CSf web interface.</p> What Is Middleware? <p>Middleware allow you to adjust or filter requests before they reach your service, or to modify responses before they are sent back to the client.  </p> <p>Traefik provides a wide range of middleware: some modify requests or headers, others handle redirections, add authentication, apply access controls, and more.  </p> <p>Adding middleware for Traefik is completely optional. The middleware listed below offer additional security to help ensure that nobody can access your CSF web interface.</p> <ul> <li><code>authentik:</code> middleware requires that you have Authentik installed on your server. If you do not wish to use this app for authentication, you can skip implementing this.</li> <li><code>geoblock:</code> middleware requires that you install the Traefik plugin Geoblock before it will function properly.</li> <li><code>whitelist:</code> middleware is built into Traefik and does not require any additional plugins. It works out-of-the-box.</li> </ul> <p></p> <p> Full Traefik documentation for middleware can be found here.</p> <p></p> <p>In the two code block tabs below, we give the code that you should add to two important Traefik config files:</p> <ul> <li><code>dynamic.yml</code>: Traefik's dynamic configuration file</li> <li><code>traefik.yml</code>: Traefik's static configuration file</li> </ul> <p></p> dynamic.yml (Traefik Dynamic File) traefik.yml (Traefik Static File) <p>The code contained within this codeblock should go inside your Traefik dynamic file, usually named <code>dynamic.yml</code>.</p> <pre><code># #\n#   Protocol \u203a http\n# #\n\nhttp:\n\n    # #\n    #   http \u203a Middleware\n    # #\n\n    middlewares:\n\n        # #\n        #   Middleware \u203a Http redirect\n        #   Redirect http to https\n        # #\n\n        https-redirect:\n            redirectScheme:\n                scheme: \"https\"\n                permanent: true\n\n        # #\n        #   Middleware \u203a Authentik\n        # #\n\n        authentik:\n            forwardauth:\n                address: http://authentik-server:9000/outpost.goauthentik.io/auth/traefik\n                trustForwardHeader: true\n                authResponseHeaders:\n                    - X-authentik-username\n                    - X-authentik-groups\n                    - X-authentik-email\n                    - X-authentik-name\n                    - X-authentik-uid\n                    - X-authentik-jwt\n                    - X-authentik-meta-jwks\n                    - X-authentik-meta-outpost\n                    - X-authentik-meta-provider\n                    - X-authentik-meta-app\n                    - X-authentik-meta-version\n\n        # #\n        #   Middleware \u203a Geoblock\n        # #\n\n        geoblock:\n            plugin:\n                GeoBlock:\n                    allowLocalRequests: \"true\"\n                    allowUnknownCountries: \"false\"\n                    blackListMode: \"false\"\n                    api: https://get.geojs.io/v1/ip/country/{ip}\n                    ipGeolocationHttpHeaderField: \"Cf-Ipcountry\"\n                    xForwardedFor: \"X-Forwarded-For\"\n                    apiTimeoutMs: \"150\"\n                    cacheSize: \"15\"\n                    addCountryHeader: \"true\"\n                    forceMonthlyUpdate: \"true\"\n                    logAllowedRequests: \"true\"\n                    logApiRequests: \"true\"\n                    logLocalRequests: \"true\"\n                    silentStartUp: \"false\"\n                    unknownCountryApiResponse: nil\n                    countries:\n                        - US\n\n        # #\n        #   Middleware \u203a IP White/Allow List\n        # #\n\n        whitelist:\n            ipAllowList:\n                sourceRange:\n                    - \"127.0.0.0/8\"\n                ipStrategy:\n                    excludedIPs:\n                        # Cloudflare IP List\n                        # These will be ignored and the next IP in line will be checked\n                        - 173.245.48.0/20\n                        - 103.21.244.0/22\n                        - 103.22.200.0/22\n                        - 103.31.4.0/22\n                        - 141.101.64.0/18\n                        - 108.162.192.0/18\n                        - 190.93.240.0/20\n                        - 188.114.96.0/20\n                        - 197.234.240.0/22\n                        - 198.41.128.0/17\n                        - 162.158.0.0/15\n                        - 104.16.0.0/13\n                        - 104.24.0.0/14\n                        - 172.64.0.0/13\n                        - 131.0.72.0/22\n                        - 2400:cb00::/32\n                        - 2606:4700::/32\n                        - 2803:f800::/32\n                        - 2405:b500::/32\n                        - 2405:8100::/32\n                        - 2a06:98c0::/29\n                        - 2c0f:f248::/32\n\n    # #\n    #   http \u203a Routers\n    # #\n\n    routers:\n        csf-http:\n            service: \"csf\"\n            rule: \"Host(`csf.domain.com`)\" # (1)!\n            entryPoints:\n                - \"http\" # (2)!\n            middlewares:\n                - https-redirect@file # (3)!\n\n        csf-https:\n            service: \"csf\"\n            rule: \"Host(`csf.domain.com`)\" # (4)!\n            entryPoints:\n                - \"https\" # (5)!\n            middlewares:\n                - authentik@file # (6)!\n                - whitelist@file # (7)!\n                - geoblock@file # (8)!\n            tls:\n                certResolver: cloudflare # (9)!\n                domains:\n                    - main: \"domain.com\"\n                      sans:\n                          - \"*.domain.com\"\n\n    # #\n    #   http \u203a Services\n    # #\n\n    services:\n        csf:\n            loadBalancer:\n                servers:\n                    - url: \"https://172.17.0.1:1025/\" # (10)!\n</code></pre> <ol> <li> The <code>subdomain.domain.ext</code> you will use to access the      CSF web interface over the insecure <code>http</code> protocol. Required</li> <li> Defines the Traefik entrypoint that this Docker      container will use for the insecure <code>http</code> protocol routed through <code>csf-http</code>.      This entrypoint is defined in the Traefik <code>traefik.yml</code> static file. Traefik entrypoints docs Required</li> <li> This middleware ensures that any connections made over      the insecure <code>http</code> protocol to the router <code>csf-http</code> are automatically redirected to the secure <code>https</code> (SSL) protocol     router <code>csf-https</code>.      This middleware is defined in the Traefik <code>dynamic.yml</code> dynamic file. Required</li> <li> The <code>subdomain.domain.ext</code> you will use to access the CSF      web interface over the secure <code>https</code> protocol. Required</li> <li> Defines the Traefik entrypoint that this Docker      container will use for the secure <code>https</code> protocol.     This entrypoint is defined in the Traefik <code>traefik.yml</code> static file. Traefik entrypoints docs Required</li> <li> Specifies the middleware <code>Authentik</code> when a user attempts      to access the CSF web interface over the secure <code>https</code> protocol. With this middleware, the user must authenticate through <code>Authentik</code> before proceeding and gaining access to      the web interface. This middleware is defined in the Traefik <code>dynamic.yml</code> dynamic file. Traefik middleware <code>Authentik</code> docs Optional</li> <li> Specifies the middleware <code>IP Whitelist</code> when a user      attempts to access the CSF web interface over the secure <code>https</code> protocol. With this middleware, only users connecting from whitelisted IP addresses are allowed to access the web interface. This middleware is defined in the Traefik <code>dynamic.yml</code> dynamic file. Traefik middleware <code>IPAllowList</code> docs Optional</li> <li> Specifies the middleware <code>Geo-block</code> when a user      attempts to access the CSF web interface over the secure <code>https</code> protocol. With this middleware, users from blacklisted geographical locations are denied access to the web interface. This middleware is defined in the Traefik <code>dynamic.yml</code> dynamic file. Traefik middleware <code>Geoblock Plugin</code> docs Optional</li> <li> If you purchased a domain name, you can configure which     certificate resolver you generate SSL certificate from.      view <code>certResolver</code> docs Optional</li> <li> This line defines the Traefik <code>service</code> / <code>loadbalancer</code> rules.      <code>ip</code> is the IP address assigned to your Traefik container through your Docker network. In our example, Traefik is assigned to      <code>172.17.0.1</code>. You can also use the Traefik container name instead of the IP. <code>port</code> should be set to the port assigned to the ConfigServer Firewall web interface. This is defined by the <code>UI_PORT</code>      setting in <code>/etc/csf/csf.conf</code>. In our example, we use <code>1025</code>. view <code>loadbalancer</code> docs Required</li> </ol> <p>After adding the above lines to your Traefik <code>dynamic.yml</code>, you will also need to update the Traefik static configuration file, usually named <code>traefik.yml</code>.  </p> <p>The static file defines key settings such as the file provider, the entrypoints used to access your web service, and any plugins that Traefik should load.</p> <p>The code contained within this codeblock should go inside your Traefik static file, usually named <code>traefik.yml</code>.</p> <pre><code># #\n#   Global\n# #\n\nglobal:\n    checkNewVersion: false\n    sendAnonymousUsage: false\n\n# #\n#   Logs\n#   \n#   filePath must match volume mounted in docker-compose.yml\n# #\n\nlog:\n    level: DEBUG\n    format: \"common\"\n\n# #\n#   Access Logs\n#   \n#   filePath must match volume mounted in docker-compose.yml\n# #\n\naccessLog:\n    filePath: \"/var/log/traefik/access.log\"\n\n# #\n#   Api\n# #\n\napi:\n    dashboard: true\n    insecure: true\n    debug: true\n\n# #\n#   Entry Points\n# #\n\nentryPoints:\n\n    # #\n    #   Port \u203a HTTP\n    #   \n    #   *trustedIps     : List of Cloudflare Trusted IP's above for HTTPS requests\n    # #\n\n    http:\n        address: :80\n        forwardedHeaders:\n            trustedIPs: &amp;trustedIps\n                # Cloudlare Public IP List &gt; Start &gt; for HTTP requests, remove this if you don't use it; https://cloudflare.com/de-de/ips/\n                - 103.21.244.0/22\n                - 103.22.200.0/22\n                - 103.31.4.0/22\n                - 104.16.0.0/13\n                - 104.24.0.0/14\n                - 108.162.192.0/18\n                - 131.0.72.0/22\n                - 141.101.64.0/18\n                - 162.158.0.0/15\n                - 172.64.0.0/13\n                - 173.245.48.0/20\n                - 188.114.96.0/20\n                - 190.93.240.0/20\n                - 197.234.240.0/22\n                - 198.41.128.0/17\n                - 2400:cb00::/32\n                - 2606:4700::/32\n                - 2803:f800::/32\n                - 2405:b500::/32\n                - 2405:8100::/32\n                - 2a06:98c0::/29\n                - 2c0f:f248::/32\n        http:\n            redirections:\n                entryPoint:\n                    to: https\n                    scheme: https\n\n    # #\n    #   Port \u203a HTTPS\n    #   \n    #   *trustedIps     : List of Cloudflare Trusted IP's above for HTTPS requests\n    # #\n\n    https:\n        address: :443\n        http3: {}\n        forwardedHeaders:\n            trustedIPs: *trustedIps\n        transport:\n            keepAliveMaxRequests: 0\n            keepAliveMaxTime: 0s\n            lifeCycle:\n              requestAcceptGraceTimeout: 0\n              graceTimeOut: 120s\n            respondingTimeouts:\n              readTimeout: 0\n              writeTimeout: 0\n              idleTimeout: 0\n\n# #\n#   Plugins\n# #\n\nexperimental:\n    plugins:\n        GeoBlock:\n            moduleName: \"github.com/PascalMinder/geoblock\"\n            version: \"v0.2.8\"\n\n# #\n#   Providers\n#   \n#   file:\n#       filename: must match volume mounted in docker-compose.yml\n#   \n#   docker:\n#       exposedByDefault = true\n#       all docker-compose.yml files will automatically create a new traefik provider. \n#   \n#       this means if you are using file provider in dynamic file, each container \n#       will show up twice. x1 @docker and x1 @file\n#   \n#       if exposedByDefault = false, you must manually add `trafik.enable=true` to each container in the docker-compose.yml\n# #\n\nproviders:\n    docker:\n        endpoint: \"unix:///var/run/docker.sock\"\n        exposedByDefault: false\n        network: traefik\n        watch: true\n    file:\n        filename: \"/etc/traefik/dynamic.yml\"\n        watch: true\n</code></pre> <p></p> <p>In the code blocks above, we attached multiple Traefik middlewares to <code>routers</code>:  </p> <ul> <li>Authentik Middleware<ul> <li>Require authentication through Authentik before allowing access.  </li> </ul> </li> <li>IP AllowList<ul> <li>Restrict access to the CSF web interface by whitelisted IP addresses.  </li> </ul> </li> <li>Geoblocking<ul> <li>Restrict access based on Geographical location</li> </ul> </li> </ul> <p> </p>", "tags": ["install", "setup"]}, {"location": "install/webui/#restart-traefik", "title": "Restart Traefik", "text": "<p>Once you configure these changes in Traefik, you can restart your Traefik docker container. The command for that depends on how you set up the container. If you used docker-compose.yml, you can cd into the folder with the <code>docker-compose.yml</code> file and then execute:</p> <pre><code>docker compose down &amp;&amp; docker compose up -d\n</code></pre> <p> </p>", "tags": ["install", "setup"]}, {"location": "install/webui/#restart-traefik_1", "title": "Restart Traefik", "text": "<p>Once you configure these changes in Traefik, you can restart your Traefik docker container. The command for that depends on how you set up the container. If you used docker-compose.yml, you can cd into the folder with the <code>docker-compose.yml</code> file and then execute:</p> <pre><code>docker compose down &amp;&amp; docker compose up -d\n</code></pre> <p></p> <p></p>", "tags": ["install", "setup"]}, {"location": "install/webui/#next-steps", "title": "Next Steps", "text": "<p>Select what documentation you would like to proceed with next ...</p> <ul> <li> <p> Usage Getting Started</p> <p>Select this option if you would like to start  using CSF to manage your server. This section will introduce you to the basic features and how you can configure the CSF and LFD services.</p> </li> </ul> <p> </p>", "tags": ["install", "setup"]}, {"location": "patcher/configure/", "title": "Patcher: Configure", "text": "", "tags": ["install", "patch"]}, {"location": "patcher/configure/#configure-patches", "title": "Configure Patches", "text": "<p>Before you run the downloaded patcher; there are several files you must open and edit. Do not run the patcher yet.</p> <p></p>", "tags": ["install", "patch"]}, {"location": "patcher/configure/#docker", "title": "Docker", "text": "<p>The Docker patch has a few settings that must be modified. To change these settings, open the file:</p> <pre><code>sudo nano /patch/docker.sh\n</code></pre> <p></p> <p>Find the following settings:</p> <pre><code># #\n\napp_dir_this_a=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" &amp;&gt; /dev/null &amp;&amp; pwd )\"     # current script full path\napp_dir_this_b=\"${PWD}\"                                                             # current script full path (alternative)\napp_file_this=$(basename \"$0\")                                                      # docker.sh (with ext)\napp_file_bin=\"${app_file_this%.*}\"                                                  # docker (without ext)\napp_pid=$BASHPID                                                                    # app pid\napp_title=\"ConfigServer Firewall - Docker Patch\"                                    # app title; displayed with --version\napp_about=\"Sets up your firewall rules to work with Docker and Traefik. \\n\"\\\n\"     This script requires that you have iptables installed on your system. \\n\"\\\n\"     The required packages will be installed if you do not have them.\"             # app about; displayed with --version\napp_ver=(\"14\" \"24\" \"0\")                                                             # current script version\n\n# #\n#   define &gt; configs\n</code></pre> <p></p> <p>The settings are outlined below:</p> Setting Description <code>DOCKER_INT</code> main docker network interface <code>CSF_FILE_ALLOW</code> Path to your <code>csf.allow</code> file <code>CSF_COMMENT</code> comment added to each new whitelisted docker ip <code>DEBUG_ENABLED</code> debugging / better logs <code>IP_CONTAINERS</code> list of ip address blocks you will be using for your docker setup. these blocks will be whitelisted through ConfigServer Firewall <p></p>", "tags": ["install", "patch"]}, {"location": "patcher/configure/#settings", "title": "Settings", "text": "<p>Each individual setting with a detailed description</p> <p></p>", "tags": ["install", "patch"]}, {"location": "patcher/configure/#docker_int", "title": "DOCKER_INT", "text": "<p>2.0.0 <code>docker0</code> </p> <p>The main docker visual bridge network name; this is usually <code>docker0</code>, however, it can be changed. You can find a list of these by running the command</p> <pre><code>ip link show\n</code></pre> Output <pre><code>4: docker0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc noqueue state DOWN mode DEFAULT group default \n    link/ether 01:af:fd:1a:a1:2f ard ff:ff:ff:ff:ff:ff\n</code></pre> <p> </p>", "tags": ["install", "patch"]}, {"location": "patcher/configure/#csf_file_allow", "title": "CSF_FILE_ALLOW", "text": "<p>2.0.0 <code>/etc/csf/csf.allow</code> </p> <p>The full path to your ConfigServer's <code>csf.allow</code> file. Each time an IP from one of your docker containers is detected, the IP will be whitelisted in ConfigServer Firewall.</p> docker.sh <pre><code>CSF_FILE_ALLOW=\"/etc/csf/csf.allow\"\n</code></pre> <p> </p>", "tags": ["install", "patch"]}, {"location": "patcher/configure/#csf_comment", "title": "CSF_COMMENT", "text": "<p>2.0.0 <code>Docker container whitelist</code> </p> <p>This is the comment that will be appended to each IP that is added to your ConfigServer's <code>allow.csf</code> whitelist file.</p> docker.shcsf.allow <pre><code>CSF_COMMENT=\"Docker container whitelist\"\n</code></pre> <pre><code>172.18.0.21 # Docker container whitelist - Fri Jun 7 11:43:00 2024\n172.18.0.12 # Docker container whitelist - Fri Jun 7 11:43:01 2024\n172.18.0.11 # Docker container whitelist - Fri Jun 7 11:43:01 2024\n</code></pre> <p> </p>", "tags": ["install", "patch"]}, {"location": "patcher/configure/#debug_enabled", "title": "DEBUG_ENABLED", "text": "<p>2.0.0 <code>false</code> </p> <p>If set <code>true</code>, additional information will be printed to terminal when the user executes <code>sudo csf -ra</code></p> docker.sh <pre><code>DEBUG_ENABLED=\"false\"\n</code></pre> <p> </p>", "tags": ["install", "patch"]}, {"location": "patcher/configure/#ip_containers", "title": "IP_CONTAINERS", "text": "<p>2.0.0 <code>172.17.0.0/16</code> </p> <p>A list of IP blocks that you use within docker for container assignment.</p> docker.sh <pre><code>IP_CONTAINERS=(\n    '172.17.0.0/16'\n)\n</code></pre> <p></p> <p></p>", "tags": ["install", "patch"]}, {"location": "patcher/configure/#openvpn", "title": "OpenVPN", "text": "<p>The OpenVPN patch has a few settings that must be modified. To change these settings, open the file:</p> <pre><code>sudo nano /patch/openvpn.sh\n</code></pre> <p></p> <p>Find the following settings:</p> <pre><code>ETH_ADAPTER=$(ip route | grep default | sed -e \"s/^.*dev.//\" -e \"s/.proto.*//\")\nTUN_ADAPTER=$(ip -br l | awk '$1 ~ \"^tun[0-9]\" { print $1}')\nIP_PUBLIC=$(curl -s ipinfo.io/ip)\nDEBUG_ENABLED=\"false\"\n\n# #\n#   list &gt; vpn ips\n#\n#   this is the IP pool assigned to a user who connects to your vpn server\n# #\n\nIP_POOL=(\n    '10.8.0.0/24'\n)\n</code></pre> <p></p> <p>The settings are outlined below:</p> Setting Description <code>ETH_ADAPTER</code> name of primary network adapter <code>TUN_ADAPTER</code> name of OpenVPN tunnel adapter <code>IP_PUBLIC</code> public IP to your server <code>DEBUG_ENABLED</code> debugging / better logs <code>IP_POOL</code> list of subnets assigned to your OpenVPN server <p></p>", "tags": ["install", "patch"]}, {"location": "patcher/configure/#settings_1", "title": "Settings", "text": "<p>Each individual setting with a detailed description</p> <p></p>", "tags": ["install", "patch"]}, {"location": "patcher/configure/#eth_adapter", "title": "ETH_ADAPTER", "text": "<p>2.0.0 <code>$(ip route | grep default | sed -e \"s/^.*dev.//\" -e \"s/.proto.*//\")</code> </p> <p>The name of your primary server network adapter. This is usually <code>eth*</code>, <code>enp*</code>, etc.</p> openvpn.sh <pre><code>ETH_ADAPTER=$(ip route | grep default | sed -e \"s/^.*dev.//\" -e \"s/.proto.*//\")\n</code></pre> <p></p> <p>The default value attempts to auto-detect your network adapter name, however, you can specify the name manually:</p> openvpn.sh <pre><code>ETH_ADAPTER=\"eth0\"\n</code></pre> <p></p> <p>You can usually find your main network adapter with the command:</p> TerminalOutput <pre><code>ifconfig\n</code></pre> <pre><code>eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500\n        inet XX.XX.XX.XX  netmask 255.255.248.0  broadcast XX.XX.XX.XX\n        inet6 ea24::a1bd:ef15:15a5:aae  prefixlen 64  scopeid 0x20&lt;link&gt;\n        ether 01:15:72:15:2a:ab  txqueuelen 1000  (Ethernet)\n        RX packets 101924006  bytes 383095603887 (383.0 GB)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 100519601  bytes 134852355384 (134.8 GB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\nlo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536\n        inet 127.0.0.1  netmask 255.0.0.0\n        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;\n        loop  txqueuelen 1000  (Local Loopback)\n        RX packets 7741770  bytes 2099091655 (2.0 GB)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 7741770  bytes 2099091655 (2.0 GB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n</code></pre> <p> </p>", "tags": ["install", "patch"]}, {"location": "patcher/configure/#tun_adapter", "title": "TUN_ADAPTER", "text": "<p>2.0.0 <code>$(ip -br l | awk '$1 ~ \"^tun[0-9]\" { print $1}')</code> </p> <p>The name of the primary OpenVPN tunnel adapter name. This is usually <code>tun*</code>.</p> openvpn.sh <pre><code>TUN_ADAPTER=$(ip -br l | awk '$1 ~ \"^tun[0-9]\" { print $1}')\n</code></pre> <p></p> <p>The default value attempts to auto-detect your tunnel adapter name, however, you can specify the tunnel name manually:</p> openvpn.sh <pre><code>TUN_ADAPTER=\"tun0\"\n</code></pre> <p></p> <p>You can usually find your main network adapter with the command:</p> TerminalOutput <pre><code>ifconfig\n</code></pre> <pre><code>tun0: flags=4305&lt;UP,POINTOPOINT,RUNNING,NOARP,MULTICAST&gt;  mtu 1500\n        inet 10.8.0.1  netmask 255.255.255.0  destination 10.8.0.1\n        inet6 fe80::d70f:d8a8:32ab:1292  prefixlen 64  scopeid 0x20&lt;link&gt;\n        unspec 00-00-00-00-00-00-00-00-00-00-00-00-00-00-00-00  txqueuelen 500  (UNSPEC)\n        RX packets 620722  bytes 134501334 (134.5 MB)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 1449168  bytes 1756905789 (1.7 GB)\n        TX errors 0  dropped 37128 overruns 0  carrier 0  collisions 0\n</code></pre> <p> </p>", "tags": ["install", "patch"]}, {"location": "patcher/configure/#ip_public", "title": "IP_PUBLIC", "text": "<p>2.0.0 <code>$(curl -s ipinfo.io/ip)</code> </p> <p>The public IP address of your server.</p> openvpn.sh <pre><code>IP_PUBLIC=$(curl -s ipinfo.io/ip)\n</code></pre> <p></p> <p>The default value attempts to auto-detect your public IP address, however, you can specify the ip manually:</p> openvpn.sh <pre><code>IP_PUBLIC=\"204.22.36.22\"\n</code></pre> <p></p> <p>There are a few ways that you can obtain your server's public IP address:</p> Method 1Method 2Method 3 <pre><code>wget -q -O - ipinfo.io/ip\n\n# 204.22.36.22\n</code></pre> <pre><code>sudo apt-get install lynx -y\nlynx -source ipinfo.io/ip\n\n# 204.22.36.22\n</code></pre> <pre><code>curl ipinfo.io/ip\n\n# 204.22.36.22\n</code></pre> <p> </p>", "tags": ["install", "patch"]}, {"location": "patcher/configure/#debug_enabled_1", "title": "DEBUG_ENABLED", "text": "<p>2.0.0 <code>false</code> </p> <p>If set <code>true</code>, additional information will be printed to terminal when the patch is ran.</p> docker.sh <pre><code>DEBUG_ENABLED=\"false\"\n</code></pre> <p> </p>", "tags": ["install", "patch"]}, {"location": "patcher/configure/#ip_pool", "title": "IP_POOL", "text": "<p>2.0.0 <code>10.8.0.0/24</code> </p> <p>A list of subnets assigned to your OpenVPN server.</p> docker.sh <pre><code>IP_POOL=(\n    '10.8.0.0/24'\n)\n</code></pre> <p> </p> <p></p>", "tags": ["install", "patch"]}, {"location": "patcher/download/", "title": "Patcher: Download", "text": "", "tags": ["install", "patch"]}, {"location": "patcher/download/#download-patches", "title": "Download Patches", "text": "<p>After you have installed CSF, ConfigServer WebUI, and enabled both lfd and csf services; it's now time to run the patcher. The patcher will check your current configuration, and add a series of iptable rules so that apps like Docker and OpenVPN can communicate with the outside world and users can access your services.</p> <p></p>", "tags": ["install", "patch"]}, {"location": "patcher/download/#about", "title": "About", "text": "<p>The patcher includes several patches:</p> <code>Docker</code> <p>Allows for you to restart CSF without having to restart your docker containers. Scans every container you have set up in docker and adds a whitelist firewall rule. Automatically enables CSF Docker Mode.</p> <code>OpenVPN</code> <p>Allows VPN clients to connect to your OpenVPN server without being blocked by the CSF firewall.</p> <p></p> <p></p>", "tags": ["install", "patch"]}, {"location": "patcher/download/#download", "title": "Download", "text": "<p>Within your server, change to whatever directory where you want to download the patcher:</p> <pre><code>cd $HOME/Documents\n</code></pre> <p></p> <p>Next, ensure you have the package <code>git</code> installed so that we can use it to fetch the patch:</p> <pre><code>sudo apt-get install git\n</code></pre> <p></p> <p>Clone the patch repo:</p> <pre><code>git clone https://github.com/Aetherinox/csf-firewall.git\n</code></pre> <p></p> <p>Finally, set new permissions on the patcher's <code>install.sh</code> file by running the command:</p> <pre><code>sudo chmod +x /patch/install.sh\n</code></pre> <p></p> <p>The patcher is now on your system and ready to run. However, before we run the patcher; there are a few things that need to be configured. Do not run the patch yet. </p> <p>Proceed to the Configure section.</p> <p></p> <p></p>", "tags": ["install", "patch"]}, {"location": "patcher/download/#next-steps", "title": "Next Steps", "text": "<pre><code>url:            ../configure/\nname:           Next: How to configure the patcher\ndesc:           Instructions for configuring the patches included\nimage:          https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSjXOa4WN-mW3gXnIo_hEY6uAwoi2v_e02eG3TCHxSwIY70Y_OzErdaeaepXFoRa2sYx8M&amp;usqp=CAU\nfavicon:        https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSjXOa4WN-mW3gXnIo_hEY6uAwoi2v_e02eG3TCHxSwIY70Y_OzErdaeaepXFoRa2sYx8M&amp;usqp=CAU\nfavicon_size:   25\ntarget:         same\naccent:         a40547E0\n</code></pre>", "tags": ["install", "patch"]}, {"location": "plugins/", "title": "Index", "text": ""}, {"location": "themes/install/", "title": "Themes: Install", "text": "", "tags": ["install", "themes"]}, {"location": "themes/install/#themes-install", "title": "Themes: Install", "text": "<p>This section outlines how to install custom themes that are included in the Github repository. These themes will override your existing ConfigServer Firewall theme, so be aware that you will be unable to utilize the default light theme unless you back up the original files and add them back.</p> <p></p>", "tags": ["install", "themes"]}, {"location": "themes/install/#available-themes", "title": "Available Themes", "text": "<p>We offer the following custom themes:</p> <p></p> <p></p> Dark theme preview <p></p> <p></p>", "tags": ["install", "themes"]}, {"location": "themes/install/#install", "title": "Install", "text": "<p>Head over to the Releases page and download the theme zip file:</p> <ul> <li><code>*-theme-dark.zip</code></li> </ul> <p></p> List of Github repository files available for download <p></p> <p>Extract the files from the zip to the same paths as they are shown in the zip. You should have the following files:</p> <p>Backup Data</p> <p>It is recommended that you back up your current copy of ConfigServer Firewall before overwriting the files with the custom theme files.</p> <ul> <li><code>/etc/csf/ui/images/*.css</code></li> <li><code>/usr/local/csf/lib/ConfigServer/*.pm</code></li> <li><code>/usr/sbin/lfd</code></li> </ul> <p> </p> <p>After you have copied over the new files from the zip, give ConfigServer Firewall a restart using the command:</p> <pre><code>sudo csf -ra\n</code></pre> <p></p> <p>Once ConfigServer Firewall is restarted, you should be able to open your browser and navigate to your firewall's normal URL address and see the new theme.</p> <p></p> Dark theme login page <p></p> <p></p>", "tags": ["install", "themes"]}, {"location": "themes/install/#uninstall", "title": "Uninstall", "text": "<p>Currently, there is no uninstaller available for custom themes. In order to remove your custom theme, you must restore the original ConfigServer Firewall theme files that come with the official version. These are located in the following paths:</p> <ul> <li><code>/etc/csf/ui/images/*.css</code></li> <li><code>/usr/local/csf/lib/ConfigServer/*.pm</code></li> <li><code>/usr/sbin/lfd</code></li> </ul> <p></p> <p></p>", "tags": ["install", "themes"]}, {"location": "usage/getting-started/", "title": "Usage \u203a Getting Started", "text": "", "tags": ["usage", "configure"]}, {"location": "usage/getting-started/#usage-getting-started", "title": "Usage \u203a Getting Started", "text": "<p>In the previous chapter, Installation, we covered how to install both the depenencies and ConfigServer Firewall &amp; Security (CSF) itself on your server. This chapter covers the fundamentals of configuring CSF and understanding how it operates. </p> <p>If you are looking for straight-forward information such as commands, folder and file structure, or configuration examples, check out the Cheatsheet.</p> <p></p> <p></p>", "tags": ["usage", "configure"]}, {"location": "usage/cheatsheet/commands/", "title": "Cheatsheet \u203a Commands", "text": "", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/commands/#cheatsheet-commands", "title": "Cheatsheet \u203a Commands", "text": "<p>This section outlines all of the commands that can be run in your server\u2019s terminal for ConfigServer Firewall &amp; Security (CSF) which will allow you to:</p> <ul> <li>Manage your firewall  </li> <li>Add whitelisted IPs  </li> <li>Start or stop services </li> <li>List your current rules  </li> </ul> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/commands/#enable", "title": "Enable", "text": "<p><code>-e,  --enable</code></p> <p>Enable csf and lfd if previously disabled</p> <pre><code>sudo csf -e\n</code></pre> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/commands/#disable", "title": "Disable", "text": "<p><code>-x,  --disable</code></p> <p>Disable csf and lfd completely</p> <pre><code>sudo csf -x\n</code></pre> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/commands/#start", "title": "Start", "text": "<p><code>-s,  --start</code></p> <p>Starts the firewall and applies any rules that have been configured at startup.</p> <pre><code>sudo csf -s\n</code></pre> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/commands/#stop", "title": "Stop", "text": "<p><code>-f,  --stop</code></p> <p>Flush/Stop firewall rules (Note: lfd may restart csf)</p> <pre><code>sudo csf -f\n</code></pre>  Terminal <pre><code>Flushing chain `INPUT'\nFlushing chain `FORWARD'\nFlushing chain `CC_ALLOWPORTS'\n[ ... ]\nDeleting chain `ALLOWIN'\nDeleting chain `ALLOWOUT'\nDeleting chain `CC_ALLOWP'\nDeleting chain `CC_ALLOWPORTS'\n[ ... ]\n</code></pre> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/commands/#restart", "title": "Restart", "text": "<p><code>-r,  --restart</code></p> <p>Restart firewall rules (csf)</p> <pre><code>sudo csf -r\n</code></pre>  Terminal <pre><code>Flushing chain `INPUT'\nFlushing chain `FORWARD'\nFlushing chain `OUTPUT'\nFlushing chain `ALLOWIN'\nFlushing chain `ALLOWOUT'\nFlushing chain `CC_ALLOWP'\nFlushing chain `CC_ALLOWPORTS'\n[ ... ]\n</code></pre> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/commands/#quick-restart", "title": "Quick Restart", "text": "<p><code>-q,  --startq</code></p> <p>Quick restart (csf restarted by lfd)</p> <pre><code>sudo csf -q\n</code></pre>  Terminal <pre><code>lfd will restart csf within the next 5 seconds\n</code></pre> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/commands/#force-restart", "title": "Force Restart", "text": "<p><code>-sf, --startf</code></p> <p>Force CLI restart regardless of LFDSTART setting</p> <pre><code>sudo csf -sf\n</code></pre>  Terminal <pre><code>Flushing chain `INPUT'\nFlushing chain `FORWARD'\nFlushing chain `OUTPUT'\nFlushing chain `ALLOWIN'\nFlushing chain `ALLOWOUT'\nFlushing chain `CC_ALLOWP'\nFlushing chain `CC_ALLOWPORTS'\n[ ... ]\n</code></pre> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/commands/#restart-all", "title": "Restart All", "text": "<p><code>-ra, --restartall</code></p> <p>Restart firewall rules (csf) and then restart lfd daemon. Both csf and then lfd should be restarted after making    any  changes  to the configuration files</p> <pre><code>sudo csf -ra\n</code></pre>  Terminal <pre><code>Flushing chain `INPUT'\nFlushing chain `FORWARD'\nFlushing chain `OUTPUT'\nFlushing chain `ALLOWIN'\nFlushing chain `ALLOWOUT'\nFlushing chain `CC_ALLOWP'\nFlushing chain `CC_ALLOWPORTS'\n[ ... ]\n</code></pre> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/commands/#cluster-restart", "title": "Cluster Restart", "text": "<p><code>-crs, --crestart</code></p> <p>Cluster restart csf and lfd</p> <pre><code>sudo csf -crs\n</code></pre> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/commands/#manage-lfd-daemon", "title": "Manage Lfd Daemon", "text": "<p><code>--lfd [stop|start|restart|status]</code></p> <p>Actions to take with the lfd daemon</p> <pre><code>sudo csf --lfd stop\nsudo csf --lfd start\nsudo csf --lfd restart\nsudo csf --lfd status\n</code></pre> stopstartrestartstatus <pre><code>No output\n</code></pre> <pre><code>No output\n</code></pre> <pre><code>\u25cf lfd.service - ConfigServer Firewall &amp; Security - lfd\n    Loaded: loaded (/lib/systemd/system/lfd.service; enabled; preset: enabled)\n    Active: active (running) since 15ms ago\n    Process: 3769 ExecStart=/usr/sbin/lfd (code=exited, status=0/SUCCESS)\n  Main PID: 3782 (lfd - starting)\n      Tasks: 1 (limit: 4613)\n    Memory: 38.7M\n        CPU: 366ms\n    CGroup: /system.slice/lfd.service\n            \u251c\u25003782 \"lfd - starting\"\n            \u2514\u25003784 \"lfd - starting\"\n\nsystemd[1]: Starting lfd.service - ConfigServer Firewall &amp; Security - lfd...\nsystemd[1]: Started lfd.service - ConfigServer Firewall &amp; Security - lfd.\n</code></pre> <pre><code>\u25cf lfd.service - ConfigServer Firewall &amp; Security - lfd\n    Loaded: loaded (/lib/systemd/system/lfd.service; enabled; preset: enabled)\n    Active: active (running) since 1min 3s ago\n    Process: 3769 ExecStart=/usr/sbin/lfd (code=exited, status=0/SUCCESS)\n  Main PID: 3782 (lfd - sleeping)\n      Tasks: 2 (limit: 4613)\n    Memory: 45.2M\n        CPU: 9.476s\n    CGroup: /system.slice/lfd.service\n            \u251c\u25003782 \"lfd - sleeping\"\n            \u2514\u25003791 \"lfd UI\"\n\nsystemd[1]: Starting lfd.service - ConfigServer Firewall &amp; Security - lfd...\nsystemd[1]: Started lfd.service - ConfigServer Firewall &amp; Security - lfd.\n</code></pre> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/commands/#check-for-updates", "title": "Check for Updates", "text": "<p><code>-c,  --check</code></p> <p>Check for updates to csf but do not upgrade</p> <pre><code>sudo csf -c\n</code></pre>  Terminal <pre><code>csf is already at the latest version: v14.20\n</code></pre> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/commands/#update", "title": "Update", "text": "<p><code>-u,  --update</code></p> <p>Check for updates to csf and upgrade if available</p> <pre><code>sudo csf -u\n</code></pre> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/commands/#update-force", "title": "Update (Force)", "text": "<p><code>-uf</code></p> <p>Force an update of csf whether and upgrade is required or not</p> <pre><code>sudo csf -uf\n</code></pre> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/commands/#version", "title": "Version", "text": "<p><code>-v,  --version</code></p> <p>Show csf version</p> <pre><code>sudo csf -v\n</code></pre>  Terminal <pre><code>csf: v15.10 (generic)\n</code></pre> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/commands/#list-firewall-rules-ipv4", "title": "List Firewall Rules (IPv4)", "text": "<p><code>-l,  --status</code></p> <p>List/Show the IPv4 iptables configuration</p> <pre><code>sudo csf -l\n</code></pre>  Terminal <pre><code>iptables filter table\n=====================\nChain INPUT (policy DROP 0 packets, 0 bytes)\nnum   pkts bytes target     prot opt in     out     source               destination         \n1       33  2492 ACCEPT     udp  --  *      *       0.0.0.0/0            0.0.0.0/0            multiport dports 4000,5353\n2      758 55610 ACCEPT     tcp  --  *      *       0.0.0.0/0            0.0.0.0/0            multiport dports 4000\n3        0     0 ACCEPT     udp  --  *      *       0.0.0.0/0            0.0.0.0/0            multiport dports 5353\n4    5209K   28G LOCALINPUT  all  --  !lo    *       0.0.0.0/0            0.0.0.0/0           \n13       3   180 ACCEPT     tcp  --  !lo    *       0.0.0.0/0            0.0.0.0/0            ctstate NEW tcp dpt:22\n14     998 56956 ACCEPT     tcp  --  !lo    *       0.0.0.0/0            0.0.0.0/0            ctstate NEW tcp dpt:25\n15     123  5612 ACCEPT     tcp  --  !lo    *       0.0.0.0/0            0.0.0.0/0            ctstate NEW tcp dpt:53\n16      16   680 ACCEPT     tcp  --  !lo    *       0.0.0.0/0            0.0.0.0/0            ctstate NEW tcp dpt:853\n17       2   100 ACCEPT     tcp  --  !lo    *       0.0.0.0/0            0.0.0.0/0            ctstate NEW tcp dpt:80\n18      74  3148 ACCEPT     tcp  --  !lo    *       0.0.0.0/0            0.0.0.0/0            ctstate NEW tcp dpt:110\n19     125  5624 ACCEPT     tcp  --  !lo    *       0.0.0.0/0            0.0.0.0/0            ctstate NEW tcp dpt:143\n</code></pre> <p></p> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/commands/#list-firewall-rules-ipv6", "title": "List Firewall Rules (IPv6)", "text": "<p><code>-l6, --status6</code></p> <p>List/Show the IPv6 ip6tables configuration</p> <pre><code>sudo csf -l6\n</code></pre>  Terminal <pre><code>ip6tables filter table\n======================\nChain INPUT (policy DROP 0 packets, 0 bytes)\nnum   pkts bytes target     prot opt in     out     source               destination         \n8        0     0 ACCEPT     all      !lo    *       ::/0                 ::/0                 ctstate RELATED,ESTABLISHED\n9        0     0 ACCEPT     tcp      !lo    *       ::/0                 ::/0                 ctstate NEW tcp dpt:20\n10       0     0 ACCEPT     tcp      !lo    *       ::/0                 ::/0                 ctstate NEW tcp dpt:21\n11       0     0 ACCEPT     tcp      !lo    *       ::/0                 ::/0                 ctstate NEW tcp dpt:22\n12       0     0 ACCEPT     tcp      !lo    *       ::/0                 ::/0                 ctstate NEW tcp dpt:25\n13       0     0 ACCEPT     tcp      !lo    *       ::/0                 ::/0                 ctstate NEW tcp dpt:53\n14       0     0 ACCEPT     tcp      !lo    *       ::/0                 ::/0                 ctstate NEW tcp dpt:853\n15       0     0 ACCEPT     tcp      !lo    *       ::/0                 ::/0                 ctstate NEW tcp dpt:80\n16       0     0 ACCEPT     tcp      !lo    *       ::/0                 ::/0                 ctstate NEW tcp dpt:110\n17       0     0 ACCEPT     tcp      !lo    *       ::/0                 ::/0                 ctstate NEW tcp dpt:143\n</code></pre> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/commands/#add-ip-to-allow-list", "title": "Add IP to Allow List", "text": "<p><code>-a,  --add ip [comment]</code></p> <p>Allow an IP and add to <code>/etc/csf/csf.allow</code></p> <pre><code>sudo csf -a &lt;IP_ADDRESS&gt;\nsudo csf -a 142.250.189.142\n</code></pre>  Terminal <pre><code>Adding 142.250.189.142 to csf.allow and iptables ACCEPT...\ncsf: IPSET adding [142.250.189.142] to set [chain_ALLOW]\n</code></pre> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/commands/#remove-ip-to-allow-list", "title": "Remove IP to Allow List", "text": "<p><code>-ar, --addrm ip</code></p> <p>Remove an IP from <code>/etc/csf/csf.allow</code> and delete rule</p> <pre><code>sudo csf -ar &lt;IP_ADDRESS&gt;\n</code></pre> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/commands/#add-ip-to-deny-list", "title": "Add IP to Deny List", "text": "<p><code>-d,  --deny ip [comment]</code></p> <p>Deny an IP and add to <code>/etc/csf/csf.deny</code></p> <pre><code>sudo csf -d &lt;IP_ADDRESS&gt;\n</code></pre> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/commands/#remove-ip-from-deny-list", "title": "Remove IP from Deny List", "text": "<p><code>-dr, --denyrm ip</code></p> <p>Unblock an IP and remove from <code>/etc/csf/csf.deny</code></p> <pre><code>sudo csf -dr &lt;IP_ADDRESS&gt;\n</code></pre> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/commands/#remove-all-ips-from-deny-list", "title": "Remove All IPs from Deny List", "text": "<p><code>-df, --denyf</code></p> <p>Remove and unblock all entries in <code>/etc/csf/csf.deny</code></p> <pre><code>sudo csf -df\n</code></pre>  Terminal <pre><code>csf: all entries removed from csf.deny\n</code></pre> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/commands/#grep-search-for-ip", "title": "Grep Search for IP", "text": "<p><code>-g,  --grep ip</code></p> <p>Search the iptables and ip6tables rules for a match (e.g. IP, CIDR, Port Number)</p> <pre><code>sudo csf -g &lt;STRING&gt;\nsudo csf -g 22\nsudo csf -g ACCEPT\n</code></pre> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/commands/#lookup-ip", "title": "Lookup IP", "text": "<p><code>-i,  --iplookup ip</code></p> <p>Lookup IP address geographical information using <code>CC_LOOKUPS</code> setting in <code>/etc/csf/csf.conf</code></p> <pre><code>sudo csf -i &lt;IP_ADDRESS&gt;\nsudo csf -i 142.250.189.142\n</code></pre>  Terminal <pre><code>142.250.189.142 (US/United States/mia09s26-in-f14.1e100.net)\n</code></pre> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/commands/#view-temp-allowban-list", "title": "View Temp Allow/Ban List", "text": "<p><code>-t,  --temp</code></p> <p>Displays the current list of temporary allow and deny IP entries with their TTL and comment</p> <pre><code>sudo csf -t\n</code></pre>  Terminal <pre><code>A/D   IP address          Port    Dir     Time To Live     Comment\nALLOW 142.250.189.142     *       inout   58m 56s          Manually added: 142.250.189.142 (US/United States/mia09s26-in-f14.1e100.net)\n</code></pre> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/commands/#remove-temp-allowban-ip", "title": "Remove Temp Allow/Ban IP", "text": "<p><code>-tr, --temprm ip</code></p> <p>Remove an IP from the temporary IP ban or allow list</p> <pre><code>sudo csf -tr &lt;IP_ADDRESS&gt;\nsudo csf -tr 142.250.189.142\n</code></pre>  Terminal <pre><code>ACCEPT  all opt -- in !lo out *  142.250.189.142  -&gt; 0.0.0.0/0  \nACCEPT  all opt -- in * out !lo  0.0.0.0/0  -&gt; 142.250.189.142  \ncsf: 142.250.189.142 temporary allow removed\n</code></pre> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/commands/#remove-temp-ban-ip", "title": "Remove Temp Ban IP", "text": "<p><code>-trd, --temprmd ip</code></p> <p>Remove an IP from the temporary IP ban list only</p> <pre><code>sudo csf -trd &lt;IP_ADDRESS&gt;\n</code></pre> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/commands/#remove-temp-allow-ip", "title": "Remove Temp Allow IP", "text": "<p><code>-tra, --temprma ip</code></p> <p>Remove an IP from the temporary IP allow list only</p> <pre><code>sudo csf -tra &lt;IP_ADDRESS&gt;\n</code></pre> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/commands/#add-temp-block-ip", "title": "Add Temp Block IP", "text": "<p><code>-td, --tempdeny ip ttl [-p port] [-d direction] [comment]</code></p> <p>Add an IP to the temp IP ban list. ttl is how long to blocks for (default:seconds, can use one suffix of h/m/d). Optional port. Optional direction of block can be one of: in, out or inout (default:in)</p> <pre><code>sudo csf -td &lt;IP_ADDRESS&gt;\n</code></pre> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/commands/#add-temp-allow-ip", "title": "Add Temp Allow IP", "text": "<p><code>-ta, --tempallow ip ttl [-p port] [-d direction] [comment]</code></p> <p>Add an IP to the temp IP allow list (default:inout)</p> <pre><code>sudo csf -ta &lt;IP_ADDRESS&gt;\nsudo csf -ta 142.250.189.142\n</code></pre>  Terminal <pre><code>ACCEPT  all opt -- in !lo out *  142.250.189.142  -&gt; 0.0.0.0/0  \nACCEPT  all opt -- in * out !lo  0.0.0.0/0  -&gt; 142.250.189.142\n</code></pre> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/commands/#flush-all-temp-ip-entries", "title": "Flush All Temp IP Entries", "text": "<p><code>-tf, --tempf</code></p> <p>Flush all IPs from the temporary IP entries</p> <pre><code>sudo csf -tf\n</code></pre>  Terminal <pre><code>csf: There are no temporary IP bans\nACCEPT  all opt -- in !lo out *  142.250.189.142  -&gt; 0.0.0.0/0  \nACCEPT  all opt -- in * out !lo  0.0.0.0/0  -&gt; 142.250.189.142  \ncsf: 142.250.189.142 temporary allow removed\n</code></pre> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/commands/#initiate-lfd-log-scanner", "title": "Initiate Lfd Log Scanner", "text": "<p><code>-lr, --logrun</code></p> <p>Initiate Log Scanner report via lfd</p> <pre><code>sudo csf -lr\n</code></pre> <p></p> <p>If you receive the following error in console:</p>  Terminal <pre><code>Option LOGSCANNER needs to be enabled in csf.conf for this feature\n</code></pre> <p></p> <p>Open your <code>csf.conf</code> configuration file, locate the setting <code>LOGSCANNER</code>, and change the value to <code>1</code>:</p> <pre><code>###############################################################################\n# SECTION:Log Scanner\n###############################################################################\n# Log Scanner. This feature will send out an email summary of the log lines of\n# each log listed in /etc/csf/csf.logfiles. All lines will be reported unless\n# they match a regular expression in /etc/csf/csf.logignore\n#\n# File globbing is supported for logs listed in /etc/csf/csf.logfiles. However,\n# be aware that the more files lfd has to track, the greater the performance\n# hit. Note: File globs are only evaluated when lfd is started\n#\n# Note: lfd builds the report continuously from lines logged after lfd has\n# started, so any lines logged when lfd is not running will not be reported\n# (e.g. during reboot). If lfd is restarted, then the report will include any\n# lines logged during the previous lfd logging period that weren't reported\n#\n# 1 to enable, 0 to disable\nLOGSCANNER = \"0\"\n</code></pre> <p></p> <p>Then go back to console and re-run the command.</p> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/commands/#view-ports", "title": "View Ports", "text": "<p><code>-p, --ports</code></p> <p>View ports on the server that have a running process behind them listening for external connections</p> <pre><code>sudo csf -p\n</code></pre>  Terminal <pre><code>Ports listening for external connections and the executables running behind them:\nPort/Proto Open Conn  PID/User             Command Line                         Executable\n631/tcp    -/-  -     (1090/root)          /usr/sbin/cupsd -l                   /usr/sbin/cupsd\n8546/tcp   4/6  -     (4627/root)          lfd UI                               /usr/bin/perl\n5353/udp   -/-  -     (337/systemd-resolve /lib/systemd/systemd-resolved        /usr/lib/systemd/systemd-resolved\n5353/udp   -/-  -     (702/avahi)          avahi-daemon: running [local]        /usr/sbin/avahi-daemon\n40857/udp  -/-  -     (702/avahi)          avahi-daemon: running [local]        /usr/sbin/avahi-daemon\n49833/udp  -/-  -     (702/avahi)          avahi-daemon: running [local]        /usr/sbin/avahi-daemon\n</code></pre> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/commands/#view-graphs", "title": "View Graphs", "text": "<p><code>--graphs [graph type] [directory]</code></p> <p>Generate System Statistics html pages and images for a given graph type into a given directory. See <code>ST_SYSTEM</code> for requirements</p> <code>[graph type]</code> <ul> <li>disk</li> <li>apachework</li> <li>mysqlslowqueries</li> <li>cpu</li> <li>load</li> <li>mysqlconns</li> <li>net</li> <li>diskw</li> <li>apachecpu</li> <li>email</li> <li>temp</li> <li>apacheconn</li> <li>mysqlqueries</li> <li>mem</li> <li>mysqldata</li> </ul> <pre><code>sudo csf --graphs &lt;GRAPH_TYPE&gt; &lt;SAVE_PATH&gt;\nsudo csf --graphs mem /home/$USER/graphs\n</code></pre> <p></p> <p>If you run the above command and see the error:</p>  Terminal <pre><code>ST_SYSTEM is disabled\n</code></pre> <p></p> <p>Open your <code>csf.conf</code> configuration file, locate the setting <code>ST_SYSTEM</code>, and change the value to <code>1</code>:</p> <pre><code># This option will gather basic system statstics. Through the UI it displays\n# various graphs for disk, cpu, memory, network, etc usage over 4 intervals:\n#  . Hourly (per minute)\n#  . 24 hours (per minute)\n#  . 7 days (per minute averaged over an hour)\n#  . 30 days (per minute averaged over an hour) - user definable\n# The data is stored in /var/lib/csf/stats/system and the option requires the\n# perl GD::Graph module\n#\n# Note: Disk graphs do not show on Virtuozzo/OpenVZ servers as the kernel on\n# those systems do not store the required information in /proc/diskstats\n# On new installations or when enabling this option it will take time for these\n# graphs to be populated\nST_SYSTEM = \"0\"\n</code></pre> <p></p> <p>If you receive the error:</p>  Terminal <pre><code>Perl module GD::Graph is not installed/working\n</code></pre> <p></p> <p>Install the package <code>libgd-graph-perl</code>:</p>  Debian/Ubuntu (apt-get) CentOS/RHEL (yum/dnf) Perl (CPAN) <pre><code>apt-get update\napt-get install -y perl \\\n  libgd-graph-perl\n</code></pre> <pre><code>yum install -y perl \\\n  perl-GDGraph\n</code></pre> <pre><code>perl -MCPAN -eshell\ncpan&gt; install GD::Graph\n</code></pre> <p></p> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/conf/", "title": "Cheatsheet \u203a Example Configs", "text": "", "tags": ["cheatsheet", "configure", "configs", "resource"]}, {"location": "usage/cheatsheet/conf/#cheatsheet-example-configs", "title": "Cheatsheet: Example Configs", "text": "<p>Two versions of the config file have been provided below. A full version which contains comments, and a clean version which contains no comments and only the config settings. </p> <p>You may copy the contents, and place it within your server under the path <code>/etc/csf/csf.conf</code>.</p> <ul> <li>Full Version</li> <li>Clean Version</li> </ul> <p></p> <p>After you have set your config file to its desired values; you must restart the CSF service to apply the configurations. Open Terminal and run:</p> <pre><code>sudo csf -r\n</code></pre> <p></p> <p>You can also restart both CSF and LFD services with <code>-ra, --restartall</code></p> <pre><code>sudo csf -ra\n</code></pre> <p></p> <p></p>", "tags": ["cheatsheet", "configure", "configs", "resource"]}, {"location": "usage/cheatsheet/conf/#full-version", "title": "Full Version", "text": "<p>This is a copy of the original CSF <code>/etc/csf/csf.conf</code> config file available from our  repository. It contains all comments and is the version you receive when downloading the latest version of ConfigServer Firewall &amp; Security.</p> <pre><code>###############################################################################\n# SECTION:Initial Settings\n###############################################################################\n# Testing flag - enables a CRON job that clears iptables incase of\n# configuration problems when you start csf. This should be enabled until you\n# are sure that the firewall works - i.e. incase you get locked out of your\n# server! Then do remember to set it to 0 and restart csf when you're sure\n# everything is OK. Stopping csf will remove the line from /etc/crontab\n#\n# lfd will not start while this is enabled\nTESTING = \"0\"\n\n# The interval for the crontab in minutes. Since this uses the system clock the\n# CRON job will run at the interval past the hour and not from when you issue\n# the start command. Therefore an interval of 5 minutes means the firewall\n# will be cleared in 0-5 minutes from the firewall start\nTESTING_INTERVAL = \"5\"\n\n# SECURITY WARNING\n# ================\n#\n# Unfortunately, syslog and rsyslog allow end-users to log messages to some\n# system logs via the same unix socket that other local services use. This \n# means that any log line shown in these system logs that syslog or rsyslog\n# maintain can be spoofed (they are exactly the same as real log lines).\n#\n# Since some of the features of lfd rely on such log lines, spoofed messages\n# can cause false-positive matches which can lead to confusion at best, or\n# blocking of any innocent IP address or making the server inaccessible at\n# worst.\n#\n# Any option that relies on the log entries in the files listed in\n# /etc/syslog.conf and /etc/rsyslog.conf should therefore be considered\n# vulnerable to exploitation by end-users and scripts run by end-users.\n#\n# NOTE: Not all log files are affected as they may not use syslog/rsyslog\n#\n# The option RESTRICT_SYSLOG disables all these features that rely on affected\n# logs. These options are:\n# LF_SSHD LF_FTPD LF_IMAPD LF_POP3D LF_BIND LF_SUHOSIN LF_SSH_EMAIL_ALERT\n# LF_SU_EMAIL_ALERT LF_CONSOLE_EMAIL_ALERT LF_DISTATTACK LF_DISTFTP\n# LT_POP3D LT_IMAPD PS_INTERVAL UID_INTERVAL WEBMIN_LOG LF_WEBMIN_EMAIL_ALERT\n# PORTKNOCKING_ALERT LF_SUDO_EMAIL_ALERT\n#\n# This list of options use the logs but are not disabled by RESTRICT_SYSLOG:\n# ST_ENABLE SYSLOG_CHECK LOGSCANNER CUSTOM*_LOG\n#\n# The following options are still enabled by default on new installations so\n# that, on balance, csf/lfd still provides expected levels of security:\n# LF_SSHD LF_FTPD LF_POP3D LF_IMAPD LF_SSH_EMAIL_ALERT LF_SU_EMAIL_ALERT\n#\n# If you set RESTRICT_SYSLOG to \"0\" or \"2\" and enable any of the options listed\n# above, it should be done with the knowledge that any of the those options\n# that are enabled could be triggered by spoofed log lines and lead to the\n# server being inaccessible in the worst case. If you do not want to take that\n# risk you should set RESTRICT_SYSLOG to \"1\" and those features will not work\n# but you will not be protected from the exploits that they normally help block\n#\n# The recommended setting for RESTRICT_SYSLOG is \"3\" to restrict who can access\n# the syslog/rsyslog unix socket.\n#\n# For further advice on how to help mitigate these issues, see\n# /etc/csf/readme.txt\n#\n# 0 = Allow those options listed above to be used and configured\n# 1 = Disable all the options listed above and prevent them from being used\n# 2 = Disable only alerts about this feature and do nothing else\n# 3 = Restrict syslog/rsyslog access to RESTRICT_SYSLOG_GROUP ** RECOMMENDED **\nRESTRICT_SYSLOG = \"0\"\n\n# The following setting is used if RESTRICT_SYSLOG is set to 3. It restricts\n# write access to the syslog/rsyslog unix socket(s). The group must not already\n# exists in /etc/group before setting RESTRICT_SYSLOG to 3, so set the option\n# to a unique name for the server\n#\n# You can add users to this group by changing /etc/csf/csf.syslogusers and then\n# restarting lfd afterwards. This will create the system group and add the\n# users from csf.syslogusers if they exist to that group and will change the\n# permissions on the syslog/rsyslog unix socket(s). The socket(s) will be\n# monitored and the permissions re-applied should syslog/rsyslog be restarted\n#\n# Using this option will prevent some legitimate logging, e.g. end-user cron\n# job logs\n#\n# If you want to revert RESTRICT_SYSLOG to another option and disable this\n# feature, change the setting of RESTRICT_SYSLOG and then restart lfd and then\n# syslog/rsyslog and the unix sockets will be reset\nRESTRICT_SYSLOG_GROUP = \"mysyslog\"\n\n# This options restricts the ability to modify settings within this file from\n# the csf UI. Should the parent control panel be compromised, these restricted\n# options could be used to further compromise the server. For this reason we\n# recommend leaving this option set to at least \"1\" and if any of the\n# restricted items need to be changed, they are done so from the root shell\n#\n# 0 = Unrestricted UI\n# 1 = Restricted UI\n# 2 = Disabled UI\nRESTRICT_UI = \"1\"\n\n# Enabling auto updates creates a cron job called /etc/cron.d/csf_update which\n# runs once per day to see if there is an update to csf+lfd and upgrades if\n# available and restarts csf and lfd\n#\n# You should check for new version announcements at http://blog.configserver.com\nAUTO_UPDATES = \"1\"\n\n###############################################################################\n# SECTION:IPv4 Port Settings\n###############################################################################\n# Lists of ports in the following comma separated lists can be added using a\n# colon (e.g. 30000:35000).\n\n# Some kernel/iptables setups do not perform stateful connection tracking\n# correctly (typically some virtual servers or custom compiled kernels), so a\n# SPI firewall will not function correctly. If this happens, LF_SPI can be set\n# to 0 to reconfigure csf as a static firewall.\n#\n# As connection tracking will not be configured, applications that rely on it\n# will not function unless all outgoing ports are opened. Therefore, all\n# outgoing connections will be allowed once all other tests have completed. So\n# TCP_OUT, UDP_OUT and ICMP_OUT will not have any affect.\n#\n# If you allow incoming DNS lookups you may need to use the following\n# directive in the options{} section of your named.conf:\n#\n#        query-source port 53;\n#\n# This will force incoming DNS traffic only through port 53\n#\n# Disabling this option will break firewall functionality that relies on\n# stateful packet inspection (e.g. DNAT, PACKET_FILTER) and makes the firewall\n# less secure\n#\n# This option should be set to \"1\" in all other circumstances\nLF_SPI = \"1\"\n\n# Allow incoming TCP ports\nTCP_IN = \"20,21,22,25,53,853,80,110,143,443,465,587,993,995,5000\"\n\n# Allow outgoing TCP ports\nTCP_OUT = \"20,21,22,25,53,853,80,110,113,443,587,993,995\"\n\n# Allow incoming UDP ports\nUDP_IN = \"20,21,53,853,80,443\"\n\n# Allow outgoing UDP ports\n# To allow outgoing traceroute add 33434:33523 to this list \nUDP_OUT = \"20,21,53,853,113,123\"\n\n# Allow incoming PING. Disabling PING will likely break external uptime\n# monitoring\nICMP_IN = \"1\"\n\n# Set the per IP address incoming ICMP packet rate for PING requests. This\n# ratelimits PING requests which if exceeded results in silently rejected\n# packets. Disable or increase this value if you are seeing PING drops that you\n# do not want\n#\n# To disable rate limiting set to \"0\", otherwise set according to the iptables\n# documentation for the limit module. For example, \"1/s\" will limit to one\n# packet per second\nICMP_IN_RATE = \"1/s\"\n\n# Allow outgoing PING\n#\n# Unless there is a specific reason, this option should NOT be disabled as it\n# could break OS functionality\nICMP_OUT = \"1\"\n\n# Set the per IP address outgoing ICMP packet rate for PING requests. This\n# ratelimits PING requests which if exceeded results in silently rejected\n# packets. Disable or increase this value if you are seeing PING drops that you\n# do not want\n#\n# Unless there is a specific reason, this option should NOT be enabled as it\n# could break OS functionality\n#\n# To disable rate limiting set to \"0\", otherwise set according to the iptables\n# documentation for the limit module. For example, \"1/s\" will limit to one\n# packet per second\nICMP_OUT_RATE = \"0\"\n\n# For those with PCI Compliance tools that state that ICMP timestamps (type 13)\n# should be dropped, you can enable the following option. Otherwise, there\n# appears to be little evidence that it has anything to do with a security risk\n# and can impact network performance, so should be left disabled by everyone\n# else\nICMP_TIMESTAMPDROP = \"0\"\n\n###############################################################################\n# SECTION:IPv6 Port Settings\n###############################################################################\n# IPv6: (Requires ip6tables)\n#\n# Pre v2.6.20 kernels do not perform stateful connection tracking, so a static\n# firewall is configured as a fallback instead if IPV6_SPI is set to 0 below\n#\n# Supported:\n# Temporary ACCEPT/DENY, GLOBAL_DENY, GLOBAL_ALLOW, SMTP_BLOCK, LF_PERMBLOCK,\n# PACKET_FILTER, Advanced Allow/Deny Filters, RELAY_*, CLUSTER_*, CC6_LOOKUPS, \n# SYNFLOOD, LF_NETBLOCK\n#\n# Supported if CC6_LOOKUPS and CC_LOOKUPS are enabled\n# CC_DENY, CC_ALLOW, CC_ALLOW_FILTER, CC_IGNORE, CC_ALLOW_PORTS, CC_DENY_PORTS,\n# CC_ALLOW_SMTPAUTH\n#\n# Supported if ip6tables &gt;= 1.4.3:\n# PORTFLOOD, CONNLIMIT\n#\n# Supported if ip6tables &gt;= 1.4.17 and perl module IO::Socket::INET6 is\n# installed:\n# MESSENGER DOCKER SMTP_REDIRECT\n#\n# Not supported:\n# ICMP_IN, ICMP_OUT\n#\nIPV6 = \"1\"\n\n# IPv6 uses icmpv6 packets very heavily. By default, csf will allow all icmpv6\n# traffic in the INPUT and OUTPUT chains. However, this could increase the risk\n# of icmpv6 attacks. To restrict incoming icmpv6, set to \"1\" but may break some\n# connection types\nIPV6_ICMP_STRICT = \"0\"\n\n# Pre v2.6.20 kernel must set this option to \"0\" as no working state module is\n# present, so a static firewall is configured as a fallback\n#\n# A workaround has been added for CentOS/RedHat v5 and custom kernels that do\n# not support IPv6 connection tracking by opening ephemeral port range\n# 32768:61000. This is only applied if IPV6_SPI is not enabled. This is the\n# same workaround implemented by RedHat in the sample default IPv6 rules\n#\n# As connection tracking will not be configured, applications that rely on it\n# will not function unless all outgoing ports are opened. Therefore, all\n# outgoing connections will be allowed once all other tests have completed. So\n# TCP6_OUT, UDP6_OUT and ICMP6_OUT will not have any affect.\n#\n# If you allow incoming ipv6 DNS lookups you may need to use the following\n# directive in the options{} section of your named.conf:\n#\n#        query-source-v6 port 53;\n#\n# This will force ipv6 incoming DNS traffic only through port 53\n#\n# These changes are not necessary if the SPI firewall is used\nIPV6_SPI = \"1\"\n\n# Allow incoming IPv6 TCP ports\nTCP6_IN = \"20,21,22,25,53,853,80,110,143,443,465,587,993,995,5000\"\n\n# Allow outgoing IPv6 TCP ports\nTCP6_OUT = \"20,21,22,25,53,853,80,110,113,443,587,993,995\"\n\n# Allow incoming IPv6 UDP ports\nUDP6_IN = \"20,21,53,853,80,443\"\n\n# Allow outgoing IPv6 UDP ports\n# To allow outgoing traceroute add 33434:33523 to this list \nUDP6_OUT = \"20,21,53,853,113,123\"\n\n###############################################################################\n# SECTION:General Settings\n###############################################################################\n# By default, csf will auto-configure iptables to filter all traffic except on\n# the loopback device. If you only want iptables rules applied to a specific\n# NIC, then list it here (e.g. eth1, or eth+)\nETH_DEVICE = \"\"\n\n# By adding a device to this option, ip6tables can be configured only on the\n# specified device. Otherwise, ETH_DEVICE and then the default setting will be\n# used\nETH6_DEVICE = \"\"\n\n# If you don't want iptables rules applied to specific NICs, then list them in\n# a comma separated list (e.g \"eth1,eth2\")\nETH_DEVICE_SKIP = \"\"\n\n# This option should be enabled unless the kernel does not support the\n# \"conntrack\" module\n#\n# To use the deprecated iptables \"state\" module, change this to 0\nUSE_CONNTRACK = \"1\"\n\n# Enable ftp helper via the iptables CT target on supporting kernels (v2.6.34+)\n# instead of the current method via /proc/sys/net/netfilter/nf_conntrack_helper\n# This will also remove the RELATED target from the global state iptables rule\n#\n# This is not needed (and will be ignored) if LF_SPI/IPV6_SPI is disabled or\n# the raw tables do not exist. The USE_CONNTRACK option should be enabled\n#\n# To enable this option, set it to your FTP server listening port number\n# (normally 21), do NOT set it to \"1\"\nUSE_FTPHELPER = \"0\"\n\n# Check whether syslog is running. Many of the lfd checks require syslog to be\n# running correctly. This test will send a coded message to syslog every\n# SYSLOG_CHECK seconds. lfd will check SYSLOG_LOG log lines for the coded\n# message. If it fails to do so within SYSLOG_CHECK seconds an alert using\n# syslogalert.txt is sent\n#\n# A value of between 300 and 3600 seconds is suggested. Set to 0 to disable\nSYSLOG_CHECK = \"0\"\n\n# Enable this option if you want lfd to ignore (i.e. don't block) IP addresses\n# listed in csf.allow in addition to csf.ignore (the default). This option\n# should be used with caution as it would mean that IP's allowed through the\n# firewall from infected PC's could launch attacks on the server that lfd\n# would ignore\nIGNORE_ALLOW = \"0\"\n\n# Enable the following option if you want to apply strict iptables rules to DNS\n# traffic (i.e. relying on iptables connection tracking). Enabling this option\n# could cause DNS resolution issues both to and from the server but could help\n# prevent abuse of the local DNS server\nDNS_STRICT = \"0\"\n\n# Enable the following option if you want to apply strict iptables rules to DNS\n# traffic between the server and the nameservers listed in /etc/resolv.conf\n# Enabling this option could cause DNS resolution issues both to and from the\n# server but could help prevent abuse of the local DNS server\nDNS_STRICT_NS = \"0\"\n\n# Limit the number of IP's kept in the /etc/csf/csf.deny file\n#\n# Care should be taken when increasing this value on servers with low memory\n# resources or hard limits (such as Virtuozzo/OpenVZ) as too many rules (in the\n# thousands) can sometimes cause network slowdown\n#\n# The value set here is the maximum number of IPs/CIDRs allowed\n# if the limit is reached, the entries will be rotated so that the oldest\n# entries (i.e. the ones at the top) will be removed and the latest is added.\n# The limit is only checked when using csf -d (which is what lfd also uses)\n# Set to 0 to disable limiting\n#\n# For implementations wishing to set this value significantly higher, we\n# recommend using the IPSET option\nDENY_IP_LIMIT = \"200\"\n\n# Limit the number of IP's kept in the temprary IP ban list. If the limit is\n# reached the oldest IP's in the ban list will be removed and allowed\n# regardless of the amount of time remaining for the block\n# Set to 0 to disable limiting\nDENY_TEMP_IP_LIMIT = \"100\"\n\n# Enable login failure detection daemon (lfd). If set to 0 none of the\n# following settings will have any effect as the daemon won't start.\nLF_DAEMON = \"1\"\n\n# Check whether csf appears to have been stopped and restart if necessary,\n# unless TESTING is enabled above. The check is done every 300 seconds\nLF_CSF = \"1\"\n\n# This option uses IPTABLES_SAVE, IPTABLES_RESTORE and IP6TABLES_SAVE,\n# IP6TABLES_RESTORE in two ways:\n#\n# 1. On a clean server reboot the entire csf iptables configuration is saved\n#    and then restored where possible to provide a near instant firewall\n#    startup[*]\n#\n# 2. On csf restart or lfd reloading tables, CC_* as well as SPAMHAUS, DSHIELD,\n#    BOGON, TOR are loaded using this method in a fraction of the time than if\n#    this setting is disabled\n#\n# [*]Not supported on all OS platforms\n#\n# Set to \"0\" to disable this functionality\nFASTSTART = \"1\"\n\n# This option allows you to use ipset v6+ for the following csf options:\n# CC_* and /etc/csf/csf.blocklist, /etc/csf/csf.allow, /etc/csf/csf.deny,\n# GLOBAL_DENY, GLOBAL_ALLOW, DYNDNS, GLOBAL_DYNDNS, MESSENGER\n#\n# ipset will only be used with the above options when listing IPs and CIDRs.\n# Advanced Allow Filters and temporary blocks use traditional iptables\n#\n# Using ipset moves the onus of ip matching against large lists away from\n# iptables rules and to a purpose built and optimised database matching\n# utility. It also simplifies the switching in of updated lists\n#\n# To use this option you must have a fully functioning installation of ipset\n# installed either via rpm or source from http://ipset.netfilter.org/\n# \n# Note: Using ipset has many advantages, some disadvantages are that you will\n# no longer see packet and byte counts against IPs and it makes identifying\n# blocked/allowed IPs that little bit harder\n#\n# Note: If you mainly use IP address only entries in csf.deny, you can increase\n# the value of DENY_IP_LIMIT significantly if you wish\n# \n# Note: It's highly unlikely that ipset will function on Virtuozzo/OpenVZ\n# containers even if it has been installed\n#\n# If you find any problems, please post on forums.configserver.com with full\n# details of the issue\nLF_IPSET = \"0\"\n\n# Versions of iptables greater or equal to v1.4.20 should support the --wait\n# option. This forces iptables commands that use the option to wait until a\n# lock by any other process using iptables completes, rather than simply\n# failing\n#\n# Enabling this feature will add the --wait option to iptables commands\n#\n# NOTE: The disadvantage of using this option is that any iptables command that\n# uses it will hang until the lock is released. This could cause a cascade of\n# hung processes trying to issue iptables commands. To try and avoid this issue\n# csf uses a last ditch timeout, WAITLOCK_TIMEOUT in seconds, that will trigger\n# a failure if reached\nWAITLOCK = \"1\"\nWAITLOCK_TIMEOUT = \"300\"\n\n# The following sets the hashsize for ipset sets, which must be a power of 2.\n#\n# Note: Increasing this value will consume more memory for all sets\n# Default: \"1024\"\nLF_IPSET_HASHSIZE = \"1024\"\n\n# The following sets the maxelem for ipset sets.\n#\n# Note: Increasing this value will consume more memory for all sets\n# Default: \"65536\"\nLF_IPSET_MAXELEM = \"65536\"\n\n# If you enable this option then whenever a CLI request to restart csf is used\n# lfd will restart csf instead within LF_PARSE seconds\n#\n# This feature can be helpful for restarting configurations that cannot use\n# FASTSTART\nLFDSTART = \"0\"\n\n# Enable verbose output of iptables commands\nVERBOSE = \"1\"\n\n# Drop out of order packets and packets in an INVALID state in iptables\n# connection tracking\nPACKET_FILTER = \"1\"\n\n# Perform reverse DNS lookups on IP addresses. (See also CC_LOOKUPS)\nLF_LOOKUPS = \"1\"\n\n# Custom styling is possible in the csf UI. See the readme.txt for more\n# information under \"UI skinning and Mobile View\"\n#\n# This option enables the use of custom styling. If the styling fails to work\n# correctly, e.g. custom styling does not take into account a change in the\n# standard csf UI, then disabling this option will return the standard UI\nSTYLE_CUSTOM = \"0\"\n\n# This option disables the presence of the Mobile View in the csf UI\nSTYLE_MOBILE = \"1\"\n\n###############################################################################\n# SECTION:SMTP Settings\n###############################################################################\n# Block outgoing SMTP except for root, exim and mailman (forces scripts/users\n# to use the exim/sendmail binary instead of sockets access). This replaces the\n# protection as WHM &gt; Tweak Settings &gt; SMTP Tweaks\n#\n# This option uses the iptables ipt_owner/xt_owner module and must be loaded\n# for it to work. It may not be available on some VPS platforms\n#\n# Note: Run /etc/csf/csftest.pl to check whether this option will function on\n# this server\nSMTP_BLOCK = \"0\"\n\n# If SMTP_BLOCK is enabled but you want to allow local connections to port 25\n# on the server (e.g. for webmail or web scripts) then enable this option to\n# allow outgoing SMTP connections to the loopback device\nSMTP_ALLOWLOCAL = \"1\"\n\n# This option redirects outgoing SMTP connections destined for remote servers\n# for non-bypass users to the local SMTP server to force local relaying of\n# email. Such email may require authentication (SMTP AUTH)\nSMTP_REDIRECT = \"0\"\n\n# This is a comma separated list of the ports to block. You should list all\n# ports that exim is configured to listen on\nSMTP_PORTS = \"25,465,587\"\n\n# Always allow the following comma separated users and groups to bypass\n# SMTP_BLOCK\n#\n# Note: root (UID:0) is always allowed\nSMTP_ALLOWUSER = \"\"\nSMTP_ALLOWGROUP = \"mail,mailman\"\n\n# This option will only allow SMTP AUTH to be advertised to the IP addresses\n# listed in /etc/csf/csf.smtpauth on EXIM mail servers\n#\n# The additional option CC_ALLOW_SMTPAUTH can be used with this option to\n# additionally restrict access to specific countries\n#\n# This is to help limit attempts at distributed attacks against SMTP AUTH which\n# are difficult to achive since port 25 needs to be open to relay email\n#\n# The reason why this works is that if EXIM does not advertise SMTP AUTH on a\n# connection, then SMTP AUTH will not accept logins, defeating the attacks\n# without restricting mail relaying\n#\n# Note: csf and lfd must be restarted if /etc/csf/csf.smtpauth is modified so\n# that the lookup file in /etc/exim.smtpauth is regenerated from the\n# information from /etc/csf/csf.smtpauth plus any countries listed in\n# CC_ALLOW_SMTPAUTH\n#\n# NOTE: To make this option work you MUST make the modifications to exim.conf\n# as explained in \"Exim SMTP AUTH Restriction\" section in /etc/csf/readme.txt\n# after enabling the option here, otherwise this option will not work\n#\n# To enable this option, set to 1 and make the exim configuration changes\n# To disable this option, set to 0 and undo the exim configuration changes\nSMTPAUTH_RESTRICT = \"0\"\n\n###############################################################################\n# SECTION:Port Flood Settings\n###############################################################################\n# Enable SYN Flood Protection. This option configures iptables to offer some\n# protection from tcp SYN packet DOS attempts. You should set the RATE so that\n# false-positives are kept to a minimum otherwise visitors may see connection\n# issues (check /var/log/messages for *SYNFLOOD Blocked*). See the iptables\n# man page for the correct --limit rate syntax\n#\n# Note: This option should ONLY be enabled if you know you are under a SYN\n# flood attack as it will slow down all new connections from any IP address to\n# the server if triggered\nSYNFLOOD = \"0\"\nSYNFLOOD_RATE = \"100/s\"\nSYNFLOOD_BURST = \"150\"\n\n# Connection Limit Protection. This option configures iptables to offer more\n# protection from DOS attacks against specific ports. It can also be used as a\n# way to simply limit resource usage by IP address to specific server services.\n# This option limits the number of concurrent new connections per IP address\n# that can be made to specific ports\n#\n# This feature does not work on servers that do not have the iptables module\n# xt_connlimit loaded. Typically, this will be with MONOLITHIC kernels. VPS\n# server admins should check with their VPS host provider that the iptables\n# module is included\n#\n# For further information and syntax refer to the Connection Limit Protection\n# section of the csf readme.txt\n#\n# Note: Run /etc/csf/csftest.pl to check whether this option will function on\n# this server\nCONNLIMIT = \"\"\n\n# Port Flood Protection. This option configures iptables to offer protection\n# from DOS attacks against specific ports. This option limits the number of\n# new connections per time interval that can be made to specific ports\n#\n# This feature does not work on servers that do not have the iptables module\n# ipt_recent loaded. Typically, this will be with MONOLITHIC kernels. VPS\n# server admins should check with their VPS host provider that the iptables\n# module is included\n#\n# For further information and syntax refer to the Port Flood Protection\n# section of the csf readme.txt\n#\n# Note: Run /etc/csf/csftest.pl to check whether this option will function on\n# this server\nPORTFLOOD = \"\"\n\n# Outgoing UDP Flood Protection. This option limits outbound UDP packet floods.\n# These typically originate from exploit scripts uploaded through vulnerable\n# web scripts. Care should be taken on servers that use services that utilise\n# high levels of UDP outbound traffic, such as SNMP, so you may need to alter\n# the UDPFLOOD_LIMIT and UDPFLOOD_BURST options to suit your environment\n#\n# We recommend enabling User ID Tracking (UID_INTERVAL) with this feature\nUDPFLOOD = \"0\"\nUDPFLOOD_LIMIT = \"100/s\"\nUDPFLOOD_BURST = \"500\"\n\n# This is a list of usernames that should not be rate limited, such as \"named\"\n# to prevent bind traffic from being limited.\n#\n# Note: root (UID:0) is always allowed\nUDPFLOOD_ALLOWUSER = \"named\"\n\n###############################################################################\n# SECTION:Logging Settings\n###############################################################################\n# Log lfd messages to SYSLOG in addition to /var/log/lfd.log. You must have the\n# perl module Sys::Syslog installed to use this feature\nSYSLOG = \"0\"\n\n# Drop target for incoming iptables rules. This can be set to either DROP or\n# REJECT. REJECT will send back an error packet, DROP will not respond at all.\n# REJECT is more polite, however it does provide extra information to a hacker\n# and lets them know that a firewall is blocking their attempts. DROP hangs\n# their connection, thereby frustrating attempts to port scan the server\nDROP = \"DROP\"\n\n# Drop target for outgoing iptables rules. This can be set to either DROP or\n# REJECT as with DROP, however as such connections are from this server it is\n# better to REJECT connections to closed ports rather than to DROP them. This\n# helps to immediately free up server resources rather than tying them up until\n# a connection times out. It also tells the process making the connection that\n# it has immediately failed\n#\n# It is possible that some monolithic kernels may not support the REJECT\n# target. If this is the case, csf checks before using REJECT and falls back to\n# using DROP, issuing a warning to set this to DROP instead\nDROP_OUT = \"REJECT\"\n\n# Enable logging of dropped connections to blocked ports to syslog, usually\n# /var/log/messages. This option needs to be enabled to use Port Scan Tracking\nDROP_LOGGING = \"1\"\n\n# Enable logging of dropped incoming connections from blocked IP addresses\n#\n# This option will be disabled if you enable Port Scan Tracking (PS_INTERVAL)\nDROP_IP_LOGGING = \"0\"\n\n# Enable logging of dropped outgoing connections\n#\n# Note: Only outgoing SYN packets for TCP connections are logged, other\n# protocols log all packets\n#\n# We recommend that you enable this option\nDROP_OUT_LOGGING = \"1\"\n\n# Together with DROP_OUT_LOGGING enabled, this option logs the UID connecting\n# out (where available) which can help track abuse\nDROP_UID_LOGGING = \"1\"\n\n# Only log incoming reserved port dropped connections (0:1023). This can reduce\n# the amount of log noise from dropped connections, but will affect options\n# such as Port Scan Tracking (PS_INTERVAL)\nDROP_ONLYRES = \"0\"\n\n# Commonly blocked ports that you do not want logging as they tend to just fill\n# up the log file. These ports are specifically blocked (applied to TCP and UDP\n# protocols) for incoming connections\nDROP_NOLOG = \"23,67,68,111,113,135:139,445,500,513,520\"\n\n# Log packets dropped by the packet filtering option PACKET_FILTER\nDROP_PF_LOGGING = \"0\"\n\n# Log packets dropped by the Connection Limit Protection option CONNLIMIT. If\n# this is enabled and Port Scan Tracking (PS_INTERVAL) is also enabled, IP\n# addresses breaking the Connection Limit Protection will be blocked\nCONNLIMIT_LOGGING = \"0\"\n\n# Enable logging of UDP floods. This should be enabled, especially with User ID\n# Tracking enabled\nUDPFLOOD_LOGGING = \"1\"\n\n# Send an alert if log file flooding is detected which causes lfd to skip log\n# lines to prevent lfd from looping. If this alert is sent you should check the\n# reported log file for the reason for the flooding\nLOGFLOOD_ALERT = \"0\"\n\n###############################################################################\n# SECTION:Reporting Settings\n###############################################################################\n# By default, lfd will send alert emails using the relevant alert template to\n# the To: address configured within that template. Setting the following\n# option will override the configured To: field in all lfd alert emails\n#\n# Leave this option empty to use the To: field setting in each alert template\nLF_ALERT_TO = \"\"\n\n# By default, lfd will send alert emails using the relevant alert template from\n# the From: address configured within that template. Setting the following\n# option will override the configured From: field in all lfd alert emails\n#\n# Leave this option empty to use the From: field setting in each alert template\nLF_ALERT_FROM = \"\"\n\n# By default, lfd will send all alerts using the SENDMAIL binary. To send using\n# SMTP directly, you can set the following to a relaying SMTP server, e.g.\n# \"127.0.0.1\". Leave this setting blank to use SENDMAIL\nLF_ALERT_SMTP = \"\"\n\n# Block Reporting. lfd can run an external script when it performs and IP\n# address block following for example a login failure. The following setting\n# is to the full path of the external script which must be executable. See\n# readme.txt for format details\n#\n# Leave this setting blank to disable\nBLOCK_REPORT = \"\"\n\n# To also run an external script when a temporary block is unblocked. The\n# following setting can be the full path of the external script which must be\n# executable. See readme.txt for format details\n#\n# Leave this setting blank to disable\nUNBLOCK_REPORT = \"\"\n\n# In addition to the standard lfd email alerts, you can additionally enable the\n# sending of X-ARF reports (see http://www.xarf.org/specification.html). Only\n# block alert messages will be sent. The reports use our schema at:\n# https://download.configserver.com/abuse_login-attack_0.2.json\n#\n# These reports are in a format accepted by many Netblock owners and should\n# help them investigate abuse. This option is not designed to automatically\n# forward these reports to the Netblock owners and should be checked for\n# false-positive blocks before reporting\n#\n# If available, the report will also include the abuse contact for the IP from\n# the Abusix Contact DB: https://abusix.com/contactdb.html\n#\n# Note: The following block types are not reported through this feature:\n# LF_PERMBLOCK, LF_NETBLOCK, LF_DISTATTACK, LF_DISTFTP, RT_*_ALERT\nX_ARF = \"0\"\n\n# By default, lfd will send emails from the root forwarder. Setting the\n# following option will override this\nX_ARF_FROM = \"\"\n\n# By default, lfd will send emails to the root forwarder. Setting the following\n# option will override this\nX_ARF_TO = \"\"\n\n# If you want to automatically send reports to the abuse contact where found,\n# you can enable the following option\n#\n# Note: You MUST set X_ARF_FROM to a valid email address for this option to\n# work. This is so that the abuse contact can reply to the report\n#\n# However, you should be aware that without manual checking you could be\n# reporting innocent IP addresses, including your own clients, yourself and\n# your own servers\n#\n# Additionally, just because a contact address is found, does not mean that\n# there is anyone on the end of it reading, processing or acting on such\n# reports and you could conceivably reported for sending spam\n#\n# We do not recommend enabling this option. Abuse reports should be checked and\n# verified before being forwarded to the abuse contact\nX_ARF_ABUSE = \"0\"\n\n###############################################################################\n# SECTION:Temp to Perm/Netblock Settings\n###############################################################################\n# Temporary to Permanent IP blocking. The following enables this feature to\n# permanently block IP addresses that have been temporarily blocked more than\n# LF_PERMBLOCK_COUNT times in the last LF_PERMBLOCK_INTERVAL seconds. Set\n# LF_PERMBLOCK  to \"1\" to enable this feature\n#\n# Care needs to be taken when setting LF_PERMBLOCK_INTERVAL as it needs to be\n# at least LF_PERMBLOCK_COUNT multiplied by the longest temporary time setting\n# (TTL) for blocked IPs, to be effective\n#\n# Set LF_PERMBLOCK to \"0\" to disable this feature\nLF_PERMBLOCK = \"1\"\nLF_PERMBLOCK_INTERVAL = \"86400\"\nLF_PERMBLOCK_COUNT = \"4\"\nLF_PERMBLOCK_ALERT = \"1\"\n\n# Permanently block IPs by network class. The following enables this feature\n# to permanently block classes of IP address where individual IP addresses\n# within the same class LF_NETBLOCK_CLASS have already been blocked more than\n# LF_NETBLOCK_COUNT times in the last LF_NETBLOCK_INTERVAL seconds. Set\n# LF_NETBLOCK  to \"1\" to enable this feature\n#\n# This can be an affective way of blocking DDOS attacks launched from within\n# the same network class\n#\n# Valid settings for LF_NETBLOCK_CLASS are \"A\", \"B\" and \"C\", care and\n# consideration is required when blocking network classes A or B\n#\n# Set LF_NETBLOCK to \"0\" to disable this feature\nLF_NETBLOCK = \"0\"\nLF_NETBLOCK_INTERVAL = \"86400\"\nLF_NETBLOCK_COUNT = \"4\"\nLF_NETBLOCK_CLASS = \"C\"\nLF_NETBLOCK_ALERT = \"1\"\n\n# Valid settings for LF_NETBLOCK_IPV6 are \"/64\", \"/56\", \"/48\", \"/32\" and \"/24\"\n# Great care should be taken with IPV6 netblock ranges due to the large number\n# of addresses involved\n#\n# To disable IPv6 netblocks set to \"\"\nLF_NETBLOCK_IPV6 = \"\"\n\n###############################################################################\n# SECTION:Global Lists/DYNDNS/Blocklists\n###############################################################################\n# Safe Chain Update. If enabled, all dynamic update chains (GALLOW*, GDENY*,\n# SPAMHAUS, DSHIELD, BOGON, CC_ALLOW, CC_DENY, ALLOWDYN*) will create a new\n# chain when updating, and insert it into the relevant LOCALINPUT/LOCALOUTPUT\n# chain, then flush and delete the old dynamic chain and rename the new chain.\n#\n# This prevents a small window of opportunity opening when an update occurs and\n# the dynamic chain is flushed for the new rules.\n#\n# This option should not be enabled on servers with long dynamic chains (e.g.\n# CC_DENY/CC_ALLOW lists) and low memory. It should also not be enabled on\n# Virtuozzo VPS servers with a restricted numiptent value. This is because each\n# chain will effectively be duplicated while the update occurs, doubling the\n# number of iptables rules\nSAFECHAINUPDATE = \"0\"\n\n# If you wish to allow access from dynamic DNS records (for example if your IP\n# address changes whenever you connect to the internet but you have a dedicated\n# dynamic DNS record from the likes of dyndns.org) then you can list the FQDN\n# records in csf.dyndns and then set the following to the number of seconds to\n# poll for a change in the IP address. If the IP address has changed iptables\n# will be updated.\n#\n# If the FQDN has multiple A records then all of the IP addresses will be\n# processed. If IPV6 is enabled, then all IPv6 AAAA IP address records will\n# also be allowed.\n# \n# A setting of 600 would check for IP updates every 10 minutes. Set the value\n# to 0 to disable the feature\nDYNDNS = \"0\"\n\n# To always ignore DYNDNS IP addresses in lfd blocking, set the following\n# option to 1\nDYNDNS_IGNORE = \"0\"\n\n# The follow Global options allow you to specify a URL where csf can grab a\n# centralised copy of an IP allow or deny block list of your own. You need to\n# specify the full URL in the following options, i.e.:\n# http://www.somelocation.com/allow.txt\n#\n# The actual retrieval of these IP's is controlled by lfd, so you need to set\n# LF_GLOBAL to the interval (in seconds) when you want lfd to retrieve. lfd\n# will perform the retrieval when it runs and then again at the specified\n# interval. A sensible interval would probably be every 3600 seconds (1 hour).\n# A minimum value of 300 is enforced for LF_GLOBAL if enabled\n#\n# You do not have to specify both an allow and a deny file\n#\n# You can also configure a global ignore file for IP's that lfd should ignore\nLF_GLOBAL = \"0\"\n\nGLOBAL_ALLOW = \"\"\nGLOBAL_DENY = \"\"\nGLOBAL_IGNORE = \"\"\n\n# Provides the same functionality as DYNDNS but with a GLOBAL URL file. Set\n# this to the URL of the file containing DYNDNS entries\nGLOBAL_DYNDNS = \"\"\n\n# Set the following to the number of seconds to poll for a change in the IP\n# address resoved from GLOBAL_DYNDNS\nGLOBAL_DYNDNS_INTERVAL = \"600\"\n\n# To always ignore GLOBAL_DYNDNS IP addresses in lfd blocking, set the following\n# option to 1\nGLOBAL_DYNDNS_IGNORE = \"0\"\n\n# Blocklists are controlled by modifying /etc/csf/csf.blocklists\n#\n# If you don't want BOGON rules applied to specific NICs, then list them in\n# a comma separated list (e.g \"eth1,eth2\")\nLF_BOGON_SKIP = \"\"\n\n# The following option can be used to select the method csf will use to\n# retrieve URL data and files\n#\n# This can be set to use:\n#\n# 1. Perl module HTTP::Tiny\n# 2. Perl module LWP::UserAgent\n# 3. CURL/WGET (set location at the bottom of csf.conf if installed)\n#\n# HTTP::Tiny is much faster than LWP::UserAgent and is included in the csf\n# distribution. LWP::UserAgent may have to be installed manually, but it can\n# better support https:// URL's which also needs the LWP::Protocol::https perl\n# module\n#\n# CURL/WGET uses the system binaries if installed but does not always provide\n# good feedback when it fails. The script will first look for CURL, if that\n# does not exist at the configured location it will then look for WGET\n#\n# Additionally, 1 or 2 are used and the retrieval fails, then if either CURL or\n# WGET are available, an additional attempt will be using CURL/WGET. This is\n# useful if the perl distribution has outdated modules that do not support\n# modern SSL/TLS implementations\n#\n# To install the LWP perl modules required:\n#\n# On rpm based systems:\n# \n#   yum install perl-libwww-perl.noarch perl-LWP-Protocol-https.noarch\n#\n# On APT based systems:\n#\n#   apt-get install libwww-perl liblwp-protocol-https-perl\n#\n# Via cpan:\n#\n#   perl -MCPAN -eshell\n#   cpan&gt; install LWP LWP::Protocol::https\n#\n# We recommend setting this set to \"2\" or \"3\" as upgrades to csf will be\n# performed over SSL as well as other URLs used when retrieving external data\n#\n# \"1\" = HTTP::Tiny\n# \"2\" = LWP::UserAgent\n# \"3\" = CURL/WGET (set location at the bottom of csf.conf)\nURLGET = \"2\"\n\n# If you need csf/lfd to use a proxy, then you can set this option to the URL\n# of the proxy. The proxy provided will be used for both HTTP and HTTPS\n# connections\nURLPROXY = \"\"\n\n###############################################################################\n# SECTION:Country Code Lists and Settings\n###############################################################################\n# Country Code to CIDR allow/deny. In the following options you can allow or\n# deny whole country CIDR ranges. The CIDR blocks are obtained from a selected\n# source below. They also display Country Code Country and City for reported IP\n# addresses and lookups\n#\n# There are a number of sources for these databases, before utilising them you\n# need to visit each site and ensure you abide by their license provisions\n# where stated:\n\n# 1. MaxMind\n#\n# MaxMind GeoLite2 Country/City and ASN databases at:\n# https://dev.MaxMind.com/geoip/geoip2/geolite2/\n# This feature relies entirely on that service being available\n#\n# Advantages: This is a one stop shop for all of the databases required for\n# these features. They provide a consistent dataset for blocking and reporting\n# purposes\n#\n# Disadvantages: MaxMind require a license key to download their databases.\n# This is free of charge, but requires the user to create an account on their\n# website to generate the required key:\n#\n# WARNING: As of 2019-12-29, MaxMind REQUIRES you to create an account on their\n# site and to generate a license key to use their databases. See:\n# https://www.maxmind.com/en/geolite2/signup\n# https://blog.maxmind.com/2019/12/18/significant-changes-to-accessing-and-using-geolite2-databases/\n# \n# You MUST set the following to continue using the IP lookup features of csf,\n# otherwise an error will be generated and the features will not work.\n# Alternatively set CC_SRC below to a different provider\n#\n# MaxMind License Key:\nMM_LICENSE_KEY = \"\"\n\n# 2. DB-IP, ipdeny.com, iptoasn.com\n#\n# Advantages: The ipdeny.com databases form CC blocking are better optimised\n# and so are quicker to process and create fewer iptables entries. All of these\n# databases are free to download without requiring login or key\n#\n# Disadvantages: Multiple sources mean that any one of the three could\n# interrupt the provision of these features. It may also mean that there are\n# inconsistences between them\n#\n# https://db-ip.com/db/lite.php\n# http://ipdeny.com/\n# https://iptoasn.com/\n# http://download.geonames.org/export/dump/readme.txt\n\n# Set the following to your preferred source:\n#\n# \"1\" - MaxMind\n# \"2\" - db-ip, ipdeny, iptoasn\n#\n# The default is \"2\" on new installations of csf, or set to \"1\" to use the\n# MaxMind databases after obtaining a license key\nCC_SRC = \"2\"\n\n# In the following options, specify the the two-letter ISO Country Code(s).\n# The iptables rules are for incoming connections only\n#\n# Additionally, ASN numbers can also be added to the comma separated lists\n# below that also list Country Codes. The same WARNINGS for Country Codes apply\n# to the use of ASNs. More about Autonomous System Numbers (ASN):\n# http://www.iana.org/assignments/as-numbers/as-numbers.xhtml\n# ASNs must be listed as ASnnnn (where nnnn is the ASN number)\n#\n# You should consider using LF_IPSET when using any of the following options\n#\n# WARNING: These lists are never 100% accurate and some ISP's (e.g. AOL) use\n# non-geographic IP address designations for their clients\n#\n# WARNING: Some of the CIDR lists are huge and each one requires a rule within\n# the incoming iptables chain. This can result in significant performance\n# overheads and could render the server inaccessible in some circumstances. For\n# this reason (amongst others) we do not recommend using these options\n#\n# WARNING: Due to the resource constraints on VPS servers this feature should\n# not be used on such systems unless you choose very small CC zones\n#\n# WARNING: CC_ALLOW allows access through all ports in the firewall. For this\n# reason CC_ALLOW probably has very limited use and CC_ALLOW_FILTER is\n# preferred\n#\n# Each option is a comma separated list of CC's, e.g. \"US,GB,DE\"\nCC_DENY = \"\"\nCC_ALLOW = \"\"\n\n# An alternative to CC_ALLOW is to only allow access from the following\n# countries but still filter based on the port and packets rules. All other\n# connections are dropped\nCC_ALLOW_FILTER = \"\"\n\n# This option allows access from the following countries to specific ports\n# listed in CC_ALLOW_PORTS_TCP and CC_ALLOW_PORTS_UDP\n#\n# Note: The rules for this feature are inserted after the allow and deny\n# rules to still allow blocking of IP addresses\n#\n# Each option is a comma separated list of CC's, e.g. \"US,GB,DE\"\nCC_ALLOW_PORTS = \"\"\n\n# All listed ports should be removed from TCP_IN/UDP_IN to block access from\n# elsewhere. This option uses the same format as TCP_IN/UDP_IN\n#\n# An example would be to list port 21 here and remove it from TCP_IN/UDP_IN\n# then only countries listed in CC_ALLOW_PORTS can access FTP\nCC_ALLOW_PORTS_TCP = \"\"\nCC_ALLOW_PORTS_UDP = \"\"\n\n# This option denies access from the following countries to specific ports\n# listed in CC_DENY_PORTS_TCP and CC_DENY_PORTS_UDP\n#\n# Note: The rules for this feature are inserted after the allow and deny\n# rules to still allow allowing of IP addresses\n#\n# Each option is a comma separated list of CC's, e.g. \"US,GB,DE\"\nCC_DENY_PORTS = \"\"\n\n# This option uses the same format as TCP_IN/UDP_IN. The ports listed should\n# NOT be removed from TCP_IN/UDP_IN\n#\n# An example would be to list port 21 here then countries listed in\n# CC_DENY_PORTS cannot access FTP\nCC_DENY_PORTS_TCP = \"\"\nCC_DENY_PORTS_UDP = \"\"\n\n# This Country Code list will prevent lfd from blocking IP address hits for the\n# listed CC's\n#\n# CC_LOOKUPS must be enabled to use this option\nCC_IGNORE = \"\"\n\n# This Country Code list will only allow SMTP AUTH to be advertised to the\n# listed countries in EXIM. This is to help limit attempts at distributed\n# attacks against SMTP AUTH which are difficult to achive since port 25 needs\n# to be open to relay email\n#\n# The reason why this works is that if EXIM does not advertise SMTP AUTH on a\n# connection, then SMTP AUTH will not accept logins, defeating the attacks\n# without restricting mail relaying\n#\n# This option can generate a very large list of IP addresses that could easily\n# severely impact on SMTP (mail) performance, so care must be taken when\n# selecting countries and if performance issues ensue\n#\n# The option SMTPAUTH_RESTRICT must be enabled to use this option\nCC_ALLOW_SMTPAUTH = \"\"\n\n# These options can control which IP blocks are redirected to the MESSENGER\n# service, if it is enabled\n#\n# If Country Codes are listed in CC_MESSENGER_ALLOW, then only a blocked IP\n# that resolves to one of those Country Codes will be redirected to the\n# MESSENGER service\n#\n# If Country Codes are listed in CC_MESSENGER_DENY, then a blocked IP that\n# resolves to one of those Country Codes will NOT be redirected to the\n# MESSENGER service\n#\nCC_MESSENGER_ALLOW = \"\"\nCC_MESSENGER_DENY = \"\"\n\n# Set this option to a valid CIDR (i.e. 1 to 32) to ignore CIDR blocks smaller\n# than this value when implementing CC_DENY/CC_ALLOW/CC_ALLOW_FILTER. This can\n# help reduce the number of CC entries and may improve iptables throughput.\n# Obviously, this will deny/allow fewer IP addresses depending on how small you\n# configure the option\n#\n# For example, to ignore all CIDR (and single IP) entries small than a /16, set\n# this option to \"16\". Set to \"\" to block all CC IP addresses\nCC_DROP_CIDR = \"\"\n\n# Display Country Code and Country for reported IP addresses. This option can\n# be configured to use the databases enabled at the top of this section. An\n# additional option is also available if you cannot use those databases:\n#\n# \"0\" - disable\n# \"1\" - Reports: Country Code and Country\n# \"2\" - Reports: Country Code and Country and Region and City\n# \"3\" - Reports: Country Code and Country and Region and City and ASN\n# \"4\" - Reports: Country Code and Country and Region and City (db-ip.com)\n#\n# Note: \"4\" does not use the databases enabled at the top of this section\n# directly for lookups. Instead it uses a URL-based lookup from\n# https://db-ip.com and so avoids having to download and process the large\n# databases. Please visit the https://db-ip.com and read their limitations and\n# understand that this option will either cease to function or be removed by us\n# if that site is abused or overloaded. ONLY use this option if you have\n# difficulties using the databases enabled at the top of this section. This\n# option is ONLY for IP lookups, NOT when using the CC_* options above, which\n# will continue to use the databases enabled at the top of this section\n#\nCC_LOOKUPS = \"1\"\n\n# Display Country Code and Country for reported IPv6 addresses using the\n# databases enabled at the top of this section\n#\n# \"0\" - disable\n# \"1\" - enable and report the detail level as specified in CC_LOOKUPS\n#\n# This option must also be enabled to allow IPv6 support to CC_*, MESSENGER and\n# PORTFLOOD\nCC6_LOOKUPS = \"0\"\n\n# This option tells lfd how often to retrieve the databases for CC_ALLOW,\n# CC_ALLOW_FILTER, CC_DENY, CC_IGNORE and CC_LOOKUPS (in days)\nCC_INTERVAL = \"14\"\n\n###############################################################################\n# SECTION:Login Failure Blocking and Alerts\n###############################################################################\n# The following[*] triggers are application specific. If you set LF_TRIGGER to\n# \"0\" the value of each trigger is the number of failures against that\n# application that will trigger lfd to block the IP address\n#\n# If you set LF_TRIGGER to a value greater than \"0\" then the following[*]\n# application triggers are simply on or off (\"0\" or \"1\") and the value of\n# LF_TRIGGER is the total cumulative number of failures that will trigger lfd\n# to block the IP address\n#\n# Setting the application trigger to \"0\" disables it\nLF_TRIGGER = \"0\"\n\n# If LF_TRIGGER is &gt; \"0\" then LF_TRIGGER_PERM can be set to \"1\" to permanently\n# block the IP address, or LF_TRIGGER_PERM can be set to a value greater than\n# \"1\" and the IP address will be blocked temporarily for that value in seconds.\n# For example:\n# LF_TRIGGER_PERM = \"1\" =&gt; the IP is blocked permanently\n# LF_TRIGGER_PERM = \"3600\" =&gt; the IP is blocked temporarily for 1 hour\n#\n# If LF_TRIGGER is \"0\", then the application LF_[application]_PERM value works\n# in the same way as above and LF_TRIGGER_PERM serves no function\nLF_TRIGGER_PERM = \"1\"\n\n# To only block access to the failed application instead of a complete block\n# for an ip address, you can set the following to \"1\", but LF_TRIGGER must be\n# set to \"0\" with specific application[*] trigger levels also set appropriately\n#\n# The ports that are blocked can be configured by changing the PORTS_* options\nLF_SELECT = \"0\"\n\n# Send an email alert if an IP address is blocked by one of the [*] triggers\nLF_EMAIL_ALERT = \"1\"\n\n# Send an email alert if an IP address is only temporarily blocked by one of\n# the [*] triggers\n#\n# Note: LF_EMAIL_ALERT must still be enabled to get permanent block emails\nLF_TEMP_EMAIL_ALERT = \"1\"\n\n# [*]Enable login failure detection of sshd connections\n#\n# SECURITY NOTE: This option is affected by the RESTRICT_SYSLOG option. Read\n# this file about RESTRICT_SYSLOG before enabling this option:\nLF_SSHD = \"5\"\nLF_SSHD_PERM = \"1\"\n\n# [*]Enable login failure detection of ftp connections\n#\n# SECURITY NOTE: This option is affected by the RESTRICT_SYSLOG option. Read\n# this file about RESTRICT_SYSLOG before enabling this option:\nLF_FTPD = \"10\"\nLF_FTPD_PERM = \"1\"\n\n# [*]Enable login failure detection of SMTP AUTH connections\nLF_SMTPAUTH = \"5\"\nLF_SMTPAUTH_PERM = \"1\"\n\n# [*]Enable syntax failure detection of Exim connections\nLF_EXIMSYNTAX = \"10\"\nLF_EXIMSYNTAX_PERM = \"1\"\n\n# [*]Enable login failure detection of pop3 connections\n#\n# SECURITY NOTE: This option is affected by the RESTRICT_SYSLOG option. Read\n# this file about RESTRICT_SYSLOG before enabling this option:\nLF_POP3D = \"0\"\nLF_POP3D_PERM = \"1\"\n\n# [*]Enable login failure detection of imap connections\n#\n# SECURITY NOTE: This option is affected by the RESTRICT_SYSLOG option. Read\n# this file about RESTRICT_SYSLOG before enabling this option:\nLF_IMAPD = \"0\"\nLF_IMAPD_PERM = \"1\"\n\n# [*]Enable login failure detection of Apache .htpasswd connections\n# Due to the often high logging rate in the Apache error log, you might want to\n# enable this option only if you know you are suffering from attacks against\n# password protected directories\nLF_HTACCESS = \"5\"\nLF_HTACCESS_PERM = \"1\"\n\n# [*]Enable failure detection of repeated Apache mod_security rule triggers\nLF_MODSEC = \"5\"\nLF_MODSEC_PERM = \"1\"\n\n# [*]Enable detection of repeated BIND denied requests\n# This option should be enabled with care as it will prevent blocked IPs from\n# resolving any domains on the server. You might want to set the trigger value\n# reasonably high to avoid this\n# Example: LF_BIND = \"100\"\nLF_BIND = \"0\"\nLF_BIND_PERM = \"1\"\n\n# [*]Enable detection of repeated suhosin ALERTs\n# Example: LF_SUHOSIN = \"5\"\n#\n# SECURITY NOTE: This option is affected by the RESTRICT_SYSLOG option. Read\n# this file about RESTRICT_SYSLOG before enabling this option:\nLF_SUHOSIN = \"0\"\nLF_SUHOSIN_PERM = \"1\"\n\n# [*]Enable detection of repeated cxs ModSecurity mod_security rule triggers\n# This option will block IP addresses if cxs detects a hits from the\n# ModSecurity rule associated with it\n#\n# Note: This option takes precedence over LF_MODSEC and removes any hits\n# counted towards LF_MODSEC for the cxs rule\n#\n# This setting should probably set very low, perhaps to 1, if you want to\n# effectively block IP addresses for this trigger option\nLF_CXS = \"0\"\nLF_CXS_PERM = \"1\"\n\n# [*]Enable detection of repeated Apache mod_qos rule triggers\nLF_QOS = \"0\"\nLF_QOS_PERM = \"1\"\n\n# [*]Enable detection of repeated Apache symlink race condition triggers from\n# the Apache patch provided by:\n# http://www.mail-archive.com/dev@httpd.apache.org/msg55666.html\n# This patch has also been included by cPanel via the easyapache option:\n# \"Symlink Race Condition Protection\"\nLF_SYMLINK = \"0\"\nLF_SYMLINK_PERM = \"1\"\n\n# [*]Enable login failure detection of webmin connections\n#\n# SECURITY NOTE: This option is affected by the RESTRICT_SYSLOG option. Read\n# this file about RESTRICT_SYSLOG before enabling this option:\nLF_WEBMIN = \"0\"\nLF_WEBMIN_PERM = \"1\"\n\n# Send an email alert if anyone logs in successfully using SSH\n#\n# SECURITY NOTE: This option is affected by the RESTRICT_SYSLOG option. Read\n# this file about RESTRICT_SYSLOG before enabling this option:\nLF_SSH_EMAIL_ALERT = \"1\"\n\n# Send an email alert if anyone uses su to access another account. This will\n# send an email alert whether the attempt to use su was successful or not\n#\n# SECURITY NOTE: This option is affected by the RESTRICT_SYSLOG option. Read\n# this file about RESTRICT_SYSLOG before enabling this option:\nLF_SU_EMAIL_ALERT = \"1\"\n\n# Send an email alert if anyone uses sudo to access another account. This will\n# send an email alert whether the attempt to use sudo was successful or not\n#\n# NOTE: This option could become onerous if sudo is used extensively for root\n# access by administrators or control panels. It is provided for those where\n# this is not the case\n#\n# SECURITY NOTE: This option is affected by the RESTRICT_SYSLOG option. Read\n# this file about RESTRICT_SYSLOG before enabling this option:\nLF_SUDO_EMAIL_ALERT = \"0\"\n\n# Send an email alert if anyone accesses webmin\n#\n# SECURITY NOTE: This option is affected by the RESTRICT_SYSLOG option. Read\n# this file about RESTRICT_SYSLOG before enabling this option:\nLF_WEBMIN_EMAIL_ALERT = \"1\"\n\n# Send an email alert if anyone logs in successfully to root on the console\n#\n# SECURITY NOTE: This option is affected by the RESTRICT_SYSLOG option. Read\n# this file about RESTRICT_SYSLOG before enabling this option:\nLF_CONSOLE_EMAIL_ALERT = \"1\"\n\n# This option will keep track of the number of \"File does not exist\" errors in\n# HTACCESS_LOG. If the number of hits is more than LF_APACHE_404 in LF_INTERVAL\n# seconds then the IP address will be blocked\n#\n# Care should be used with this option as it could generate many\n# false-positives, especially Search Bots (use csf.rignore to ignore such bots)\n# so only use this option if you know you are under this type of attack\n#\n# A sensible setting for this would be quite high, perhaps 200\n#\n# To disable set to \"0\"\nLF_APACHE_404 = \"0\"\n\n# If this option is set to 1 the blocks will be permanent\n# If this option is &gt; 1, the blocks will be temporary for the specified number\n# of seconds\nLF_APACHE_404_PERM = \"3600\"\n\n# This option will keep track of the number of \"client denied by server\n# configuration\" errors in HTACCESS_LOG. If the number of hits is more than\n# LF_APACHE_403 in LF_INTERVAL seconds then the IP address will be blocked\n#\n# Care should be used with this option as it could generate many\n# false-positives, especially Search Bots (use csf.rignore to ignore such bots)\n# so only use this option if you know you are under this type of attack\n#\n# A sensible setting for this would be quite high, perhaps 200\n#\n# To disable set to \"0\"\nLF_APACHE_403 = \"0\"\n\n# If this option is set to 1 the blocks will be permanent\n# If this option is &gt; 1, the blocks will be temporary for the specified number\n# of seconds\nLF_APACHE_403_PERM = \"3600\"\n\n# This option will keep track of the number of 401 failures in HTACCESS_LOG.\n# If the number of hits is more than LF_APACHE_401 in LF_INTERVAL seconds then\n# the IP address will be blocked\n#\n# To disable set to \"0\"\nLF_APACHE_401 = \"0\"\n\n# This option is used to determine if the Apache error_log format contains the\n# client port after the client IP. In Apache prior to v2.4, this was not the\n# case. In Apache v2.4+ the error_log format can be configured using\n# ErrorLogFormat, making the port directive optional\n#\n# Unfortunately v2.4 ErrorLogFormat places the port number after a colon next\n# to the client IP by default. This makes determining client IPv6 addresses\n# difficult unless we know whether the port is being appended or not\n#\n# lfd will attempt to autodetect the correct value if this option is set to \"0\"\n# from the httpd binary found in common locations. If it fails to find a binary\n# it will be set to \"2\", unless specified here\n#\n# The value can be set here explicitly if the autodetection does not work:\n# 0 - autodetect\n# 1 - no port directive after client IP\n# 2 - port directive after client IP\nLF_APACHE_ERRPORT = \"0\"\n\n# If this option is set to 1 the blocks will be permanent\n# If this option is &gt; 1, the blocks will be temporary for the specified number\n# of seconds\nLF_APACHE_401_PERM = \"3600\"\n\n# This option will send an alert if the ModSecurity IP persistent storage grows\n# excessively large: https://goo.gl/rGh5sF\n#\n# More information on cPanel servers here: https://goo.gl/vo6xTE\n#\n# LF_MODSECIPDB_FILE must be set to the correct location of the database file\n#\n# The check is performed at lfd startup and then once per hour, the template\n# used is modsecipdbalert.txt\n#\n# Set to \"0\" to disable this option, otherwise it is the threshold size of the\n# file to report in gigabytes, e.g. set to 5 for 5GB\nLF_MODSECIPDB_ALERT = \"0\"\n\n# This is the location of the persistent IP storage file on the server, e.g.:\n# /var/run/modsecurity/data/ip.pag\n# /var/cpanel/secdatadir/ip.pag\n# /var/cache/modsecurity/ip.pag\n# /usr/local/apache/conf/modsec/data/msa/ip.pag\n# /var/tmp/ip.pag\n# /tmp/ip.pag\nLF_MODSECIPDB_FILE = \"/var/run/modsecurity/data/ip.pag\"\n\n# System Exploit Checking. This option is designed to perform a series of tests\n# to send an alert in case a possible server compromise is detected\n#\n# To enable this feature set the following to the checking interval in seconds\n# (a value of 300 would seem sensible).\n#\n# To disable set to \"0\"\nLF_EXPLOIT = \"300\"\n\n# This comma separated list allows you to ignore tests LF_EXPLOIT performs\n#\n# For the SUPERUSER check, you can list usernames in csf.suignore to have them\n# ignored for that test\n#\n# Valid tests are:\n# SUPERUSER\n#\n# If you want to ignore a test add it to this as a comma separated list, e.g.\n# \"SUPERUSER\"\nLF_EXPLOIT_IGNORE = \"\"\n\n# Set the time interval to track login and other LF_ failures within (seconds),\n# i.e. LF_TRIGGER failures within the last LF_INTERVAL seconds\nLF_INTERVAL = \"3600\"\n\n# This is how long the lfd process sleeps (in seconds) before processing the\n# log file entries and checking whether other events need to be triggered\nLF_PARSE = \"5\"\n\n# This is the interval that is used to flush reports of usernames, files and\n# pids so that persistent problems continue to be reported, in seconds.\n# A value of 3600 seems sensible\nLF_FLUSH = \"3600\"\n\n# Under some circumstances iptables can fail to include a rule instruction,\n# especially if more than one request is made concurrently. In this event, a\n# permanent block entry may exist in csf.deny, but not in iptables.\n#\n# This option instructs csf to deny an already blocked IP address the number\n# of times set. The downside, is that there will be multiple entries for an IP\n# address in csf.deny and possibly multiple rules for the same IP address in\n# iptables. This needs to be taken into consideration when unblocking such IP\n# addresses.\n#\n# Set to \"0\" to disable this feature. Do not set this too high for the reasons\n# detailed above (e.g. \"5\" should be more than enough)\nLF_REPEATBLOCK = \"0\"\n\n# By default csf will create both an inbound and outbound blocks from/to an IP\n# unless otherwise specified in csf.deny and GLOBAL_DENY. This is the most\n# effective way to block IP traffic. This option instructs csf to only block\n# inbound traffic from those IP's and so reduces the number of iptables rules,\n# but at the expense of less effectiveness. For this reason we recommend\n# leaving this option disabled\n# \n# Set to \"0\" to disable this feature - the default\nLF_BLOCKINONLY = \"0\"\n\n###############################################################################\n# SECTION:CloudFlare\n###############################################################################\n# This features provides interaction with the CloudFlare Firewall\n#\n# As CloudFlare is a reverse proxy, any attacking IP addresses (so far as \n# iptables is concerned) come from the CloudFlare IP's. To counter this, an\n# Apache module (mod_cloudflare) is available that obtains the true attackers\n# IP from a custom HTTP header record (similar functionality is available\n# for other HTTP daemons\n#\n# However, despite now knowing the true attacking IP address, iptables cannot\n# be used to block that IP as the traffic is still coming from the CloudFlare\n# servers\n#\n# CloudFlare have provided a Firewall feature within the user account where\n# rules can be added to block, challenge or whitelist IP addresses\n#\n# Using the CloudFlare API, this feature adds and removes attacking IPs from\n# that firewall and provides CLI (and via the UI) additional commands\n#\n# See /etc/csf/readme.txt for more information about this feature and the\n# restrictions for its use BEFORE enabling this feature\nCF_ENABLE = \"0\"\n\n# This can be set to either \"block\" or \"challenge\" (see CloudFlare docs)\nCF_BLOCK = \"block\"\n\n# This setting determines how long the temporary block will apply within csf\n# and CloudFlare, keeping them in sync\n#\n# Block duration in seconds - overrides perm block or time of individual blocks\n# in lfd for block triggers\nCF_TEMP = \"3600\"\n\n###############################################################################\n# SECTION:Directory Watching &amp; Integrity \n###############################################################################\n# Enable Directory Watching. This enables lfd to check /tmp and /dev/shm\n# directories for suspicious files, i.e. script exploits. If a suspicious\n# file is found an email alert is sent. One alert per file per LF_FLUSH\n# interval is sent\n#\n# To enable this feature set the following to the checking interval in seconds.\n# To disable set to \"0\"\nLF_DIRWATCH = \"300\"\n\n# To remove any suspicious files found during directory watching, enable the\n# following. These files will be appended to a tarball in\n# /var/lib/csf/suspicious.tar\nLF_DIRWATCH_DISABLE = \"0\"\n\n# This option allows you to have lfd watch a particular file or directory for\n# changes and should they change and email alert using watchalert.txt is sent\n#\n# To enable this feature set the following to the checking interval in seconds\n# (a value of 60 would seem sensible) and add your entries to csf.dirwatch\n#\n# Set to disable set to \"0\"\nLF_DIRWATCH_FILE = \"0\"\n\n# System Integrity Checking. This enables lfd to compare md5sums of the\n# servers OS binary application files from the time when lfd starts. If the\n# md5sum of a monitored file changes an alert is sent. This option is intended\n# as an IDS (Intrusion Detection System) and is the last line of detection for\n# a possible root compromise.\n#\n# There will be constant false-positives as the servers OS is updated or\n# monitored application binaries are updated. However, unexpected changes\n# should be carefully inspected.\n#\n# Modified files will only be reported via email once.\n#\n# To enable this feature set the following to the checking interval in seconds\n# (a value of 3600 would seem sensible). This option may increase server I/O\n# load onto the server as it checks system binaries.\n#\n# To disable set to \"0\"\nLF_INTEGRITY = \"3600\"\n\n###############################################################################\n# SECTION:Distributed Attacks\n###############################################################################\n# Distributed Account Attack. This option will keep track of login failures\n# from distributed IP addresses to a specific application account. If the\n# number of failures matches the trigger value above, ALL of the IP addresses\n# involved in the attack will be blocked according to the temp/perm rules above\n#\n# Tracking applies to LF_SSHD, LF_FTPD, LF_SMTPAUTH, LF_POP3D, LF_IMAPD, \n# LF_HTACCESS\n#\n# SECURITY NOTE: This option is affected by the RESTRICT_SYSLOG option. Read\n# this file about RESTRICT_SYSLOG before enabling this option:\nLF_DISTATTACK = \"0\"\n\n# Set the following to the minimum number of unique IP addresses that trigger\n# LF_DISTATTACK\nLF_DISTATTACK_UNIQ = \"2\"\n\n# Distributed FTP Logins. This option will keep track of successful FTP logins.\n# If the number of successful logins to an individual account is at least\n# LF_DISTFTP in LF_DIST_INTERVAL from at least LF_DISTFTP_UNIQ IP addresses,\n# then all of the IP addresses will be blocked\n#\n# This option can help mitigate the common FTP account compromise attacks that\n# use a distributed network of zombies to deface websites\n#\n# A sensible setting for this might be 5, depending on how many different\n# IP addresses you expect to an individual FTP account within LF_DIST_INTERVAL\n#\n# To disable set to \"0\"\n#\n# SECURITY NOTE: This option is affected by the RESTRICT_SYSLOG option. Read\n# this file about RESTRICT_SYSLOG before enabling this option:\nLF_DISTFTP = \"0\"\n\n# Set the following to the minimum number of unique IP addresses that trigger\n# LF_DISTFTP. LF_DISTFTP_UNIQ must be &lt;= LF_DISTFTP for this to work\nLF_DISTFTP_UNIQ = \"3\"\n\n# If this option is set to 1 the blocks will be permanent\n# If this option is &gt; 1, the blocks will be temporary for the specified number\n# of seconds\nLF_DISTFTP_PERM = \"1\"\n\n# Send an email alert if LF_DISTFTP is triggered\nLF_DISTFTP_ALERT = \"1\"\n\n# Distributed SMTP Logins. This option will keep track of successful SMTP\n# logins. If the number of successful logins to an individual account is at\n# least LF_DISTSMTP in LF_DIST_INTERVAL from at least LF_DISTSMTP_UNIQ IP\n# addresses, then all of the IP addresses will be blocked. These options only\n# apply to the exim MTA\n#\n# This option can help mitigate the common SMTP account compromise attacks that\n# use a distributed network of zombies to send spam\n#\n# A sensible setting for this might be 5, depending on how many different\n# IP addresses you expect to an individual SMTP account within LF_DIST_INTERVAL\n#\n# To disable set to \"0\"\nLF_DISTSMTP = \"0\"\n\n# Set the following to the minimum number of unique IP addresses that trigger\n# LF_DISTSMTP. LF_DISTSMTP_UNIQ must be &lt;= LF_DISTSMTP for this to work\nLF_DISTSMTP_UNIQ = \"3\"\n\n# If this option is set to 1 the blocks will be permanent\n# If this option is &gt; 1, the blocks will be temporary for the specified number\n# of seconds\nLF_DISTSMTP_PERM = \"1\"\n\n# Send an email alert if LF_DISTSMTP is triggered\nLF_DISTSMTP_ALERT = \"1\"\n\n# This is the interval during which a distributed FTP or SMTP attack is\n# measured\nLF_DIST_INTERVAL = \"300\"\n\n# If LF_DISTFTP or LF_DISTSMTP is triggered, then if the following contains the\n# path to a script, it will run the script and pass the following as arguments:\n#\n# LF_DISTFTP/LF_DISTSMTP\n# account name\n# log file text\n#\n# The action script must have the execute bit and interpreter (shebang) set\nLF_DIST_ACTION = \"\"\n\n###############################################################################\n# SECTION:Login Tracking\n###############################################################################\n# Block POP3 logins if greater than LT_POP3D times per hour per account per IP\n# address (0=disabled)\n#\n# This is a temporary block for the rest of the hour, afterwhich the IP is\n# unblocked\n#\n# SECURITY NOTE: This option is affected by the RESTRICT_SYSLOG option. Read\n# this file about RESTRICT_SYSLOG before enabling this option:\nLT_POP3D = \"0\"\n\n# Block IMAP logins if greater than LT_IMAPD times per hour per account per IP\n# address (0=disabled) - not recommended for IMAP logins due to the ethos\n# within which IMAP works. If you want to use this, setting it quite high is\n# probably a good idea\n#\n# This is a temporary block for the rest of the hour, afterwhich the IP is\n# unblocked\n#\n# SECURITY NOTE: This option is affected by the RESTRICT_SYSLOG option. Read\n# this file about RESTRICT_SYSLOG before enabling this option:\nLT_IMAPD = \"0\"\n\n# Send an email alert if an account exceeds LT_POP3D/LT_IMAPD logins per hour\n# per IP\nLT_EMAIL_ALERT = \"1\"\n\n# If LF_PERMBLOCK is enabled but you do not want this to apply to\n# LT_POP3D/LT_IMAPD, then enable this option\nLT_SKIPPERMBLOCK = \"0\"\n\n###############################################################################\n# SECTION:Connection Tracking\n###############################################################################\n# Connection Tracking. This option enables tracking of all connections from IP\n# addresses to the server. If the total number of connections is greater than\n# this value then the offending IP address is blocked. This can be used to help\n# prevent some types of DOS attack.\n#\n# Care should be taken with this option. It's entirely possible that you will\n# see false-positives. Some protocols can be connection hungry, e.g. FTP, IMAPD\n# and HTTP so it could be quite easy to trigger, especially with a lot of\n# closed connections in TIME_WAIT. However, for a server that is prone to DOS\n# attacks this may be very useful. A reasonable setting for this option might\n# be around 300.\n#\n# To disable this feature, set this to 0\nCT_LIMIT = \"0\"\n\n# Connection Tracking interval. Set this to the the number of seconds between\n# connection tracking scans\nCT_INTERVAL = \"30\"\n\n# Send an email alert if an IP address is blocked due to connection tracking\nCT_EMAIL_ALERT = \"1\"\n\n# If you want to make IP blocks permanent then set this to 1, otherwise blocks\n# will be temporary and will be cleared after CT_BLOCK_TIME seconds\nCT_PERMANENT = \"0\"\n\n# If you opt for temporary IP blocks for CT, then the following is the interval\n# in seconds that the IP will remained blocked for (e.g. 1800 = 30 mins)\nCT_BLOCK_TIME = \"1800\"\n\n# If you don't want to count the TIME_WAIT state against the connection count\n# then set the following to \"1\"\nCT_SKIP_TIME_WAIT = \"0\"\n\n# If you only want to count specific states (e.g. SYN_RECV) then add the states\n# to the following as a comma separated list. E.g. \"SYN_RECV,TIME_WAIT\"\n#\n# Leave this option empty to count all states against CT_LIMIT\nCT_STATES = \"\"\n\n# If you only want to count specific ports (e.g. 80,443) then add the ports\n# to the following as a comma separated list. E.g. \"80,443\"\n#\n# Leave this option empty to count all ports against CT_LIMIT\nCT_PORTS = \"\"\n\n# If the total number of connections from a class C subnet is greater than this\n# value then the offending subnet is blocked according to the other CT_*\n# settings\n#\n# This option can be used to help prevent some types of DOS attack where a\n# range of IP's between x.y.z.1-255 has connected to the server\n#\n# If you use a reverse proxy service such as Cloudflare you should not enable\n# this option, or should exclude the ports that you have proxied in CT_PORTS\n#\n# To disable this feature, set this to 0\nCT_SUBNET_LIMIT = \"0\"\n\n###############################################################################\n# SECTION:Process Tracking\n###############################################################################\n# Process Tracking. This option enables tracking of user and nobody processes\n# and examines them for suspicious executables or open network ports. Its\n# purpose is to identify potential exploit processes that are running on the\n# server, even if they are obfuscated to appear as system services. If a\n# suspicious process is found an alert email is sent with relevant information.\n# It is then the responsibility of the recipient to investigate the process\n# further as the script takes no further action\n#\n# The following is the number of seconds a process has to be active before it\n# is inspected. If you set this time too low, then you will likely trigger\n# false-positives with CGI or PHP scripts.\n# Set the value to 0 to disable this feature\nPT_LIMIT = \"60\"\n\n# How frequently processes are checked in seconds\nPT_INTERVAL = \"60\"\n\n# If you want process tracking to highlight php or perl scripts that are run\n# through apache then disable the following,\n# i.e. set it to 0\n#\n# While enabling this setting will reduce false-positives, having it set to 0\n# does provide better checking for exploits running on the server\nPT_SKIP_HTTP = \"0\"\n\n# lfd will report processes, even if they're listed in csf.pignore, if they're\n# tagged as (deleted) by Linux. This information is provided in Linux under\n# /proc/PID/exe. A (deleted) process is one that is running a binary that has\n# the inode for the file removed from the file system directory. This usually\n# happens when the binary has been replaced due to an upgrade for it by the OS\n# vendor or another third party (e.g. cPanel). You need to investigate whether\n# this is indeed the case to be sure that the original binary has not been\n# replaced by a rootkit or is running an exploit.\n#\n# Note: If a deleted executable process is detected and reported then lfd will\n# not report children of the parent (or the parent itself if a child triggered\n# the report) if the parent is also a deleted executable process\n#\n# To stop lfd reporting such process you need to restart the daemon to which it\n# belongs and therefore run the process using the replacement binary (presuming\n# one exists). This will normally mean running the associated startup script in\n# /etc/init.d/\n#\n# If you do want lfd to report deleted binary processes, set to 1\nPT_DELETED = \"0\"\n\n# If a PT_DELETED event is triggered, then if the following contains the path to\n# a script, it will be run in a child process and passed the executable, pid,\n# account for the process, and parent pid\n#\n# The action script must have the execute bit and interpreter (shebang) set. An\n# example is provided in /usr/local/csf/bin/pt_deleted_action.pl\n#\n# WARNING: Make sure you read and understand the potential security\n# implications of such processes in PT_DELETED above before simply restarting\n# such processes with a script\nPT_DELETED_ACTION = \"\"\n\n# User Process Tracking. This option enables the tracking of the number of\n# process any given account is running at one time. If the number of processes\n# exceeds the value of the following setting an email alert is sent with\n# details of those processes. If you specify a user in csf.pignore it will be\n# ignored\n#\n# Set to 0 to disable this feature\nPT_USERPROC = \"10\"\n\n# This User Process Tracking option sends an alert if any user process exceeds\n# the virtual memory usage set (MB). To ignore specific processes or users use\n# csf.pignore\n#\n# Set to 0 to disable this feature\nPT_USERMEM = \"512\"\n\n# This User Process Tracking option sends an alert if any user process exceeds\n# the RSS memory usage set (MB) - RAM used, not virtual. To ignore specific\n# processes or users use csf.pignore\n#\n# Set to 0 to disable this feature\nPT_USERRSS = \"256\"\n\n# This User Process Tracking option sends an alert if any linux user process\n# exceeds the time usage set (seconds). To ignore specific processes or users\n# use csf.pignore\n#\n# Set to 0 to disable this feature\nPT_USERTIME = \"1800\"\n\n# If this option is set then processes detected by PT_USERMEM, PT_USERTIME or\n# PT_USERPROC are killed\n#\n# Warning: We don't recommend enabling this option unless absolutely necessary\n# as it can cause unexpected problems when processes are suddenly terminated.\n# It can also lead to system processes being terminated which could cause\n# stability issues. It is much better to leave this option disabled and to\n# investigate each case as it is reported when the triggers above are breached\n#\n# Note: Processes that are running deleted excecutables (see PT_DELETED) will\n# not be killed by lfd\nPT_USERKILL = \"0\"\n\n# If you want to disable email alerts if PT_USERKILL is triggered, then set\n# this option to 0\nPT_USERKILL_ALERT = \"1\"\n\n# If a PT_* event is triggered, then if the following contains the path to\n# a script, it will be run in a child process and passed the PID(s) of the\n# process(es) in a comma separated list.\n#\n# The action script must have the execute bit and interpreter (shebang) set\nPT_USER_ACTION = \"\"\n\n# Check the PT_LOAD_AVG minute Load Average (can be set to 1 5 or 15 and\n# defaults to 5 if set otherwise) on the server every PT_LOAD seconds. If the\n# load average is greater than or equal to PT_LOAD_LEVEL then an email alert is\n# sent. lfd then does not report subsequent high load until PT_LOAD_SKIP\n# seconds has passed to prevent email floods.\n#\n# Set PT_LOAD to \"0\" to disable this feature\nPT_LOAD = \"30\"\nPT_LOAD_AVG = \"5\"\nPT_LOAD_LEVEL = \"6\"\nPT_LOAD_SKIP = \"3600\"\n\n# This is the Apache Server Status URL used in the email alert. Requires the\n# Apache mod_status module to be installed and configured correctly\nPT_APACHESTATUS = \"http://127.0.0.1/server-status\"\n\n# If a PT_LOAD event is triggered, then if the following contains the path to\n# a script, it will be run in a child process. For example, the script could\n# contain commands to terminate and restart httpd, php, exim, etc incase of\n# looping processes. The action script must have the execute bit an \n# interpreter (shebang) set\nPT_LOAD_ACTION = \"\"\n\n# Fork Bomb Protection. This option checks the number of processes with the\n# same session id and if greater than the value set, the whole session tree is\n# terminated and an alert sent\n#\n# You can see an example of common session id processes on most Linux systems\n# using: \"ps axf -O sid\"\n#\n# On cPanel servers, PT_ALL_USERS should be enabled to use this option\n# effectively\n#\n# This option will check root owned processes. Session id 0 and 1 will always\n# be ignored as they represent kernel and init processes. csf.pignore will be\n# honoured, but bear in mind that a session tree can contain a variety of users\n# and executables\n#\n# Care needs to be taken to ensure that this option only detects runaway fork\n# bombs, so should be set higher than any session tree is likely to get (e.g.\n# httpd could have 100s of legitimate children on very busy systems). A\n# sensible starting point on most servers might be 250\nPT_FORKBOMB = \"0\"\n\n# Terminate hung SSHD sessions. When under an SSHD login attack, SSHD processes\n# are often left hanging after their connecting IP addresses have been blocked\n#\n# This option will terminate the SSH processes created by the blocked IP. This\n# option is preferred over PT_SSHDHUNG\nPT_SSHDKILL = \"0\"\n\n# This option will terminate all processes with the cmdline of \"sshd: unknown\n# [net]\" or \"sshd: unknown [priv]\" if they have been running for more than 60\n# seconds\nPT_SSHDHUNG = \"0\"\n\n###############################################################################\n# SECTION:Port Scan Tracking\n###############################################################################\n# Port Scan Tracking. This feature tracks port blocks logged by iptables to\n# syslog. If an IP address generates a port block that is logged more than\n# PS_LIMIT within PS_INTERVAL seconds, the IP address will be blocked.\n#\n# This feature could, for example, be useful for blocking hackers attempting\n# to access the standard SSH port if you have moved it to a port other than 22\n# and have removed 22 from the TCP_IN list so that connection attempts to the\n# old port are being logged\n#\n# This feature blocks all iptables blocks from the iptables logs, including\n# repeated attempts to one port or SYN flood blocks, etc\n#\n# Note: This feature will only track iptables blocks from the log file set in\n# IPTABLES_LOG below and if you have DROP_LOGGING enabled. However, it will\n# cause redundant blocking with DROP_IP_LOGGING enabled\n#\n# Warning: It's possible that an elaborate DDOS (i.e. from multiple IP's)\n# could very quickly fill the iptables rule chains and cause a DOS in itself.\n# The DENY_IP_LIMIT should help to mitigate such problems with permanent blocks\n# and the DENY_TEMP_IP_LIMIT with temporary blocks\n#\n# Set PS_INTERVAL to \"0\" to disable this feature. A value of between 60 and 300\n# would be sensible to enable this feature\n#\n# SECURITY NOTE: This option is affected by the RESTRICT_SYSLOG option. Read\n# this file about RESTRICT_SYSLOG before enabling this option:\nPS_INTERVAL = \"0\"\nPS_LIMIT = \"10\"\n\n# You can specify the ports and/or port ranges that should be tracked by the\n# Port Scan Tracking feature. The following setting is a comma separated list\n# of those ports and uses the same format as TCP_IN. The setting of\n# 0:65535,ICMP,INVALID,OPEN,BRD covers all ports\n#\n# Special values are:\n#   ICMP    - include ICMP blocks (see ICMP_*)\n#   INVALID - include INVALID blocks (see PACKET_FILTER)\n#   OPEN    - include TCP_IN and UDP_IN open port blocks - *[proto]_IN Blocked*\n#   BRD     - include UDP Broadcast IPs, otherwise they are ignored\nPS_PORTS = \"0:65535,ICMP\"\n\n# To specify how many different ports qualifies as a Port Scan you can increase\n# the following from the default value of 1. The risk in doing so will mean\n# that persistent attempts to attack a specific closed port will not be\n# detected and blocked\nPS_DIVERSITY = \"1\"\n\n# You can select whether IP blocks for Port Scan Tracking should be temporary\n# or permanent. Set PS_PERMANENT to \"0\" for temporary and \"1\" for permanent\n# blocking. If set to \"0\" PS_BLOCK_TIME is the amount of time in seconds to\n# temporarily block the IP address for\nPS_PERMANENT = \"0\"\nPS_BLOCK_TIME = \"3600\"\n\n# Set the following to \"1\" to enable Port Scan Tracking email alerts, set to\n# \"0\" to disable them\nPS_EMAIL_ALERT = \"1\"\n\n###############################################################################\n# SECTION:User ID Tracking\n###############################################################################\n# User ID Tracking. This feature tracks UID blocks logged by iptables to\n# syslog. If a UID generates a port block that is logged more than UID_LIMIT\n# times within UID_INTERVAL seconds, an alert will be sent\n#\n# Note: This feature will only track iptables blocks from the log file set in\n# IPTABLES_LOG and if DROP_OUT_LOGGING and DROP_UID_LOGGING are enabled.\n#\n# To ignore specific UIDs list them in csf.uidignore and then restart lfd\n#\n# Set UID_INTERVAL to \"0\" to disable this feature. A value of between 60 and 300\n# would be sensible to enable this feature\n#\n# SECURITY NOTE: This option is affected by the RESTRICT_SYSLOG option. Read\n# this file about RESTRICT_SYSLOG before enabling this option:\nUID_INTERVAL = \"0\"\nUID_LIMIT = \"10\"\n\n# You can specify the ports and/or port ranges that should be tracked by the\n# User ID Tracking feature. The following setting is a comma separated list\n# of those ports and uses the same format as TCP_OUT. The default setting of\n# 0:65535,ICMP covers all ports\nUID_PORTS = \"0:65535,ICMP\"\n\n###############################################################################\n# SECTION:Account Tracking\n###############################################################################\n# Account Tracking. The following options enable the tracking of modifications\n# to the accounts on a server. If any of the enabled options are triggered by\n# a modifications to an account, an alert email is sent. Only the modification\n# is reported. The cause of the modification will have to be investigated\n# manually\n#\n# You can set AT_ALERT to the following:\n# 0 = disable this feature\n# 1 = enable this feature for all accounts\n# 2 = enable this feature only for superuser accounts (UID = 0, e.g. root, etc)\n# 3 = enable this feature only for the root account\nAT_ALERT = \"2\"\n\n# This options is the interval between checks in seconds\nAT_INTERVAL = \"60\"\n\n# Send alert if a new account is created\nAT_NEW = \"1\"\n\n# Send alert if an existing account is deleted\nAT_OLD = \"1\"\n\n# Send alert if an account password has changed\nAT_PASSWD = \"1\"\n\n# Send alert if an account uid has changed\nAT_UID = \"1\"\n\n# Send alert if an account gid has changed\nAT_GID = \"1\"\n\n# Send alert if an account login directory has changed\nAT_DIR = \"1\"\n\n# Send alert if an account login shell has changed\nAT_SHELL = \"1\"\n\n###############################################################################\n# SECTION:Integrated User Interface\n###############################################################################\n# Integrated User Interface. This feature provides a HTML UI to csf and lfd,\n# without requiring a control panel or web server. The UI runs as a sub process\n# to the lfd daemon\n#\n# As it runs under the root account and successful login provides root access\n# to the server, great care should be taken when configuring and using this\n# feature. There are additional restrictions to enhance secure access to the UI\n#\n# See readme.txt for more information about using this feature BEFORE enabling\n# it for security and access reasons\n# \n# 1 to enable, 0 to disable\nUI = \"1\"\n\n# Set this to the port that want to bind this service to. You should configure\n# this port to be &gt;1023 and different from any other port already being used\n#\n# Do NOT enable access to this port in TCP_IN, instead only allow trusted IP's\n# to the port using Advanced Allow Filters (see readme.txt)\nUI_PORT = \"8546\"\n\n# Optionally set the IP address to bind to. Normally this should be left blank\n# to bind to all IP addresses on the server.\n#\n# If the server is configured for IPv6 but the IP to bind to is IPv4, then the\n# IP address MUST use the IPv6 representation. For example 1.2.3.4 must use\n# ::ffff:1.2.3.4\n#\n# Leave blank to bind to all IP addresses on the server\nUI_IP = \"\"\n\n# This should be a secure, hard to guess username\n# \n# This must be changed from the default\nUI_USER = \"admin\"\n\n# This should be a secure, hard to guess password. That is, at least 8\n# characters long with a mixture of upper and lowercase characters plus \n# numbers and non-alphanumeric characters\n#\n# This must be changed from the default\nUI_PASS = \"password\"\n\n# This is the login session timeout. If there is no activity for a logged in\n# session within this number of seconds, the session will timeout and a new\n# login will be required\n#\n# For security reasons, you should always keep this option low (i.e 60-300)\nUI_TIMEOUT = \"300\"\n\n# This is the maximum concurrent connections allowed to the server. The default\n# value should be sufficient\nUI_CHILDREN = \"5\"\n\n# The number of login retries allowed within a 24 hour period. A successful\n# login from the IP address will clear the failures\n#\n# For security reasons, you should always keep this option low (i.e 0-10)\nUI_RETRY = \"5\"\n\n# If enabled, this option will add the connecting IP address to the file \n# /etc/csf/ui/ui.ban after UI_RETRY login failures. The IP address will not be\n# able to login to the UI while it is listed in this file. The UI_BAN setting\n# does not refer to any of the csf/lfd allow or ignore files, e.g. csf.allow,\n# csf.ignore, etc.\n#\n# For security reasons, you should always enable this option\nUI_BAN = \"1\"\n\n# If enabled, only IPs (or CIDR's) listed in the file /etc/csf/ui/ui.allow will\n# be allowed to login to the UI. The UI_ALLOW setting does not refer to any of\n# the csf/lfd allow or ignore files, e.g. csf.allow, csf.ignore, etc.\n#\n# For security reasons, you should always enable this option and use ui.allow\nUI_ALLOW = \"1\"\n\n# If enabled, this option will trigger an iptables block through csf after\n# UI_RETRY login failures\n#\n# 0 = no block;1 = perm block;nn=temp block for nn secs\nUI_BLOCK = \"1\"\n\n# This controls what email alerts are sent with regards to logins to the UI. It\n# uses the uialert.txt template\n#\n# 4 = login success + login failure/ban/block + login attempts\n# 3 = login success + login failure/ban/block\n# 2 = login failure/ban/block\n# 1 = login ban/block\n# 0 = disabled\nUI_ALERT = \"4\"\n\n# This is the SSL cipher list that the Integrated UI will negotiate from\nUI_CIPHER = \"ALL:!ADH:RC4+RSA:+HIGH:+MEDIUM:-LOW:-SSLv2:-EXP:!kEDH\"\n\n# This is the SSL protocol version used. See IO::Socket::SSL if you wish to\n# change this and to understand the implications of changing it\nUI_SSL_VERSION = \"SSLv23:!SSLv3:!SSLv2\"\n\n# If cxs is installed then enabling this option will provide a dropdown box to\n# switch between applications\nUI_CXS = \"0\"\n\n# There is a modified installation of ConfigServer Explorer (cse) provided with\n# the csf distribution. If this option is enabled it will provide a dropdown\n# box to switch between applications\nUI_CSE = \"0\"\n\n###############################################################################\n# SECTION:Messenger service\n###############################################################################\n# Messenger service. This feature allows the display of a message to a blocked\n# connecting IP address to inform the user that they are blocked in the\n# firewall. This can help when users get themselves blocked, e.g. due to\n# multiple login failures. The service is provided by two daemons running on\n# ports providing either an HTML or TEXT message\n#\n# This feature does not work on servers that do not have the iptables module\n# ipt_REDIRECT loaded. Typically, this will be with MONOLITHIC kernels. VPS\n# server admins should check with their VPS host provider that the iptables\n# module is included\n#\n# IPv6 will need the IO::Socket::INET6 perl module\n#\n# For further information on features and limitations refer to the csf\n# readme.txt\n#\n# Note: Run /etc/csf/csftest.pl to check whether this option will function on\n# this server\n#\n# 1 to enable, 0 to disable\nMESSENGER = \"0\"\n\n# Provide this service to temporary IP address blocks\nMESSENGER_TEMP = \"1\"\n\n# Provide this service to permanent IP address blocks\nMESSENGER_PERM = \"1\"\n\n# User account to run the service servers under. We recommend creating a\n# specific non-priv, non-shell account for this purpose\n#\n# Note: When using MESSENGERV2, this account must NOT be a valid control panel\n# account, it must be created manually as explained in the csf readme.txt\nMESSENGER_USER = \"csf\"\n\n# This option points to the file(s) containing the Apache VirtualHost SSL\n# definitions. This can be a file glob if there are multiple files to search.\n# Only Apache v2 SSL VirtualHost definitions are supported\n#\n# This is used by MESSENGERV1 and MESSENGERV2 only\nMESSENGER_HTTPS_CONF = \"/etc/httpd/conf.d/ssl.conf\"\n\n# The following options can be specified to provide a default fallback\n# certificate to be used if either SNI is not supported or a hosted domain does\n# not have an SSL certificate. If a fallback is not provided, one of the certs\n# obtained from MESSENGER_HTTPS_CONF will be used\n#\n# This is used by MESSENGERV1 and MESSENGERV2 only\nMESSENGER_HTTPS_KEY = \"/etc/pki/tls/private/localhost.key\"\nMESSENGER_HTTPS_CRT = \"/etc/pki/tls/certs/localhost.crt\"\n\n# Set this to the port that will receive the HTTPS HTML message. You should\n# configure this port to be &gt;1023 and different from the TEXT and HTML port. Do\n# NOT enable access to this port in TCP_IN. This option requires the perl\n# module IO::Socket::SSL at a version level that supports SNI (1.83+).\n# Additionally the version of openssl on the server must also support SNI\n#\n# The option uses existing SSL certificates on the server for each domain to\n# maintain a secure connection without browser warnings. It uses SNI to choose\n# the correct certificate to use for each client connection\n#\n# Warning: On some servers the amount of memory used by the HTTPS MESSENGER\n# service can become significant depending on various factors associated with\n# the use of IO::Socket::SSL including the number of domains and certificates\n# served. This is normally only an issue if using MESSENGERV1\nMESSENGER_HTTPS = \"8887\"\n\n# This comma separated list are the HTTPS HTML ports that will be redirected\n# for the blocked IP address. If you are using per application blocking\n# (LF_TRIGGER) then only the relevant block port will be redirected to the\n# messenger port\n#\n# Recommended setting \"443\" plus any end-user control panel SSL ports. So, for\n# cPanel: \"443,2083,2096\"\nMESSENGER_HTTPS_IN = \"443\"\n\n# Set this to the port that will receive the HTML message. You should configure\n# this port to be &gt;1023 and different from the TEXT port. Do NOT enable access\n# to this port in TCP_IN\nMESSENGER_HTML = \"8888\"\n\n# This comma separated list are the HTML ports that will be redirected for the\n# blocked IP address. If you are using per application blocking (LF_TRIGGER)\n# then only the relevant block port will be redirected to the messenger port\nMESSENGER_HTML_IN = \"80\"\n\n# Set this to the port that will receive the TEXT message. You should configure\n# this port to be &gt;1023 and different from the HTML port. Do NOT enable access\n# to this port in TCP_IN\nMESSENGER_TEXT = \"8889\"\n\n# This comma separated list are the TEXT ports that will be redirected for the\n# blocked IP address. If you are using per application blocking (LF_TRIGGER)\n# then only the relevant block port will be redirected to the messenger port\nMESSENGER_TEXT_IN = \"21\"\n\n# These settings limit the rate at which connections can be made to the\n# messenger service servers. Its intention is to provide protection from\n# attacks or excessive connections to the servers. If the rate is exceeded then\n# iptables will revert for the duration to the normal blocking activity\n#\n# See the iptables man page for the correct --limit rate syntax\nMESSENGER_RATE = \"100/s\"\nMESSENGER_BURST = \"150\"\n\n# MESSENGERV1 only:\n#------------------------------------------------------------------------------\n# This is the maximum concurrent connections allowed to each service server\n#\n# Note: This number should be increased to cater for the number of local images\n# served by this page, including one for favicon.ico. This is because each\n# image displayed counts as an additional connection\nMESSENGER_CHILDREN = \"20\"\n\n# This options ignores ServerAlias definitions that begin with \"mail.\". This\n# can help reduce memory usage on systems that do not require the use of\n# MESSENGER_HTTPS on those subdomains\n#\n# Set to 0 to include these ServerAlias definitions\nMESSENGER_HTTPS_SKIPMAIL = \"1\"\n\n# MESSENGERV2 only:\n#------------------------------------------------------------------------------\n# MESSENGERV2. This option is available on cPanel servers running Apache v2.4+\n# under EA4.\n#\n# This uses the Apache http daemon to provide the web server functionality for\n# the MESSENGER HTML and HTTPS services. It uses a fraction of the resources\n# that the lfd inbuilt service uses and overcomes the memory overhead of using\n# the MESSENGER HTTPS service\n#\n# For more information consult readme.txt before enabling this option\n#MESSENGERV2 = \"0\"\n\n# MESSENGERV3 only:\n#------------------------------------------------------------------------------\n# MESSENGERV3. This option is available on any server running Apache v2.4+,\n# Litespeed or Openlitespeed\n#\n# This uses the web server http daemon to provide the web server functionality\n# for the MESSENGER HTML and HTTPS services. It uses a fraction of the\n# resources that the lfd inbuilt service uses and overcomes the memory overhead\n# of using the MESSENGER HTTPS service\n#\n# For more information consult readme.txt before enabling this option\nMESSENGERV3 = \"0\"\n\n# This is the file or directory where the additional web server configuration\n# file should be included\nMESSENGERV3LOCATION = \"/etc/httpd/conf.d/\"\n\n# This is the command to restart the web server\nMESSENGERV3RESTART = \"service httpd restart\"\n\n# This is the command to test the validity of the web server configuration. If\n# using Litespeed, set to \"\"\nMESSENGERV3TEST = \"/usr/sbin/apachectl -t\"\n\n# This must be set to the main httpd.conf file for either Apache or Litespeed\nMESSENGERV3HTTPS_CONF = \"/etc/httpd/conf/httpd.conf\"\n\n# This can be set to either:\n# \"apache\" - for servers running Apache v2.4+ or Litespeed using Apache\n# configuration\n# \"litespeed\" - for Litespeed or Openlitespeed\nMESSENGERV3WEBSERVER = \"apache\"\n\n# On creation, set the MESSENGER_USER public_html directory permissions to\n# Note: If you precreate this directory the following setting will be ignored\nMESSENGERV3PERMS = \"711\"\n\n# On creation, set the MESSENGER_USER public_html directory group user to\n# Note: If you precreate this directory the following setting will be ignored\nMESSENGERV3GROUP = \"apache\"\n\n# This is the web server configuration to allow PHP scripts to run. If left\n# empty, the MESSENGER service will try to configure this. If this does not\n# work, this should be set as an \"Include /path/to/csf_php.conf\" or similar\n# file which must contain appropriate web server configuration to allow PHP\n# scripts to run. This line will be included within each MESSENGER VirtualHost\n# container. This will replace the [MESSENGERV3PHPHANDLER] line from the csf\n# webserver template files\nMESSENGERV3PHPHANDLER = \"\"\n\n# RECAPTCHA:\n#------------------------------------------------------------------------------\n# The RECAPTCHA options provide a way for end-users that have blocked\n# themselves in the firewall to unblock themselves.\n#\n# A valid Google ReCAPTCHA (v2) key set is required for this feature from:\n# https://www.google.com/recaptcha/intro/index.html\n#\n# When configuring a new reCAPTCHA API key set you must ensure that the option\n# for \"Domain Name Validation\" is unticked so that the same reCAPTCHA can be\n# used for all domains hosted on the server. lfd then checks that the hostname\n# of the request resolves to an IP on this server\n#\n# This feature requires the installation of the LWP::UserAgent perl module (see\n# option URLGET for more details)\n#\n# The template used for this feature is /etc/csf/messenger/index.recaptcha.html\n#\n# Note: An unblock will fail if the end-users IP is located in a netblock,\n# blocklist or CC_* deny entry\nRECAPTCHA_SITEKEY = \"\"\nRECAPTCHA_SECRET = \"\"\n\n# Send an email when an IP address successfully attempts to unblock themselves.\n# This does not necessarily mean the IP was unblocked, only that the\n# post-recaptcha unblock request was attempted\n#\n# Set to \"0\" to disable\nRECAPTCHA_ALERT = \"1\"\n\n# If the server uses NAT then resolving the hostname to hosted IPs will likely\n# not succeed. In that case, the external IP addresses must be listed as comma\n# separated list here\nRECAPTCHA_NAT = \"\"\n\n###############################################################################\n# SECTION:lfd Clustering\n###############################################################################\n# lfd Clustering. This allows the configuration of an lfd cluster environment\n# where a group of servers can share blocks and configuration option changes.\n# Included are CLI and UI options to send requests to the cluster.\n#\n# See the readme.txt file for more information and details on setup and\n# security risks.\n#\n# Set this to a comma separated list of cluster member IP addresses to send\n# requests to. Alternatively, it can be set to the full path of a file that\n# will read in one IP per line, e.g.:\n# \"/etc/csf/cluster_sendto.txt\"\nCLUSTER_SENDTO = \"\"\n\n# Set this to a comma separated list of cluster member IP addresses to receive\n# requests from. Alternatively, it can be set to the full path of a file that\n# will read in one IP per line, e.g.:\n# \"/etc/csf/cluster_recvfrom.txt\"\nCLUSTER_RECVFROM = \"\"\n\n# IP address of the master node in the cluster allowed to send CLUSTER_CONFIG\n# changes\nCLUSTER_MASTER = \"\"\n\n# If this is a NAT server, set this to the public IP address of this server\nCLUSTER_NAT = \"\"\n\n# If a cluster member should send requests on an IP other than the default IP,\n# set it here\nCLUSTER_LOCALADDR = \"\"\n\n# Cluster communication port (must be the same on all member servers). There\n# is no need to open this port in the firewall as csf will automatically add\n# in and out bound rules to allow communication between cluster members\nCLUSTER_PORT = \"7777\"\n\n# This is a secret key used to encrypt cluster communications using the\n# Blowfish algorithm. It should be between 8 and 56 characters long,\n# preferably &gt; 20 random characters\n# 56 chars:    01234567890123456789012345678901234567890123456789012345\nCLUSTER_KEY = \"\"\n\n# Automatically send lfd blocks to all members of CLUSTER_SENDTO. Those\n# servers must have this servers IP address listed in their CLUSTER_RECVFROM\n#\n# Set to 0 to disable this feature\nCLUSTER_BLOCK = \"1\"\n\n# This option allows the enabling and disabling of the Cluster configuration\n# changing options --cconfig, --cconfigr, --cfile, --ccfile sent from the\n# CLUSTER_MASTER server\n#\n# Set this option to 1 to allow Cluster configurations to be received\nCLUSTER_CONFIG = \"0\"\n\n# Maximum number of child processes to listen on. High blocking rates or large\n# clusters may need to increase this\nCLUSTER_CHILDREN = \"10\"\n\n###############################################################################\n# SECTION:Port Knocking\n###############################################################################\n# Port Knocking. This feature allows port knocking to be enabled on multiple\n# ports with a variable number of knocked ports and a timeout. There must be a\n# minimum of 3 ports to knock for an entry to be valid\n#\n# See the following for information regarding Port Knocking:\n# http://www.portknocking.org/\n#\n# This feature does not work on servers that do not have the iptables module\n# ipt_recent loaded. Typically, this will be with MONOLITHIC kernels. VPS\n# server admins should check with their VPS host provider that the iptables\n# module is included\n#\n# For further information and syntax refer to the Port Knocking section of the\n# csf readme.txt\n#\n# Note: Run /etc/csf/csftest.pl to check whether this option will function on\n# this server\n#\n# openport;protocol;timeout;kport1;kport2;kport3[...;kportN],...\n# e.g.: 22;TCP;20;100;200;300;400\nPORTKNOCKING = \"\"\n\n# Enable PORTKNOCKING logging by iptables\nPORTKNOCKING_LOG = \"1\"\n\n# Send an email alert if the PORTKNOCKING port is opened. PORTKNOCKING_LOG must\n# also be enabled to use this option\n#\n# SECURITY NOTE: This option is affected by the RESTRICT_SYSLOG option. Read\n# this file about RESTRICT_SYSLOG before enabling this option:\nPORTKNOCKING_ALERT = \"0\"\n\n###############################################################################\n# SECTION:Log Scanner\n###############################################################################\n# Log Scanner. This feature will send out an email summary of the log lines of\n# each log listed in /etc/csf/csf.logfiles. All lines will be reported unless\n# they match a regular expression in /etc/csf/csf.logignore\n#\n# File globbing is supported for logs listed in /etc/csf/csf.logfiles. However,\n# be aware that the more files lfd has to track, the greater the performance\n# hit. Note: File globs are only evaluated when lfd is started\n#\n# Note: lfd builds the report continuously from lines logged after lfd has\n# started, so any lines logged when lfd is not running will not be reported\n# (e.g. during reboot). If lfd is restarted, then the report will include any\n# lines logged during the previous lfd logging period that weren't reported\n#\n# 1 to enable, 0 to disable\nLOGSCANNER = \"0\"\n\n# This is the interval each report will be sent based on the logalert.txt\n# template\n#\n# The interval can be set to:\n# \"hourly\" - sent on the hour\n# \"daily\"  - sent at midnight (00:00)\n# \"manual\" - sent whenever \"csf --logrun\" is run. This allows for scheduling\n#            via cron job\nLOGSCANNER_INTERVAL = \"hourly\"\n\n# Report Style\n# 1 = Separate chronological log lines per log file\n# 2 = Simply chronological log of all lines\nLOGSCANNER_STYLE = \"1\"\n\n# Send the report email even if no log lines reported\n# 1 to enable, 0 to disable\nLOGSCANNER_EMPTY = \"1\"\n\n# Maximum number of lines in the report before it is truncated. This is to\n# prevent log lines flooding resulting in an excessively large report. This\n# might need to be increased if you choose a daily report\nLOGSCANNER_LINES = \"5000\"\n\n###############################################################################\n# SECTION:Statistics Settings\n###############################################################################\n# Statistics\n#\n# Some of the Statistics output requires the gd graphics library and the\n# GD::Graph perl module with all dependent modules to be installed for the UI\n# for them to be displayed\n#\n# This option enabled statistical data gathering\nST_ENABLE = \"1\"\n\n# This option determines how many iptables log lines to store for reports\nST_IPTABLES = \"100\"\n\n# This option indicates whether rDNS and CC lookups are performed at the time\n# the log line is recorded (this is not performed when viewing the reports)\n#\n# Warning: If DROP_IP_LOGGING is enabled and there are frequent iptables hits,\n# then enabling this setting could cause serious performance problems\nST_LOOKUP = \"0\"\n\n# This option will gather basic system statstics. Through the UI it displays\n# various graphs for disk, cpu, memory, network, etc usage over 4 intervals:\n#  . Hourly (per minute)\n#  . 24 hours (per minute)\n#  . 7 days (per minute averaged over an hour)\n#  . 30 days (per minute averaged over an hour) - user definable\n# The data is stored in /var/lib/csf/stats/system and the option requires the\n# perl GD::Graph module\n#\n# Note: Disk graphs do not show on Virtuozzo/OpenVZ servers as the kernel on\n# those systems do not store the required information in /proc/diskstats\n# On new installations or when enabling this option it will take time for these\n# graphs to be populated\nST_SYSTEM = \"0\"\n\n# Set the maximum days to collect statistics for. The default is 30 days, the\n# more data that is collected the longer it will take for each of the graphs to\n# be generated\nST_SYSTEM_MAXDAYS = \"30\"\n\n# If ST_SYSTEM is enabled, then these options can collect MySQL statistical\n# data. To use this option the server must have the perl modules DBI and\n# DBD::mysql installed.\n#\n# Set this option to \"0\" to disable MySQL data collection\nST_MYSQL = \"0\"\n\n# The following options are for authentication for MySQL data collection. If\n# the password is left blank and the user set to \"root\" then the procedure will\n# look for authentication data in /root/.my.cnf. Otherwise, you will need to\n# provide a MySQL username and password to collect the data. Any MySQL user\n# account can be used\nST_MYSQL_USER = \"root\"\nST_MYSQL_PASS = \"\"\nST_MYSQL_HOST = \"localhost\"\n\n# If ST_SYSTEM is enabled, then this option can collect Apache statistical data\n# The value for PT_APACHESTATUS must be correctly set\nST_APACHE = \"0\"\n\n# The following options measure disk write performance using dd (location set\n# via the DD setting). It creates a 64MB file called /var/lib/dd_write_test and\n# the statistics will plot the MB/s response time of the disk. As this is an IO\n# intensive operation, it may not be prudent to run this test too often, so by\n# default it is only run every 5 minutes and the result duplicated for each\n# intervening minute for the statistics\n#\n# This is not necessrily a good measure of disk performance, primarily because\n# the measurements are for relatively small amounts of data over a small amount\n# of time. To properly test disk performance there are a variety of tools\n# available that should be run for extended periods of time to obtain an\n# accurate measurement. This metric is provided to give an idea of how the disk\n# is performing over time\n#\n# Note: There is a 15 second timeout performing the check\n#\n# Set to 0 to disable, 1 to enable\nST_DISKW = \"0\"\n\n# The number of minutes that elapse between tests. Default is 5, minimum is 1.\nST_DISKW_FREQ = \"5\"\n\n# This is the command line passed to dd. If you are familiar with dd, or wish\n# to move the output file (of) to a different disk, then you can alter this\n# command. Take great care when making any changes to this command as it is\n# very easy to overwrite a disk using dd if you make a mistake\nST_DISKW_DD = \"if=/dev/zero of=/var/lib/csf/dd_test bs=1MB count=64 conv=fdatasync\"\n\n###############################################################################\n# SECTION:Docker Settings\n###############################################################################\n# This section provides the configuration of iptables rules to allow Docker\n# containers to communicate through the host. If the generated rules do not\n# work with your setup you will have to use a /etc/csf/csfpost.sh file and add\n# your own iptables configuration instead\n#\n# 1 to enable, 0 to disable\nDOCKER = \"0\"\n\n# The network device on the host\nDOCKER_DEVICE = \"docker0\"\n\n# Docker container IPv4 range\nDOCKER_NETWORK4 = \"172.17.0.0/16\"\n\n# Docker container IPv6 range. IPV6 must be enabled and the IPv6 nat table\n# available (see IPv6 section). Leave blank to disable\nDOCKER_NETWORK6 = \"2001:db8:1::/64\"\n\n###############################################################################\n# SECTION:OS Specific Settings\n###############################################################################\n# Binary locations\nIPTABLES = \"/sbin/iptables\"\nIPTABLES_SAVE = \"/sbin/iptables-save\"\nIPTABLES_RESTORE = \"/sbin/iptables-restore\"\nIP6TABLES = \"/sbin/ip6tables\"\nIP6TABLES_SAVE = \"/sbin/ip6tables-save\"\nIP6TABLES_RESTORE = \"/sbin/ip6tables-restore\"\nMODPROBE = \"/sbin/modprobe\"\nIFCONFIG = \"/sbin/ifconfig\"\nSENDMAIL = \"/usr/sbin/sendmail\"\nPS = \"/bin/ps\"\nVMSTAT = \"/usr/bin/vmstat\"\nNETSTAT = \"/bin/netstat\"\nLS = \"/bin/ls\"\nMD5SUM = \"/usr/bin/md5sum\"\nTAR = \"/bin/tar\"\nCHATTR = \"/usr/bin/chattr\"\nUNZIP = \"/usr/bin/unzip\"\nGUNZIP = \"/bin/gunzip\"\nDD = \"/bin/dd\"\nTAIL = \"/usr/bin/tail\"\nGREP = \"/bin/grep\"\nZGREP = \"/bin/zgrep\"\nIPSET = \"/sbin/ipset\"\nSYSTEMCTL = \"/bin/systemctl\"\nHOST = \"/usr/bin/host\"\nIP = \"/bin/ip\"\nCURL = \"/usr/bin/curl\"\nWGET = \"/usr/bin/wget\"\n\n# Log file locations\n#\n# File globbing is allowed for the following logs. However, be aware that the\n# more files lfd has to track, the greater the performance hit\n#\n# Note: File globs are only evaluated when lfd is started\n#\nHTACCESS_LOG = \"/var/log/apache2/error.log\"\nMODSEC_LOG = \"/var/log/apache2/error.log\"\nSSHD_LOG = \"/var/log/auth.log\"\nSU_LOG = \"/var/log/messages\"\nSUDO_LOG = \"/var/log/secure\"\nFTPD_LOG = \"/var/log/messages\"\nSMTPAUTH_LOG = \"/var/log/secure\"\nPOP3D_LOG = \"/var/log/mail.log\"\nIMAPD_LOG = \"/var/log/mail.log\"\nIPTABLES_LOG = \"/var/log/messages\"\nSUHOSIN_LOG = \"/var/log/messages\"\nBIND_LOG = \"/var/log/messages\"\nSYSLOG_LOG = \"/var/log/messages\"\nWEBMIN_LOG = \"/var/log/auth.log\"\n\nCUSTOM1_LOG = \"/var/log/customlog\"\nCUSTOM2_LOG = \"/var/log/customlog\"\nCUSTOM3_LOG = \"/var/log/customlog\"\nCUSTOM4_LOG = \"/var/log/customlog\"\nCUSTOM5_LOG = \"/var/log/customlog\"\nCUSTOM6_LOG = \"/var/log/customlog\"\nCUSTOM7_LOG = \"/var/log/customlog\"\nCUSTOM8_LOG = \"/var/log/customlog\"\nCUSTOM9_LOG = \"/var/log/customlog\"\n\n# The following are comma separated lists used if LF_SELECT is enabled,\n# otherwise they are not used. They are derived from the application returned\n# from a regex match in /usr/local/csf/bin/regex.pm\n#\n# All ports default to tcp blocks. To specify udp or tcp use the format:\n# port;protocol,port;protocol,... For example, \"53;udp,53;tcp\"\nPORTS_pop3d = \"110,995\"\nPORTS_imapd = \"143,993\"\nPORTS_htpasswd = \"80,443\"\nPORTS_mod_security = \"80,443\"\nPORTS_mod_qos = \"80,443\"\nPORTS_symlink = \"80,443\"\nPORTS_suhosin = \"80,443\"\nPORTS_cxs = \"80,443\"\nPORTS_bind = \"53;udp,53;tcp\"\nPORTS_ftpd = \"20,21\"\nPORTS_webmin = \"10000\"\nPORTS_smtpauth = \"25,465,587\"\nPORTS_eximsyntax = \"25,465,587\"\n# This list is replaced, if present, by \"Port\" definitions in\n# /etc/ssh/sshd_config\nPORTS_sshd = \"22\"\n\n# This configuration is for use with generic Linux servers, do not change the\n# following setting:\nGENERIC = \"1\"\n\n# For internal use only. You should not enable this option as it could cause\n# instability in csf and lfd\nDEBUG = \"0\"\n###############################################################################\n</code></pre> <p></p> <p></p>", "tags": ["cheatsheet", "configure", "configs", "resource"]}, {"location": "usage/cheatsheet/conf/#clean-version", "title": "Clean Version", "text": "<p>This is a copy of our clean version of the CSF <code>/etc/csf/csf.conf</code> config file available from our  repository. It contains all of the settings available in our full version, but with all comments removed.</p> <pre><code>TESTING = \"0\"\nTESTING_INTERVAL = \"5\"\nRESTRICT_SYSLOG = \"0\"\nRESTRICT_SYSLOG_GROUP = \"mysyslog\"\nRESTRICT_UI = \"1\"\nAUTO_UPDATES = \"1\"\nLF_SPI = \"1\"\nTCP_IN = \"20,21,22,25,53,853,80,110,143,443,465,587,993,995,5000\"\nTCP_OUT = \"20,21,22,25,53,853,80,110,113,443,587,993,995\"\nUDP_IN = \"20,21,53,853,80,443\"\nUDP_OUT = \"20,21,53,853,113,123\"\nICMP_IN = \"1\"\nICMP_IN_RATE = \"1/s\"\nICMP_OUT = \"1\"\nICMP_OUT_RATE = \"0\"\nICMP_TIMESTAMPDROP = \"0\"\nIPV6 = \"1\"\nIPV6_ICMP_STRICT = \"0\"\nIPV6_SPI = \"1\"\nTCP6_IN = \"20,21,22,25,53,853,80,110,143,443,465,587,993,995,5000\"\nTCP6_OUT = \"20,21,22,25,53,853,80,110,113,443,587,993,995\"\nUDP6_IN = \"20,21,53,853,80,443\"\nUDP6_OUT = \"20,21,53,853,113,123\"\nETH_DEVICE = \"\"\nETH6_DEVICE = \"\"\nETH_DEVICE_SKIP = \"\"\nUSE_CONNTRACK = \"1\"\nUSE_FTPHELPER = \"0\"\nSYSLOG_CHECK = \"0\"\nIGNORE_ALLOW = \"0\"\nDNS_STRICT = \"0\"\nDNS_STRICT_NS = \"0\"\nDENY_IP_LIMIT = \"200\"\nDENY_TEMP_IP_LIMIT = \"100\"\nLF_DAEMON = \"1\"\nLF_CSF = \"1\"\nFASTSTART = \"1\"\nLF_IPSET = \"0\"\nWAITLOCK = \"1\"\nWAITLOCK_TIMEOUT = \"300\"\nLF_IPSET_HASHSIZE = \"1024\"\nLF_IPSET_MAXELEM = \"65536\"\nLFDSTART = \"0\"\nVERBOSE = \"1\"\nPACKET_FILTER = \"1\"\nLF_LOOKUPS = \"1\"\nSTYLE_CUSTOM = \"0\"\nSTYLE_MOBILE = \"1\"\nSMTP_BLOCK = \"0\"\nSMTP_ALLOWLOCAL = \"1\"\nSMTP_REDIRECT = \"0\"\nSMTP_PORTS = \"25,465,587\"\nSMTP_ALLOWUSER = \"\"\nSMTP_ALLOWGROUP = \"mail,mailman\"\nSMTPAUTH_RESTRICT = \"0\"\nSYNFLOOD = \"0\"\nSYNFLOOD_RATE = \"100/s\"\nSYNFLOOD_BURST = \"150\"\nCONNLIMIT = \"\"\nPORTFLOOD = \"\"\nUDPFLOOD = \"0\"\nUDPFLOOD_LIMIT = \"100/s\"\nUDPFLOOD_BURST = \"500\"\nUDPFLOOD_ALLOWUSER = \"named\"\nSYSLOG = \"0\"\nDROP = \"DROP\"\nDROP_OUT = \"REJECT\"\nDROP_LOGGING = \"1\"\nDROP_IP_LOGGING = \"0\"\nDROP_OUT_LOGGING = \"1\"\nDROP_UID_LOGGING = \"1\"\nDROP_ONLYRES = \"0\"\nDROP_NOLOG = \"23,67,68,111,113,135:139,445,500,513,520\"\nDROP_PF_LOGGING = \"0\"\nCONNLIMIT_LOGGING = \"0\"\nUDPFLOOD_LOGGING = \"1\"\nLOGFLOOD_ALERT = \"0\"\nLF_ALERT_TO = \"\"\nLF_ALERT_FROM = \"\"\nLF_ALERT_SMTP = \"\"\nBLOCK_REPORT = \"\"\nUNBLOCK_REPORT = \"\"\nX_ARF = \"0\"\nX_ARF_FROM = \"\"\nX_ARF_TO = \"\"\nX_ARF_ABUSE = \"0\"\nLF_PERMBLOCK = \"1\"\nLF_PERMBLOCK_INTERVAL = \"86400\"\nLF_PERMBLOCK_COUNT = \"4\"\nLF_PERMBLOCK_ALERT = \"1\"\nLF_NETBLOCK = \"0\"\nLF_NETBLOCK_INTERVAL = \"86400\"\nLF_NETBLOCK_COUNT = \"4\"\nLF_NETBLOCK_CLASS = \"C\"\nLF_NETBLOCK_ALERT = \"1\"\nLF_NETBLOCK_IPV6 = \"\"\nSAFECHAINUPDATE = \"0\"\nDYNDNS = \"0\"\nDYNDNS_IGNORE = \"0\"\nLF_GLOBAL = \"0\"\nGLOBAL_ALLOW = \"\"\nGLOBAL_DENY = \"\"\nGLOBAL_IGNORE = \"\"\nGLOBAL_DYNDNS = \"\"\nGLOBAL_DYNDNS_INTERVAL = \"600\"\nGLOBAL_DYNDNS_IGNORE = \"0\"\nLF_BOGON_SKIP = \"\"\nURLGET = \"2\"\nURLPROXY = \"\"\nMM_LICENSE_KEY = \"\"\nCC_SRC = \"2\"\nCC_DENY = \"\"\nCC_ALLOW = \"\"\nCC_ALLOW_FILTER = \"\"\nCC_ALLOW_PORTS = \"\"\nCC_ALLOW_PORTS_TCP = \"\"\nCC_ALLOW_PORTS_UDP = \"\"\nCC_DENY_PORTS = \"\"\nCC_DENY_PORTS_TCP = \"\"\nCC_DENY_PORTS_UDP = \"\"\nCC_IGNORE = \"\"\nCC_ALLOW_SMTPAUTH = \"\"\nCC_MESSENGER_ALLOW = \"\"\nCC_MESSENGER_DENY = \"\"\nCC_DROP_CIDR = \"\"\nCC_LOOKUPS = \"1\"\nCC6_LOOKUPS = \"0\"\nCC_INTERVAL = \"14\"\nLF_TRIGGER = \"0\"\nLF_TRIGGER_PERM = \"1\"\nLF_SELECT = \"0\"\nLF_EMAIL_ALERT = \"1\"\nLF_TEMP_EMAIL_ALERT = \"1\"\nLF_SSHD = \"5\"\nLF_SSHD_PERM = \"1\"\nLF_FTPD = \"10\"\nLF_FTPD_PERM = \"1\"\nLF_SMTPAUTH = \"5\"\nLF_SMTPAUTH_PERM = \"1\"\nLF_EXIMSYNTAX = \"10\"\nLF_EXIMSYNTAX_PERM = \"1\"\nLF_POP3D = \"0\"\nLF_POP3D_PERM = \"1\"\nLF_IMAPD = \"0\"\nLF_IMAPD_PERM = \"1\"\nLF_HTACCESS = \"5\"\nLF_HTACCESS_PERM = \"1\"\nLF_MODSEC = \"5\"\nLF_MODSEC_PERM = \"1\"\nLF_BIND = \"0\"\nLF_BIND_PERM = \"1\"\nLF_SUHOSIN = \"0\"\nLF_SUHOSIN_PERM = \"1\"\nLF_CXS = \"0\"\nLF_CXS_PERM = \"1\"\nLF_QOS = \"0\"\nLF_QOS_PERM = \"1\"\nLF_SYMLINK = \"0\"\nLF_SYMLINK_PERM = \"1\"\nLF_WEBMIN = \"0\"\nLF_WEBMIN_PERM = \"1\"\nLF_SSH_EMAIL_ALERT = \"1\"\nLF_SU_EMAIL_ALERT = \"1\"\nLF_SUDO_EMAIL_ALERT = \"0\"\nLF_WEBMIN_EMAIL_ALERT = \"1\"\nLF_CONSOLE_EMAIL_ALERT = \"1\"\nLF_APACHE_404 = \"0\"\nLF_APACHE_404_PERM = \"3600\"\nLF_APACHE_403 = \"0\"\nLF_APACHE_403_PERM = \"3600\"\nLF_APACHE_401 = \"0\"\nLF_APACHE_ERRPORT = \"0\"\nLF_APACHE_401_PERM = \"3600\"\nLF_MODSECIPDB_ALERT = \"0\"\nLF_MODSECIPDB_FILE = \"/var/run/modsecurity/data/ip.pag\"\nLF_EXPLOIT = \"300\"\nLF_EXPLOIT_IGNORE = \"\"\nLF_INTERVAL = \"3600\"\nLF_PARSE = \"5\"\nLF_FLUSH = \"3600\"\nLF_REPEATBLOCK = \"0\"\nLF_BLOCKINONLY = \"0\"\nCF_ENABLE = \"0\"\nCF_BLOCK = \"block\"\nCF_TEMP = \"3600\"\nLF_DIRWATCH = \"300\"\nLF_DIRWATCH_DISABLE = \"0\"\nLF_DIRWATCH_FILE = \"0\"\nLF_INTEGRITY = \"3600\"\nLF_DISTATTACK = \"0\"\nLF_DISTATTACK_UNIQ = \"2\"\nLF_DISTFTP = \"0\"\nLF_DISTFTP_UNIQ = \"3\"\nLF_DISTFTP_PERM = \"1\"\nLF_DISTFTP_ALERT = \"1\"\nLF_DISTSMTP = \"0\"\nLF_DISTSMTP_UNIQ = \"3\"\nLF_DISTSMTP_PERM = \"1\"\nLF_DISTSMTP_ALERT = \"1\"\nLF_DIST_INTERVAL = \"300\"\nLF_DIST_ACTION = \"\"\nLT_POP3D = \"0\"\nLT_IMAPD = \"0\"\nLT_EMAIL_ALERT = \"1\"\nLT_SKIPPERMBLOCK = \"0\"\nCT_LIMIT = \"0\"\nCT_INTERVAL = \"30\"\nCT_EMAIL_ALERT = \"1\"\nCT_PERMANENT = \"0\"\nCT_BLOCK_TIME = \"1800\"\nCT_SKIP_TIME_WAIT = \"0\"\nCT_STATES = \"\"\nCT_PORTS = \"\"\nCT_SUBNET_LIMIT = \"0\"\nPT_LIMIT = \"60\"\nPT_INTERVAL = \"60\"\nPT_SKIP_HTTP = \"0\"\nPT_DELETED = \"0\"\nPT_DELETED_ACTION = \"\"\nPT_USERPROC = \"10\"\nPT_USERMEM = \"512\"\nPT_USERRSS = \"256\"\nPT_USERTIME = \"1800\"\nPT_USERKILL = \"0\"\nPT_USERKILL_ALERT = \"1\"\nPT_USER_ACTION = \"\"\nPT_LOAD = \"30\"\nPT_LOAD_AVG = \"5\"\nPT_LOAD_LEVEL = \"6\"\nPT_LOAD_SKIP = \"3600\"\nPT_APACHESTATUS = \"http://127.0.0.1/server-status\"\nPT_LOAD_ACTION = \"\"\nPT_FORKBOMB = \"0\"\nPT_SSHDKILL = \"0\"\nPT_SSHDHUNG = \"0\"\nPS_INTERVAL = \"0\"\nPS_LIMIT = \"10\"\nPS_PORTS = \"0:65535,ICMP\"\nPS_DIVERSITY = \"1\"\nPS_PERMANENT = \"0\"\nPS_BLOCK_TIME = \"3600\"\nPS_EMAIL_ALERT = \"1\"\nUID_INTERVAL = \"0\"\nUID_LIMIT = \"10\"\nUID_PORTS = \"0:65535,ICMP\"\nAT_ALERT = \"2\"\nAT_INTERVAL = \"60\"\nAT_NEW = \"1\"\nAT_OLD = \"1\"\nAT_PASSWD = \"1\"\nAT_UID = \"1\"\nAT_GID = \"1\"\nAT_DIR = \"1\"\nAT_SHELL = \"1\"\nUI = \"1\"\nUI_PORT = \"8546\"\nUI_IP = \"\"\nUI_USER = \"admin\"\nUI_PASS = \"password\"\nUI_TIMEOUT = \"300\"\nUI_CHILDREN = \"5\"\nUI_RETRY = \"5\"\nUI_BAN = \"1\"\nUI_ALLOW = \"1\"\nUI_BLOCK = \"1\"\nUI_ALERT = \"4\"\nUI_CIPHER = \"ALL:!ADH:RC4+RSA:+HIGH:+MEDIUM:-LOW:-SSLv2:-EXP:!kEDH\"\nUI_SSL_VERSION = \"SSLv23:!SSLv3:!SSLv2\"\nUI_CXS = \"0\"\nUI_CSE = \"0\"\nMESSENGER = \"0\"\nMESSENGER_TEMP = \"1\"\nMESSENGER_PERM = \"1\"\nMESSENGER_USER = \"csf\"\nMESSENGER_HTTPS_CONF = \"/etc/httpd/conf.d/ssl.conf\"\nMESSENGER_HTTPS_KEY = \"/etc/pki/tls/private/localhost.key\"\nMESSENGER_HTTPS_CRT = \"/etc/pki/tls/certs/localhost.crt\"\nMESSENGER_HTTPS = \"8887\"\nMESSENGER_HTTPS_IN = \"443\"\nMESSENGER_HTML = \"8888\"\nMESSENGER_HTML_IN = \"80\"\nMESSENGER_TEXT = \"8889\"\nMESSENGER_TEXT_IN = \"21\"\nMESSENGER_RATE = \"100/s\"\nMESSENGER_BURST = \"150\"\nMESSENGER_CHILDREN = \"20\"\nMESSENGER_HTTPS_SKIPMAIL = \"1\"\nMESSENGERV3 = \"0\"\nMESSENGERV3LOCATION = \"/etc/httpd/conf.d/\"\nMESSENGERV3RESTART = \"service httpd restart\"\nMESSENGERV3TEST = \"/usr/sbin/apachectl -t\"\nMESSENGERV3HTTPS_CONF = \"/etc/httpd/conf/httpd.conf\"\nMESSENGERV3WEBSERVER = \"apache\"\nMESSENGERV3PERMS = \"711\"\nMESSENGERV3GROUP = \"apache\"\nMESSENGERV3PHPHANDLER = \"\"\nRECAPTCHA_SITEKEY = \"\"\nRECAPTCHA_SECRET = \"\"\nRECAPTCHA_ALERT = \"1\"\nRECAPTCHA_NAT = \"\"\nCLUSTER_SENDTO = \"\"\nCLUSTER_RECVFROM = \"\"\nCLUSTER_MASTER = \"\"\nCLUSTER_NAT = \"\"\nCLUSTER_LOCALADDR = \"\"\nCLUSTER_PORT = \"7777\"\nCLUSTER_KEY = \"\"\nCLUSTER_BLOCK = \"1\"\nCLUSTER_CONFIG = \"0\"\nCLUSTER_CHILDREN = \"10\"\nPORTKNOCKING = \"\"\nPORTKNOCKING_LOG = \"1\"\nPORTKNOCKING_ALERT = \"0\"\nLOGSCANNER = \"0\"\nLOGSCANNER_INTERVAL = \"hourly\"\nLOGSCANNER_STYLE = \"1\"\nLOGSCANNER_EMPTY = \"1\"\nLOGSCANNER_LINES = \"5000\"\nST_ENABLE = \"1\"\nST_IPTABLES = \"100\"\nST_LOOKUP = \"0\"\nST_SYSTEM = \"0\"\nST_SYSTEM_MAXDAYS = \"30\"\nST_MYSQL = \"0\"\nST_MYSQL_USER = \"root\"\nST_MYSQL_PASS = \"\"\nST_MYSQL_HOST = \"localhost\"\nST_APACHE = \"0\"\nST_DISKW = \"0\"\nST_DISKW_FREQ = \"5\"\nST_DISKW_DD = \"if=/dev/zero of=/var/lib/csf/dd_test bs=1MB count=64 conv=fdatasync\"\nDOCKER = \"0\"\nDOCKER_DEVICE = \"docker0\"\nDOCKER_NETWORK4 = \"172.17.0.0/16\"\nDOCKER_NETWORK6 = \"2001:db8:1::/64\"\nIPTABLES = \"/sbin/iptables\"\nIPTABLES_SAVE = \"/sbin/iptables-save\"\nIPTABLES_RESTORE = \"/sbin/iptables-restore\"\nIP6TABLES = \"/sbin/ip6tables\"\nIP6TABLES_SAVE = \"/sbin/ip6tables-save\"\nIP6TABLES_RESTORE = \"/sbin/ip6tables-restore\"\nMODPROBE = \"/sbin/modprobe\"\nIFCONFIG = \"/sbin/ifconfig\"\nSENDMAIL = \"/usr/sbin/sendmail\"\nPS = \"/bin/ps\"\nVMSTAT = \"/usr/bin/vmstat\"\nNETSTAT = \"/bin/netstat\"\nLS = \"/bin/ls\"\nMD5SUM = \"/usr/bin/md5sum\"\nTAR = \"/bin/tar\"\nCHATTR = \"/usr/bin/chattr\"\nUNZIP = \"/usr/bin/unzip\"\nGUNZIP = \"/bin/gunzip\"\nDD = \"/bin/dd\"\nTAIL = \"/usr/bin/tail\"\nGREP = \"/bin/grep\"\nZGREP = \"/bin/zgrep\"\nIPSET = \"/sbin/ipset\"\nSYSTEMCTL = \"/bin/systemctl\"\nHOST = \"/usr/bin/host\"\nIP = \"/bin/ip\"\nCURL = \"/usr/bin/curl\"\nWGET = \"/usr/bin/wget\"\nHTACCESS_LOG = \"/var/log/apache2/error.log\"\nMODSEC_LOG = \"/var/log/apache2/error.log\"\nSSHD_LOG = \"/var/log/auth.log\"\nSU_LOG = \"/var/log/messages\"\nSUDO_LOG = \"/var/log/secure\"\nFTPD_LOG = \"/var/log/messages\"\nSMTPAUTH_LOG = \"/var/log/secure\"\nPOP3D_LOG = \"/var/log/mail.log\"\nIMAPD_LOG = \"/var/log/mail.log\"\nIPTABLES_LOG = \"/var/log/messages\"\nSUHOSIN_LOG = \"/var/log/messages\"\nBIND_LOG = \"/var/log/messages\"\nSYSLOG_LOG = \"/var/log/messages\"\nWEBMIN_LOG = \"/var/log/auth.log\"\nCUSTOM1_LOG = \"/var/log/customlog\"\nCUSTOM2_LOG = \"/var/log/customlog\"\nCUSTOM3_LOG = \"/var/log/customlog\"\nCUSTOM4_LOG = \"/var/log/customlog\"\nCUSTOM5_LOG = \"/var/log/customlog\"\nCUSTOM6_LOG = \"/var/log/customlog\"\nCUSTOM7_LOG = \"/var/log/customlog\"\nCUSTOM8_LOG = \"/var/log/customlog\"\nCUSTOM9_LOG = \"/var/log/customlog\"\nPORTS_pop3d = \"110,995\"\nPORTS_imapd = \"143,993\"\nPORTS_htpasswd = \"80,443\"\nPORTS_mod_security = \"80,443\"\nPORTS_mod_qos = \"80,443\"\nPORTS_symlink = \"80,443\"\nPORTS_suhosin = \"80,443\"\nPORTS_cxs = \"80,443\"\nPORTS_bind = \"53;udp,53;tcp\"\nPORTS_ftpd = \"20,21\"\nPORTS_webmin = \"10000\"\nPORTS_smtpauth = \"25,465,587\"\nPORTS_eximsyntax = \"25,465,587\"\nPORTS_sshd = \"22\"\nGENERIC = \"1\"\nDEBUG = \"0\"\n</code></pre> <p></p> <p></p>", "tags": ["cheatsheet", "configure", "configs", "resource"]}, {"location": "usage/cheatsheet/home/", "title": "Cheatsheet \u203a Home", "text": "", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/home/#cheatsheet-home", "title": "Cheatsheet \u203a Home", "text": "<p>Our Cheatsheet provides a quick reference for ConfigServer Firewall &amp; Security (CSF).  This section includes:</p> <ul> <li>The key files that make up CSF, and a description of their purpose</li> <li>An overview of commands you can run to manage your firewall  </li> </ul>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/structure/", "title": "Cheatsheet \u203a Structure", "text": "", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/structure/#cheatsheet-structure", "title": "Cheatsheet: Structure", "text": "<p>This page provides a summary of the files and folders associated with ConfigServer Firewall &amp; Security (CSF). Use it as a reference to locate and edit specific configuration files or resources.</p> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/structure/#directory-structure", "title": "\ud83d\udcc1 Directory Structure", "text": "<p>Directories associated with ConfigServer Filewall which house all of the files used to configure and manage CSF.</p> Folder Description <code>/etc/csf/</code> CSF configuration files, blocklists, whitelists, etc <code>/var/lib/csf/</code> Runtime data, temporary files, and logs for CSF and LFD <code>/var/lib/csf/ui</code> Runtime data and cache for the CSF WebUI. <code>/usr/local/csf/bin/</code> Pre &amp; post initialzation scripts <code>csfpre.sh</code> and <code>csfpost.sh</code>, test script <code>csftest.pl</code>, and csf uninstaller <code>uninstall.sh</code> <code>/usr/local/csf/lib/</code> Perl modules and static data <code>/usr/local/csf/profiles/</code> Pre-configured CSF setup profiles <code>/usr/local/csf/tpl/</code> Email alert templates <code>/usr/local/include/csf/pre.d/</code> Scripts to execute when CSF started. Runs before CSF configures iptables. These are triggered by <code>/usr/local/csf/bin/csfpre.sh</code> <code>/usr/local/include/csf/post.d/</code> Scripts to execute when CSF started. Runs after CSF configures iptables. These are triggered by <code>/usr/local/csf/bin/csfpost.sh</code> <p></p> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/structure/#file-structure", "title": "\ud83d\udcc4 File Structure", "text": "<p>Files associated with ConfigServer Firewall configuration and management.</p> File Description <code>/etc/csf/changelog.txt</code> List of changes made to each release of CSF / LFD <code>/etc/csf/csf.allow</code> List of IP's &amp; CIDR addresses allowed through the firewall <code>/etc/csf/csf.blocklists</code> URLs for external blocklists used by CSF to block malicious IPs <code>/etc/csf/csf.cloudflare</code> Contains configuration elements for the <code>CF_ENABLE</code> CloudFlare feature <code>/etc/csf/csf.conf</code> Main configuration file <code>/etc/csf/csf.deny</code> IP's and CIDR addresses that should never be allowed through the firewall <code>/etc/csf/csf.dirwatch</code> Directories &amp; files you want to be alerted when changed. Must specify full paths for entries <code>/etc/csf/csf.dyndns</code> IPs &amp; hostnames of systems that are dynamically updated (like via a dynamic DNS service) <code>/etc/csf/csf.fignore</code> Files that lfd directory watching will ignore. You must specify the full path to the file <code>/etc/csf/csf.ignore</code> IP's &amp; CIDR addresses that the login failure daemon should ignore and not not block if detected <code>/etc/csf/csf.logfiles</code> Log files for the <code>LOGSCANNER</code> feature <code>/etc/csf/csf.logignore</code> Regular expressions for the <code>LOGSCANNER</code> feature. If a line matches it will be ignored, otherwise it will be reported <code>/etc/csf/csf.mignore</code> Usernames and local IP addresses that <code>RT_LOCALRELAY_ALERT</code> will ignore <code>/etc/csf/csf.pignore</code> Processes LFD should ignore (for example, trusted services). <code>/etc/csf/csf.rblconf</code> Optional entries for the IP checking against RBLs within csf <code>/etc/csf/csf.redirect</code> Port and/or IP address assignments to direct traffic to alternative ports/IP addresses <code>/etc/csf/csf.resellers</code> Reseller accounts to allow access to limited csf functionality. <code>/etc/csf/csf.rignore</code> Domains &amp; partial domain that lfd process tracking will ignore based on reverse &amp; forward DNS lookups <code>/etc/csf/csf.signore</code> Files that <code>LF_SCRIPT_ALERT</code> will ignore. Specify the full path to the directory containing the script <code>/etc/csf/csf.sips</code> List any server configured IP addresses for which you don't want to allow any incoming or outgoing traffic <code>/etc/csf/csf.smtpauth</code> Will allow EXIM to advertise SMTP AUTH. One IP address per line. <code>/etc/csf/csf.suignore</code> Usernames that are ignored during the <code>LF_EXPLOIT</code> SUPERUSER check <code>/etc/csf/csf.syslogs</code> Log files for the UI System Log Watch and Search features. IF they exists they will apear in the drop-down lists <code>/etc/csf/csf.syslogusers</code> Usernames which should be allowed to log via syslog/rsyslog <code>/etc/csf/csf.uidignore</code> User ID's (UID) that are ignored by the User ID Tracking feature <code>/etc/csf/downloadservers</code> Servers that will be pinged to fetch updates for CSF <code>/etc/csf/ui/ui.allow</code> IPs allowed to access the CSF WebUI. IPs in this file bypass CSF's IP restrictions for the web ui <code>/etc/csf/ui/ui.ban</code> IPs that are explicitly denied access to the CSF WebUI <code>/lib/systemd/system/csf.service</code> Service file for csf (Login Failure Daemon) <code>/lib/systemd/system/lfd.service</code> Service file for lfd (ConfigServer Firewall) <code>/usr/local/csf/bin</code> CSF scripts and utilities used to manage firewall rules. <code>/usr/local/csf/uid</code> Scripts and files related to CSF user interface. <code>/var/lib/csf/lfd.log</code> Main LFD log file recording login attempts, blocked IPs, and alerts. <code>/var/lib/csf/lfd.pid</code> PID file for Login Failure Daemon (LFD). <p></p> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/structure/#patcher-files", "title": "Patcher Files", "text": "<p>The following files are associated with the ConfigServer Firewall scripts located in this repo's <code>extras/scripts</code> folder. These scripts add special iptable rules so that CSF can communicate with Docker &amp; OpenVPN.</p> File Description <code>/usr/local/csf/bin/csfpre.sh</code> Patcher pre script. Runs before CSF configures iptables <code>/usr/local/csf/bin/csfpost.sh</code> Patcher post script. Runs after CSF configures iptables <code>/usr/local/include/csf/post.d/docker.sh</code> Docker patch for CSF which adds firewall rules for Docker and CSF <code>/usr/local/include/csf/post.d/openvpn.sh</code> OpenVPN patch for CSF which adds firewall rules for OpenVPN and CSF <p></p> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/troubleshooting/", "title": "Cheatsheet: Troubleshooting", "text": "", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/troubleshooting/#cheatsheet-troubleshooting", "title": "Cheatsheet: Troubleshooting", "text": "<p>The information below is a list of errors you may receive within CSF, and steps on how to correct each issue.</p> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/troubleshooting/#cant-locate-object-method-new-via-package-cryptcbc-at-usrsbincsf-line", "title": "Can't locate object method \"new\" via package \"Crypt::CBC\" at /usr/sbin/csf line ***", "text": "<p>This error occurs when Crypt::CBC cannot be found. It is sometimes seen when executing commands such as <code>sudo csf -cp</code>.</p> <p></p> <p>To correct the issue, open the file <code>/usr/sbin/csf</code> in a text editor.</p> <p>Locate the lines: </p><pre><code>use ConfigServer::Sendmail;\nuse ConfigServer::LookUpIP qw(iplookup);\n</code></pre><p></p> <p>Add a new line with <code>use Crypt::CBC</code> as shown below: </p><pre><code>use ConfigServer::Sendmail;\nuse ConfigServer::LookUpIP qw(iplookup);\nuse Crypt::CBC\n</code></pre><p></p> <p></p> <p>Save the file, and re-execute your previous command which caused the error.</p> <p></p> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/troubleshooting/#csf46313-open3-exec-of-sbinipset-flush-failed-no-such-file-or-directory-at-usrsbincsf-line", "title": "csf[46313]: open3: exec of /sbin/ipset flush failed: No such file or directory at /usr/sbin/csf line ****.", "text": "<p>This error occurs when you are missing the package <code>ipset</code>. Install it with the following commands:</p> <p></p> <p>Debian based systems:</p> <pre><code>sudo apt update\nsudo apt-get install ipset\n</code></pre> <p>Redhat based systems: </p><pre><code>sudo yum check-update\nsudo yum install ipset\n</code></pre><p></p> <p></p> <p></p>", "tags": ["cheatsheet", "configure"]}]}