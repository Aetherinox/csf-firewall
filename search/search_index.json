{"config": {"lang": ["en"], "separator": "[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])", "pipeline": ["stopWordFilter"]}, "docs": [{"location": "", "title": "ConfigServer Firewall", "text": "<p>Welcome to the ConfigServer documentation</p>"}, {"location": "about_patcher/", "title": "How this patcher works", "text": "", "tags": ["info"]}, {"location": "about_patcher/#how-patcher-works", "title": "How Patcher Works", "text": "<p>This section is optional to read. It simply outlines what the patcher does from the time of execution to better explain what will be happening on your systen.</p> <p></p> <ul> <li>Download all the files in the <code>/patch</code> folder to your system.</li> <li>Set the <code>install.sh</code> file to be executable.<ul> <li><code>sudo chmod +x install.sh</code></li> </ul> </li> <li>Run the <code>install.sh</code> script<ul> <li><code>sudo ./install.sh</code></li> <li>The script will first check to see if you have ConfigServer Firewall and all of its prerequisites installed. It will install them if they are not installed. This includes:<ul> <li>ConfigServer Firewall</li> <li>ipset package</li> <li>iptables / ip6tables package</li> </ul> </li> <li>Two new files will be added:<ul> <li><code>/usr/local/csf/bin/csfpre.sh</code></li> <li><code>/usr/local/csf/bin/csfpost.sh</code></li> </ul> </li> <li>The patches will then be moved onto your system in the locations:<ul> <li><code>/usr/local/include/csf/post.d/docker.sh</code></li> <li><code>/usr/local/include/csf/post.d/openvpn.sh</code></li> </ul> </li> <li>The <code>Docker</code> patch will first check to ensure you have the following:<ul> <li>Must have Docker installed</li> <li>This script will NOT install docker. You must do that.</li> <li>Must have a valid docker network adapter named <code>docker*</code> or <code>br-*</code></li> </ul> </li> <li>The <code>OpenVPN</code> patch will first check to ensure you have the following:<ul> <li>Must have OpenVPN Server installed</li> <li>Must have a valid network tunnel named <code>tun*</code> (tun0, tun1, etc)</li> <li>Must have an outside network adapter named either <code>eth*</code> or <code>enp*</code></li> <li>If any of the checks above are not true, OpenVPN patcher will skip</li> <li>You can check your list of network adapters using any of the commands below:<ul> <li><code>ip link show</code></li> <li><code>ifconfig</code></li> </ul> </li> <li>You can check if OpenVPN server is installed by using the commmand:<ul> <li><code>openvpn --version</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> <p></p> <ul> <li>If you attempt to run the <code>install.sh</code> any time after the initial setup:<ul> <li>The script will check if ConfigServer Firewall and all prerequisites are installed.<ul> <li>If they are not installed; they will be installed.</li> <li>If they are already installed; nothing will happen. The script does NOT update your packages. It installs the latest version of each package from the time that you run the script and do not already have ConfigServer Firewall installed.</li> </ul> </li> <li>The script will look at all of the files it added the first time and check the MD5 hash.<ul> <li>If the <code>csfpre</code>, <code>csfpost</code>, or patch files do not exist; they will be re-added to your system.</li> <li>If the patch files are different from the one the patcher comes with, you will be prompted / asked if you wish to overwrite your already installed copy</li> <li>If the patch files are the same as the ones which comes with the patcher; nothing will be done and it will skip that step.</li> </ul> </li> </ul> </li> </ul> <p></p> <p></p>", "tags": ["info"]}, {"location": "home/", "title": "Home", "text": "Main CSF Interface ConfigServer Security &amp; Firewall", "tags": ["home"]}, {"location": "home/#about-us", "title": "About Us", "text": "<p> ConfigServer Security &amp; Firewall (CSF) is a comprehensive security solution for Linux servers that functions as a Stateful Packet Inspection (SPI) firewall and intrusion detection system. </p> <p>Originally released in 2005, CSF acts as a front-end for iptables or nftables, allowing you to configure firewall rules in a way that protects your server from unauthorized access while permitting legitimate traffic. With CSF, you can safely manage access to services such as SSH, FTP, email, and web applications, while minimizing the risk of attacks from malicious IP addresses.</p> <p>Included with CSF is the Login Failure Daemon (LFD), which continuously monitors server authentication logs for signs of brute-force attacks or repeated login failures. When suspicious activity is detected from a particular IP, LFD can automatically block that IP temporarily or indefinitely, preventing further attempts to compromise your server. This automated protection helps reduce the risk of account compromises and ensures that attacks are mitigated without requiring constant manual intervention.</p> <p>Overall, CSF provides a balance of advanced security and ease of use. It gives server administrators a powerful interface for managing firewall rules, monitoring suspicious activity, and protecting servers from both external attacks and internal misconfigurations. By implementing CSF and LFD together, users can enhance their server\u2019s security posture while maintaining the accessibility and functionality needed for everyday operations.</p> <p>To learn more about our software, visit the About page.</p> <p></p> <ul> <li> <p> About</p> <p>Learn more about ConfigServer Firewall and how it can benefit you and your server infrastructure. Read up on our detailed list of features, advantages, and the best ways you can put CSF to work for you.</p> </li> </ul> <p></p> <p></p>", "tags": ["home"]}, {"location": "home/#documentation", "title": "Documentation", "text": "<p>This documentation is designed to guide you through every aspect of using ConfigServer Firewall (CSF) on your server, from installation to advanced configuration. You\u2019ll learn how to integrate CSF with popular tools like Traefik and Authentik, allowing for seamless reverse proxy setups and authentication management. The guide also covers how to configure CSF for the first time, including essential settings that ensure your server is secure out of the box.</p> <p>We will dive into IPSET integration, explaining how to leverage kernel-managed sets to efficiently handle large blocklists. You\u2019ll see how to manage third-party blocklists, which can automatically block known malicious IP addresses and ranges, helping you maintain a strong security posture with minimal manual effort.</p> <p>Additionally, the documentation explores custom scripts and patches that extend CSF\u2019s functionality. These scripts allow you to pre-configure iptable rules for common services like Docker and OpenVPN, providing an easy way to secure your server without needing to manually write complex firewall rules. By the end of this guide, you\u2019ll have a thorough understanding of CSF\u2019s capabilities and how to customize it for your server\u2019s specific needs.</p> <p> </p>", "tags": ["home"]}, {"location": "services/", "title": "Services", "text": "", "tags": ["services", "blocklist.configserver.dev", "download.configserver.dev", "get.configserver.dev"]}, {"location": "services/#services", "title": "Services", "text": "<p>This page outlines the services offered through CSF.  </p> <p>These services are designed to make it easier to access, install, and manage CSF while maintaining consistency and reliability across different environments.  </p> <ul> <li> Blocklist Service Delivers curated and trusted blocklists in a consistent format, making it easy to integrate with security tools and workflows for reducing unwanted or malicious traffic.   </li> <li> Download Service Provides direct access to the latest CSF release in <code>.zip</code> or <code>.tgz</code> format, with options for standardized filenames, preserved release names, or programmatic access through a JSON API.   </li> <li> Get Service Offers a convenient Bash-based installer that can download, extract, and install CSF in a single step, with additional options for dry runs, cleanup, and installation from existing local files.   </li> </ul> <p>Together, these services provide a streamlined way to keep CSF installations up to date and enhance server security with minimal effort.</p> <p></p> <p></p>", "tags": ["services", "blocklist.configserver.dev", "download.configserver.dev", "get.configserver.dev"]}, {"location": "services/#blocklistconfigserverdev", "title": "blocklist.configserver.dev", "text": "<p>View Docs</p> <p></p> <p>The blocklist.configserver.dev service provides a streamlined way to access and use curated blocklists designed to enhance security and reduce unwanted traffic. It acts as a lightweight proxy that surfaces blocklists from trusted sources in a consistent, easy-to-use format, making it simple to integrate into existing security tools and workflows.</p> <p>By centralizing access, the service eliminates the complexity of pulling blocklists from multiple vendors, ensuring faster updates and more reliable availability. It can be used alongside other security measures to strengthen protection against abusive IPs, malicious actors, and other unwanted traffic sources.</p> <p></p> <p></p>", "tags": ["services", "blocklist.configserver.dev", "download.configserver.dev", "get.configserver.dev"]}, {"location": "services/#downloadconfigserverdev", "title": "download.configserver.dev", "text": "<p>View Docs</p> <p></p> <p>The download.configserver.dev service provides a simple and reliable way to obtain the latest release of CSF without needing to track version numbers or manually check for updates. Users can fetch the most up-to-date package directly through a browser or from the command line, ensuring they always have access to the newest version in either .zip or .tgz format. By standardizing filenames to csf.zip or csf.tgz, the service also makes it easier to integrate into scripts and automated workflows.</p> <p>In addition to basic downloads, the service offers advanced features for users who need more flexibility. Options include preserving original release filenames, querying a JSON API to programmatically fetch the latest version, and retrieving direct download links. These features make the service not only a convenient tool for individuals but also a powerful resource for system administrators and developers who need to keep CSF deployments consistent and up to date.</p> <p></p> <p></p>", "tags": ["services", "blocklist.configserver.dev", "download.configserver.dev", "get.configserver.dev"]}, {"location": "services/#getconfigserverdev", "title": "get.configserver.dev", "text": "<p>View Docs</p> <p></p> <p>The get.configserver.dev service offers a quick and flexible way to download and install the latest version of CSF using a single Bash command. Instead of manually fetching and managing release files, the service handles everything automatically\u2014placing the newest archive in your current directory with the correct format (.zip or .tgz). This makes it especially useful for users who want a no-fuss method of obtaining CSF without needing to check for version numbers or file names.</p> <p>Beyond simple downloads, the service provides optional arguments that extend its functionality. Users can choose to automatically extract the archive, install CSF immediately, or preserve the original release filename. It also supports dry-run installs and cleanup options, giving administrators fine-grained control over how CSF is managed on their systems. In short, the get service is designed to simplify installation and updates, whether for quick testing or production use.</p> <p> </p>", "tags": ["services", "blocklist.configserver.dev", "download.configserver.dev", "get.configserver.dev"]}, {"location": "about/backers/", "title": "Backers", "text": ""}, {"location": "about/changelog/", "title": "Changelog", "text": "", "tags": ["changelog", "releases", "history"]}, {"location": "about/changelog/#changelog", "title": "Changelog", "text": "", "tags": ["changelog", "releases", "history"]}, {"location": "about/changelog/#15.06", "title": "15.06 Oct 16 2025", "text": "<ul> <li><code>fix</code>: Backwards compatibility issue related to older versions of Webmin control panel. Specifically v2.111 and Authentic theme v21.10. Webmin detected as \"Generic\" installation; header icon missing; generic footer loaded.</li> </ul>", "tags": ["changelog", "releases", "history"]}, {"location": "about/changelog/#15.05", "title": "15.05 Oct 16 2025", "text": "<ul> <li><code>fix</code>: Correct HTML escaping in the Firewall Configuration page to ensure settings are processed safely and correctly.</li> <li><code>refactor</code>: Refactored <code>csf.sh</code> init.d script; POSIX compliant.</li> </ul>", "tags": ["changelog", "releases", "history"]}, {"location": "about/changelog/#15.04", "title": "15.04 Oct 15 2025", "text": "<ul> <li><code>feat</code>: Added new setting <code>UI_LOGS_REFRESH_TIME</code><ul> <li>How frequently CSF automatically refreshes the displayed logs</li> </ul> </li> <li><code>feat</code>: Added new setting <code>UI_LOGS_START_PAUSED</code><ul> <li>Define if automatic log refreshing on page load starts off running 0 or paused 1</li> </ul> </li> <li><code>fix</code>: Corrected an issue in the Webmin control panel where the log textbox height was set incorrectly on page load</li> <li><code>docs</code>: Update Webmin installation</li> </ul>", "tags": ["changelog", "releases", "history"]}, {"location": "about/changelog/#15.03", "title": "15.03 Oct 15 2025", "text": "<ul> <li><code>feat</code>: Reduced the minimum font size allowed for FontMinus / FontPlus from 12px to <code>10px</code></li> <li><code>refactor</code>: Rewrote the JavaScript library <code>csfajaxtail.js</code> for improved optimization and maintainability</li> <li><code>fix</code>: Restored missing Module Config and Help buttons in the Webmin header</li> <li><code>docs</code>: Release blogs now support comments integrated from Github</li> </ul>", "tags": ["changelog", "releases", "history"]}, {"location": "about/changelog/#15.02", "title": "15.02 Oct 14 2025", "text": "<ul> <li><code>feat</code>: New login page for Generic installations<ul> <li>Light &amp; Dark theme</li> <li>New csf.conf setting:<ul> <li><code>UI_RETRY_SHOW_REMAINING</code></li> </ul> </li> </ul> </li> <li><code>feat</code>: New footer design for improved consistency and navigation<ul> <li>Added logout button to footer for Generic installations</li> </ul> </li> <li><code>feat</code>: Integrated <code>csfpre.sh</code> and <code>csfpost.sh</code> directly into CSF for native pre/post script support</li> <li><code>feat</code>: Configuration files now include headers visible in the GUI for easier file identification; called with <code>HEADER:</code></li> <li><code>feat</code>: New codename detection helper func for conditional statements depending on the installer used by end-user</li> <li><code>feat</code>: Added an official help page to the download service<ul> <li>https://download.configserver.dev/help</li> </ul> </li> <li><code>feat</code>: Implemented Light/Dark mode toggle in the footer for better theme control</li> <li><code>feat</code>: Added optional <code>Content Security Policy (CSP)</code> protection to web interface<ul> <li>New csf.conf settings:<ul> <li><code>UI_CSP_ENABLED</code></li> <li><code>UI_CSP_ADVANCED_ENABLED</code></li> <li><code>UI_CSP_ADVANCED_RULE</code></li> </ul> </li> </ul> </li> <li><code>style</code>: Rewrote configuration file comments for clarity; now more descriptive, organized, and include practical examples</li> <li><code>refactor</code>: re-write <code>ports-blacklist</code> to be POSIX compliant</li> <li><code>refactor</code>: Download service now fetches version from Github repo; no longer requires manual bumps</li> <li><code>refactor</code>: Overhauled the base <code>install.sh</code> script<ul> <li>Ensured full POSIX compliance</li> <li>Added support for both absolute and relative execution paths</li> <li>Introduced new flags: <code>--dryrun</code>, <code>--detect</code>, <code>--help</code>, <code>--version</code></li> </ul> </li> <li><code>chore</code>: Update CSF SSL certificate and key</li> <li><code>perf</code>: Implement CSS optimization to pre-load required stylesheets</li> <li><code>docs</code>: Completed several pages, including:<ul> <li>Installation instructions for: vestacp, cyberpanel, cpanel, interworx, centos web panel (cwp)</li> <li>Revised package / depenency commands to fix inconsistencies</li> </ul> </li> <li><code>fix</code>: Resolved missing VestaCP header on the <code>/list/csf</code> admin page</li> <li><code>fix</code>: Restored CyberPanel integration functionality</li> <li><code>fix</code>: Resolved regex pattern issues when dealing with strict conditions</li> </ul>", "tags": ["changelog", "releases", "history"]}, {"location": "about/changelog/#15.01", "title": "15.01 Oct 06 2025", "text": "<ul> <li><code>feat</code>: Register new domain https://configserver.dev</li> <li><code>feat</code>: New blocklist service at https://blocklist.configserver.dev</li> <li><code>chore</code>: Bring new update server online at https://download.configserver.dev</li> <li><code>refactor</code>: Changed csf update server code to point to new csf domain</li> <li><code>fix</code>: Invalid sessions still being able to access backend web interface assets</li> </ul>", "tags": ["changelog", "releases", "history"]}, {"location": "about/changelog/#15.00", "title": "15.00 Aug 28 2025", "text": "<ul> <li><code>chore</code>: Download and update servers taken offline</li> <li><code>chore</code>: Disabled automatic updates within csf</li> <li><code>chore</code>: Added country code validation and warning output</li> <li><code>refactor</code>: Updated regex to extract client ip from logs</li> <li><code>docs</code>: Changed license to GPLv3</li> </ul>", "tags": ["changelog", "releases", "history"]}, {"location": "about/changelog/#14.24", "title": "14.24 Aug 02 2025", "text": "<ul> <li><code>fix</code>: regression bug in v14.23 \"Modified UI HTTP header checks to be case agnostic\"</li> </ul>", "tags": ["changelog", "releases", "history"]}, {"location": "about/changelog/#14.23", "title": "14.23 July 21 2025", "text": "<ul> <li><code>change</code>: Modify Apache regex to detect \"remote\" or \"client\" as the IP trigger</li> <li><code>change</code>: Mdified UI HTTP header checks to be case agnostic</li> </ul>", "tags": ["changelog", "releases", "history"]}, {"location": "about/changelog/#14.22", "title": "14.22 Sep 20 2024", "text": "<ul> <li><code>build</code>: Updates ConfigServer Firewall to v14.22</li> <li><code>remove</code>: session IP match check from DA login</li> <li><code>added</code>: example spamassassin temp file regex to csf.fignore for new installations</li> </ul>", "tags": ["changelog", "releases", "history"]}, {"location": "about/changelog/#14.21", "title": "14.21 Aug 30 2024", "text": "<ul> <li><code>change</code>: add header animations, app name returns user home</li> <li><code>change</code>: clicking app logo or name now returns user to home page</li> <li><code>change</code>: add favicon</li> <li><code>change</code>: silence curl in openvpn patch</li> <li><code>change</code>: removal of <code>NETWORK_MANUAL_MODE</code>, <code>NETWORK_ADAPT_NAME</code></li> <li><code>change</code>: new animated checkbox input for firewall profiles</li> <li><code>change</code>: clicking logo in header now re-directs user to home</li> <li><code>change</code>: enhanced login screen animations</li> <li><code>change</code>: enhanced mobile view</li> <li><code>build</code>: update main source release to CSF v14.21</li> <li><code>build</code>: dark theme now compatible with CSF v14.21</li> <li><code>fix</code>: docker inspect error when container has more than one network #1</li> <li><code>fix</code>: extended sized buttons with text cutting off</li> <li><code>docs</code>: removal of manual mode values no longer needed</li> </ul>", "tags": ["changelog", "releases", "history"]}, {"location": "about/changelog/#14.20", "title": "14.20 Aug 28 2024", "text": "<ul> <li><code>feat</code>: add new patch <code>openvpn</code></li> <li><code>feat</code>: add new command-line arguments:<ul> <li>add <code>-d, --dev</code> for advanced logging</li> <li>add <code>-f, --flush</code> to completely remove iptable rules</li> <li>add <code>-r, --report</code> to display dependency stats, app information, etc.</li> <li>add <code>-v, --version</code> to display patcher version</li> </ul> </li> <li><code>feat</code>: added new login page to dark theme</li> <li><code>feat</code>: add dark theme</li> <li><code>feat</code>: add traefik integration</li> <li><code>feat</code>: add authentik integration</li> <li><code>change</code>: docker patch now allows for multiple ip blocks to be whitelisted</li> <li><code>change</code>: optimizations to load order</li> <li><code>change</code>: updated toggle switches for various setting pages</li> <li><code>change</code>: start migration of in-line style properties over to stylesheet</li> <li><code>change</code>: new ruleset for openvpn integration</li> <li><code>change</code>: auto disable csf TESTING mode when patch ran</li> <li><code>change</code>: add <code>-r, --report</code> to display status of dependencies and setup</li> <li><code>refactor</code>: re-write of script</li> <li><code>refactor</code>: merge all scripts into one</li> <li><code>fix</code>: interface bug which existed in light theme which caused certain divs to break</li> <li><code>fix</code>: openvpn ip detection</li> <li><code>fix</code>: issue with manual mode being disabled - #1</li> <li><code>fix</code>: error <code>\"docker network inspect\" requires at least 1 argument.</code> - #1</li> <li><code>fix</code>: error <code>invalid port/service '-j' error</code></li> <li><code>ci</code>: dark theme now included with all releases as .zip</li> <li><code>ci</code>: auto-update /docs/ on push to repo</li> <li><code>ci</code>: add workflow to automatically grab latest version of ConfigServer Firewall and append to each release</li> <li><code>docs</code>: update to include traefik and authentic integration</li> <li><code>docs</code>: rewrite documentation to include better instructions</li> </ul>", "tags": ["changelog", "releases", "history"]}, {"location": "about/changelog/#14.19", "title": "14.19 May 06 2024", "text": "<ul> <li><code>change</code>: switch to using iptables-nft if it exists in <code>/usr/sbin/iptables-nft</code></li> <li><code>added</code>: <code>IO::Handle::clearerr()</code> call before reading data from a log file</li> <li><code>added</code>: \"Require all granted\" to the MESSENGER .htaccess file</li> <li><code>added</code> UID/GID rules to IPv6 if enabled</li> <li><code>modified</code>: dovecot regex to look for \"failed: Connection reset by peer\"</li> </ul>", "tags": ["changelog", "releases", "history"]}, {"location": "about/contributing/", "title": "Contributing to CSF-Firewall", "text": "", "tags": ["info"]}, {"location": "about/contributing/#contributing", "title": "\u267e\ufe0f Contributing \u267e\ufe0f", "text": "", "tags": ["info"]}, {"location": "about/contributing/#about", "title": "About", "text": "<p>Below are a list of ways that you can help contribute to this project, as well as policies and guides that explain how to get started.</p> <p>Please review everything on this page before you submit your contribution.</p> <p></p> <p></p> <ul> <li>About</li> <li>Issues, Bugs, Ideas</li> <li>Contributing</li> <li>Before Submitting Pull Requests</li> <li>Conventional Commit Specification<ul> <li>Types</li> <li>Example 1:</li> <li>Example 2:</li> </ul> </li> <li>Committing</li> <li>Languages<ul> <li>Perl</li> <li>Indentation</li> <li>Line Length</li> <li>Blank Lines</li> <li>Imports</li> <li>Commenting</li> <li>Casing</li> <li>Python</li> <li>Indentation</li> <li>Line Length</li> <li>Blank Lines</li> <li>Imports</li> <li>Commenting</li> <li>Casing</li> <li>NodeJS</li> <li>Prettier</li> <li>ESLint<ul> <li>v9 \\&amp; Newer (Config)</li> <li>v8 \\&amp; Older (Config)</li> </ul> </li> <li>Packages</li> <li>Indentation</li> <li>Style</li> <li>Line Length</li> <li>Commenting</li> <li>Casing</li> </ul> </li> </ul> <p></p> <p></p>", "tags": ["info"]}, {"location": "about/contributing/#issues-bugs-ideas", "title": "Issues, Bugs, Ideas", "text": "<p>Stuff happens, and sometimes as best as we try, there may be issues within this project that we are unaware of. That is the great thing about open-source; anyone can use the program and contribute to making it better.</p> <p></p> <p>If you have found a bug, have an issue, or maybe even a cool idea; you can let us know by submitting it. However, before you submit your new issue, bug report, or feature request; head over to the Issues Section and ensure nobody else has already submitted it.</p> <p></p> <p>Once you are sure that your issue has not already being dealt with; you may submit a new issue at here. You'll be asked to specify exactly what your new submission targets, such as: - Bug report - Feature Suggestion</p> <p></p> <p>When writing a new submission; ensure you fill out any of the questions asked of you. If you do not provide enough information, we cannot help. Be as detailed as possible, and provide any logs or screenshots you may have to help us better understand what you mean. Failure to fill out the submission properly may result in it being closed without a response.</p> <p></p> <p>If you are submitting a bug report:</p> <ul> <li>Explain the issue</li> <li>Describe how you expect for a feature to work, and what you're seeing instead of what you expected.</li> <li>List possible options for a resolution or insight</li> <li>Provide screenshots, logs, or anything else that can visually help track down the issue.</li> </ul> <p></p> <p></p> <p></p> <p><code>^        back to top        ^</code></p> <p></p> <p></p>", "tags": ["info"]}, {"location": "about/contributing/#contributing_1", "title": "Contributing", "text": "<p>If you are looking to contribute to this project by actually submit your own code; please review this section completely. There is important information and policies provided below that you must follow for your pull request to get accepted.</p> <p>The source is here for everyone to collectively share and collaborate on. If you think you have a possible solution to a problem; don't be afraid to get your hands dirty.</p> <p>All contributions are made via pull requests. To create a pull request, you need a GitHub account. If you are unclear on this process, see GitHub's documentation on forking and pull requests. Pull requests should be targeted at the master branch.</p> <p></p>", "tags": ["info"]}, {"location": "about/contributing/#before-submitting-pull-requests", "title": "Before Submitting Pull Requests", "text": "<ul> <li>Follow the repository's code formatting conventions (see below);</li> <li>Include tests that prove that the change works as intended and does not add regressions;</li> <li>Document the changes in the code and/or the project's documentation;</li> <li>Your PR must pass the CI pipeline;</li> <li>When submitting your Pull Request, use one of the following branches:</li> <li>For bug fixes: <code>main</code> branch</li> <li>For features &amp; functionality: <code>development</code> branch</li> <li>Include a proper git commit message following the Conventional Commit Specification.</li> </ul> <p>If you have completed the above tasks, the pull request is ready to be reviewed and your pull request's label will be changed to \"Ready for Review\". At this point, a human will need to step in and manually verify your submission.</p> <p>Reviewers will approve the pull request once they are satisfied with the patch it will be merged.</p> <p></p>", "tags": ["info"]}, {"location": "about/contributing/#conventional-commit-specification", "title": "Conventional Commit Specification", "text": "<p>When committing your changes, we require you to follow the Conventional Commit Specification. The Conventional Commits is a specification for the format and content of a commit message. The concept behind Conventional Commits is to provide a rich commit history that can be read and understood by both humans and automated tools. Conventional Commits have the following format:</p> <p></p> <pre><code>&lt;type&gt;[(optional &lt;scope&gt;)]: &lt;description&gt;\n\n[optional &lt;body&gt;]\n\n[optional &lt;footer(s)&gt;]\n</code></pre> <p></p>", "tags": ["info"]}, {"location": "about/contributing/#types", "title": "Types", "text": "<p>Our repositories make use of the following commit tags:</p> <p></p> Type Description <code>feat</code> Introduce new feature <code>fix</code> Bug fix <code>chore</code> Includes technical or preventative maintenance task that is necessary for managing the app or repo, such as updating grunt tasks, but is not tied to any specific feature. Usually done for maintenance purposes.E.g: Edit .gitignore, .prettierrc, .prettierignore, .gitignore, eslint.config.js file <code>revert</code> Revert a previous commit <code>style</code> Update / reformat style of source code. Does not change the way app is implemented. Changes that do not affect the meaning of the codeE.g: white-space, formatting, missing semi-colons, change tabs to spaces, etc) <code>docs</code> Change website or markdown documents. Does not mean changes to the documentation generator script itself, only the documents created from the generator. E.g: documentation, readme.md or markdown <code>build</code> Changes to the build / compilation / packaging process or auxiliary tools such as doc generationE.g: create new build tasks, update release script, etc. <code>refactor</code> Change to production code that leads to no behavior difference,E.g: split files, rename variables, rename package, improve code style, etc. <code>test</code> Add or refactor tests, no production code change. Changes the suite of automated tests for the app. <code>ci</code> Changes related to Continuous Integration (usually <code>yml</code> and other configuration files). <code>perf</code> Performance improvement of algorithms or execution time of the app. Does not change an existing feature. <p></p>", "tags": ["info"]}, {"location": "about/contributing/#example-1", "title": "Example 1:", "text": "<pre><code>feat(core): bug affecting menu [#22]\n^\u2500\u2500\u2500^\u2500\u2500\u2500\u2500^  ^\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500^  ^\u2500\u2500\u2500^\n|   |       |                  |\n|   |       |                  \u2514\u2500\u2af8 (ISSUE):   Reference issue ID\n\u2502   \u2502       \u2502\n\u2502   \u2502       \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2af8 (DESC):   Summary in present tense. Use lower case not title case!\n\u2502   \u2502\n\u2502   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2af8 (SCOPE):  The package(s) that this change affects\n\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2af8 (TYPE):   See list above\n</code></pre>", "tags": ["info"]}, {"location": "about/contributing/#example-2", "title": "Example 2:", "text": "<pre><code>&lt;type&gt;(&lt;scope&gt;): &lt;short summary&gt; [issue]\n  |       |             |           |\n  |       |             |           \u2514\u2500\u2af8 Reference issue id (optional)\n  \u2502       \u2502             \u2502\n  \u2502       \u2502             \u2514\u2500\u2af8 Summary in present tense. Not capitalized. No period at the end.\n  \u2502       \u2502\n  \u2502       \u2514\u2500\u2af8 Commit Scope: animations|bazel|benchpress|common|compiler|compiler-cli|core|\n  \u2502                          elements|forms|http|language-service|localize|platform-browser|\n  \u2502                          platform-browser-dynamic|platform-server|router|service-worker|\n  \u2502                          upgrade|zone.js|packaging|changelog|docs-infra|migrations|ngcc|ve|\n  \u2502                          devtools....\n  \u2502\n  \u2514\u2500\u2af8 Commit Type: build|ci|doc|docs|feat|fix|perf|refactor|test\n                    website|chore|style|type|revert|deprecate\n</code></pre>", "tags": ["info"]}, {"location": "about/contributing/#committing", "title": "Committing", "text": "<p>If you are pushing a commit which addresses a submitted issue, reference your issue at the end of the commit message. You may also optionally add the major issue to the end of your commit body.</p> <p>References should be on their own line, following the word <code>Ref</code> or <code>Refs</code></p> <pre><code>Title:          fix(core): fix error message displayed to users. [#22]\nDescription:    The description of your commit\n\n                Ref: #22, #34, #37\n</code></pre> <p> </p>", "tags": ["info"]}, {"location": "about/contributing/#languages", "title": "Languages", "text": "<p>The formatting of code greatly depends on the language being used for this repository. We provide various different languages below as this guide is utilized across multiple repositories.</p> <ul> <li>Perl</li> <li>Python</li> <li>Javascript / Typescript / NodeJS</li> </ul> <p> </p>", "tags": ["info"]}, {"location": "about/contributing/#perl", "title": "Perl", "text": "<p>The following guidelines apply to any projects written with Perl:</p> <p> </p>", "tags": ["info"]}, {"location": "about/contributing/#indentation", "title": "Indentation", "text": "<p>Use <code>4 spaces</code> per indentation level.</p> <p></p> \u2705 Correct\u274c Incorrect <pre><code>if (scalar(keys %versions) == 0)\n{\n    if ($DEBUG)\n    {\n        dbg(\"=== csget: No version files to fetch \u2014 exiting ===\\n\");\n    }\n\n    my $status_file = \"/var/lib/configserver/last_run_no_versions\";\n    if (!-d \"/var/lib/configserver\")\n    {\n        system(\"mkdir -p /var/lib/configserver\") == 0\n            or die \"Failed to create /var/lib/configserver for status file\";\n    }\n\n    system(\"touch $status_file\") == 0\n        or warn \"Failed to create status file $status_file\";\n\n    exit 0;\n}\n</code></pre> <pre><code>if (scalar(keys %versions) == 0)\n{\n    if ($DEBUG)\n    {\n    dbg(\"=== csget: No version files to fetch \u2014 exiting ===\\n\");\n    }\n\n    my $status_file = \"/var/lib/configserver/last_run_no_versions\";\n    if (!-d \"/var/lib/configserver\")\n    {\n      system(\"mkdir -p /var/lib/configserver\") == 0\n      or die \"Failed to create /var/lib/configserver for status file\";\n    }\n\n    system(\"touch $status_file\") == 0\n    or warn \"Failed to create status file $status_file\";\n\n    exit 0;\n}\n</code></pre> <p> </p>", "tags": ["info"]}, {"location": "about/contributing/#line-length", "title": "Line Length", "text": "<p>Keep the maximum character count to <code>100 characters per line</code>. If you are revising old code which doesn't follow this guideline; please rewrite it to conform.</p> <p></p> \u2705 Correct\u274c Incorrect <pre><code># Each line is under 100 characters\nmy $status_file = \"/var/lib/configserver/last_run_no_versions\";\nsystem(\"mkdir -p /var/lib/configserver\") == 0\n    or die \"Failed to create /var/lib/configserver for status file\";\ndbg(\"=== csget: No version files to fetch \u2014 exiting ===\\n\");\n</code></pre> <pre><code># Lines exceed 100 characters\nmy $status_file = \"/var/lib/configserver/last_run_no_versions\"; \nsystem(\"mkdir -p /var/lib/configserver\") == 0 or die \"Failed to create /var/lib/configserver for status file\"; dbg(\"=== csget: No version files to fetch \u2014 exiting ===\\n\");\n</code></pre> <p> </p>", "tags": ["info"]}, {"location": "about/contributing/#blank-lines", "title": "Blank Lines", "text": "<p>Surround top-level functions and class definitions with a blank line in-between.</p> <p>Method definitions inside a class are surrounded by a single blank line.</p> <p>Extra blank lines may be used (sparingly) to separate groups of functions related to one another. Blank lines may be omitted between a bunch of related one-liners (e.g: set of dummy implementations).</p> <p></p> \u2705 Correct\u274c Incorrect <pre><code># Top-level functions separated by blank lines\n\nsub fetch_versions\n{\n    # fetch versions logic\n    dbg(\"Fetching versions...\\n\");\n}\n\nsub check_versions\n{\n    # check versions logic\n    dbg(\"Checking versions...\\n\");\n}\n\n# Methods inside a package/class with single blank lines in-between\npackage MyClass;\n\nsub new\n{\n    my ($class) = @_;\n    bless {}, $class;\n}\n\nsub run\n{\n    dbg(\"Running...\\n\");\n}\n\nsub stop\n{\n    dbg(\"Stopping...\\n\");\n}\n</code></pre> <pre><code># Top-level functions crammed together\nsub fetch_versions\n{\n    dbg(\"Fetching versions...\\n\");\n}\nsub check_versions\n{\n    dbg(\"Checking versions...\\n\");\n}\n\n# Methods inside a package/class with no spacing\npackage MyClass;\nsub new\n{\n    my ($class) = @_;\n    bless {}, $class;\n}\nsub run\n{\n    dbg(\"Running...\\n\");\n}\nsub stop\n{\n    dbg(\"Stopping...\\n\");\n}\n</code></pre> <p> </p>", "tags": ["info"]}, {"location": "about/contributing/#imports", "title": "Imports", "text": "<p>When importing modules using <code>use</code> and <code>require</code>, try to observe the following:</p> <ul> <li>No namespace polluting, only include what you need</li> <li>Use <code>require</code> for modules that are needed conditionally at runtime.</li> <li>Prefer <code>use</code> for compile-time imports when possible, often safter and catches errors early.</li> <li>Keep imports at the top of the file for clarity.</li> <li>Use fully qualified names when you don\u2019t need to import symbols.</li> <li>Group related imports together and separate core, CPAN, and local modules for readability.</li> <li>Avoid importing entire modules with use Module; unless you truly need everything.</li> <li>Document any unusual or non-standard imports so readers understand why they are used.</li> </ul> <p></p> \u2705 Correct\u274c Incorrect <pre><code># Only import what is needed, keep imports organized\nuse strict;\nuse warnings;\nuse File::Path qw(make_path);   # Only import make_path function\nuse List::Util qw(sum max);     # Only import specific functions\n\n# Local module import with fully qualified usage\nuse My::Utils;                  # We'll call functions as My::Utils::function()\n</code></pre> <pre><code># Polluting namespace by importing everything\nuse File::Path;                 # Imports all functions, even if not used\nuse List::Util;                 # Imports all functions unnecessarily\n\n# Mixing local and CPAN imports randomly in middle of code\nrequire My::Utils;              # Not at top of file\nmy $result = My::Utils::calculate(); \n</code></pre> <p> </p>", "tags": ["info"]}, {"location": "about/contributing/#commenting", "title": "Commenting", "text": "<p>Comment your code. It helps novice readers to better understand the process. It doesn't have to be painfully obvious explanations, but it helps to give an idea of what something does. Explanations should be quick and to the point.</p> <p>Do not include comments above functions that basically say the name of the function all over again.</p> <p>Please append <code>#</code> to the beginning of each line.</p> <p></p> \u2705 Correct\u274c Incorrect <pre><code># #\n#   Daemonize / fork the script when not in debug mode\n#       sudo perl -w /etc/cron.daily/csget --nosleep\n#       sudo perl -d /etc/cron.daily/csget\n#   \n#   - Forks the process: parent exits, freeing the terminal or cron\n#   - Child process continues running in the background\n#   - Changes working directory to root to avoid locking any directory\n#   - Closes standard filehandles (STDIN, STDOUT, STDERR) for background operation\n#   - Redirects STDIN from /dev/null\n#   - Redirects STDOUT and STDERR to the daemon log file\n#   - Ensures that all output/errors from the daemon are captured in the log\n# #\n\nunless ($DEBUG)\n{\n    if (my $pid = fork) { exit 0; }         # parent\n    elsif (defined($pid)) { $pid = $$; }    # child\n    else { die \"Unable to fork: $!\"; }      # cannot fork\n\n    chdir(\"/\");\n    close(STDIN);\n    close(STDOUT);\n    close(STDERR);\n    open(STDIN,  \"&lt;\", \"/dev/null\");\n    open(STDOUT, \"&gt;&gt;\", \"$log_daemon\")\n        or die \"Cannot open STDOUT log: $!\";\n    open(STDERR, \"&gt;&gt;\", \"$log_daemon\")\n        or die \"Cannot open STDERR log: $!\";\n}\n</code></pre> <pre><code># #\n#   does not run in debug mode\n# #\n\nunless ($DEBUG)\n{\n    if (my $pid = fork) { exit 0; }\n    elsif (defined($pid)) { $pid = $$; }\n    else { die \"Unable to fork: $!\"; }\n\n    chdir(\"/\");\n    close(STDIN);\n    close(STDOUT);\n    close(STDERR);\n    open(STDIN,  \"&lt;\", \"/dev/null\");\n    open(STDOUT, \"&gt;&gt;\", \"$log_daemon\")\n        or die \"Cannot open STDOUT log: $!\";\n    open(STDERR, \"&gt;&gt;\", \"$log_daemon\")\n        or die \"Cannot open STDERR log: $!\";\n}\n</code></pre> <p></p> <p>Just repeating the information over again:</p> <pre><code># #\n#   calculates numbers\n# #\n\nsub calculate_sum\n{\n    my ($a, $b) = @_;\n    return $a + $b;\n}\n</code></pre> <p> </p>", "tags": ["info"]}, {"location": "about/contributing/#casing", "title": "Casing", "text": "<ul> <li>Use <code>camelCase</code> for variable and object names<ul> <li>e.g: userName, totalCount</li> </ul> </li> <li>Functions should start with an uppercase letter (PascalCase) if following project convention<ul> <li>e.g: CalculateSum()</li> </ul> </li> <li>Enums and constants should be capitalized or use ALL_CAPS<ul> <li>e.g: STATUS_ACTIVE, ColorRed</li> </ul> </li> <li>When reviewing code, if you encounter names that do not follow this convention, update them in your pull request to maintain consistency.</li> </ul> \u2705 Correct\u274c Incorrect <pre><code>my $userName = \"Aetherinox\";        # camelCase variable\nmy $totalCount = 42;                # camelCase variable\n\nsub CalculateSum                    # Function starts with uppercase\n{\n    my ($a, $b) = @_;\n    return $a + $b;\n}\n\nuse constant STATUS_ACTIVE =&gt; 1;    # Enum/constant capitalized\n</code></pre> <pre><code>my $User_name = \"Aetherinox\";       # Underscores + incorrect capitalization\nmy $totalcount = 42;                # Missing camelCase\n\nsub calculate_sum                   # Function starts with lowercase\n{\n    my ($a, $b) = @_;\n    return $a + $b;\n}\n\nuse constant status_active =&gt; 1;    # Enum/constant not capitalized\n</code></pre>", "tags": ["info"]}, {"location": "about/contributing/#python", "title": "Python", "text": "<p>The following guidelines apply to any projects written with Python:</p> <p></p>", "tags": ["info"]}, {"location": "about/contributing/#indentation_1", "title": "Indentation", "text": "<p>Use <code>4 spaces</code> per indentation level.</p> <p></p> \u2705 Correct\u274c Incorrect <pre><code>def Encrypt( key : int, bytestr : bytes ):\n    res = b''\n    i_blk, left_bytes = divmod( len(bytestr), 3 )\n</code></pre> <pre><code>def Encrypt( key : int, bytestr : bytes ):\nres = b''\ni_blk, left_bytes = divmod( len(bytestr), 3 )\n</code></pre> <p></p>", "tags": ["info"]}, {"location": "about/contributing/#line-length_1", "title": "Line Length", "text": "<p>Keep the maximum character count to <code>100 characters per line</code>. If you are revising old code which doesn't follow this guideline; please rewrite it to conform.</p> <p></p> \u2705 Correct\u274c Incorrect <pre><code>import requests\n\n# Long URL split across multiple lines using parentheses\ndef fetch_user_data(user_id: str) -&gt; dict:\n    response = requests.get(\n        f\"https://api.example.com/users/{user_id}/details?\"\n        f\"include=posts,comments,likes,shares\"\n    )\n    return response.json()\n\n# Using backslash for line continuation (less preferred, usually for long strings)\ndef build_command() -&gt; str:\n    long_command = \"python script.py --option1 value1 --option2 value2 --option3 value3 \" \\\n                  \"--option4 value4 --option5 value5\"\n    return long_command\n</code></pre> <pre><code>import requests\n\n# URL is way too long on a single line, exceeds 100 characters\ndef fetch_user_data(user_id: str) -&gt; dict:\n    response = requests.get(f\"https://api.example.com/users/{user_id}/details?include=posts,comments,likes,shares\")\n    return response.json()\n\n# Long shell command all in one line, very hard to read\ndef build_command() -&gt; str:\n    long_command = \"python script.py --option1 value1 --option2 value2 --option3 value3 --option4 value4 --option5 value5\"\n    return long_command\n</code></pre> <p> </p>", "tags": ["info"]}, {"location": "about/contributing/#blank-lines_1", "title": "Blank Lines", "text": "<p>Surround top-level functions and class definitions with a blank line in-between.</p> <p>Method definitions inside a class are surrounded by a single blank line.</p> <p>Extra blank lines may be used (sparingly) to separate groups of functions related to one another. Blank lines may be omitted between a bunch of related one-liners (e.g: set of dummy implementations).</p> <p></p> \u2705 Correct\u274c Incorrect <pre><code># #\n#   Top-level function with a blank line before and after\n# #\n\ndef initialize_server():\n    print(\"Server initialized\")\n\n\ndef shutdown_server():\n    print(\"Server shutdown\")\n\n\nclass ServerManager:\n\n    # #\n    #   Method inside a class separated by a single blank line#\n    # #\n\n    def start(self):\n        print(\"Starting server\")\n\n    def stop(self):\n        print(\"Stopping server\")\n</code></pre> <pre><code>def initialize_server():\n    print(\"Server initialized\")\ndef shutdown_server():\n    print(\"Server shutdown\")\nclass ServerManager:\n    def start(self):\n        print(\"Starting server\")\n    def stop(self):\n        print(\"Stopping server\")\n</code></pre> <p> </p>", "tags": ["info"]}, {"location": "about/contributing/#imports_1", "title": "Imports", "text": "<p>Imports should usually be on separate lines:</p> <p></p> \u2705 Correct\u274c Incorrect <pre><code>import os\nimport sys\n</code></pre> <pre><code>from mypkg import (\n    siblingA,\n    siblingB,\n    siblingC,\n)\n</code></pre> <pre><code>import sys, os\n</code></pre> <pre><code>from mypkg import siblingA\nfrom mypkg import siblingB\nfrom mypkg import siblingC\n</code></pre> <pre><code>from mypkg import siblingA, siblingB, siblingC\n</code></pre> <p></p>", "tags": ["info"]}, {"location": "about/contributing/#commenting_1", "title": "Commenting", "text": "<p>Please follow these guidelines for commenting:</p> <ul> <li>Use comments to explain why something is done, not what is obvious from the code.</li> <li>Keep comments concise and clear.</li> <li>Do not repeat the function name or code in the comment.</li> <li>Block comments should be used to give a brief explanation of something to note as a developer.</li> <li>Docstrings should be used when writing important descriptions, arguments usage, etc.</li> <li>Wrap block comments in <code>#</code>, two on top, two on bottom, one per comment line.</li> </ul> <p></p> \u2705 Correct\u274c Incorrect <pre><code># #\n#   Docstring Example\n# #\n\ndef fetch_user_data(user_id: str) -&gt; dict:\n    \"\"\"\n    Fetches user data from the API.\n\n    Args:\n        user_id (str): The unique identifier for the user.\n\n    Returns:\n        dict: JSON data containing user information such as\n              'name', 'email', 'posts', and 'comments'.\n\n    Raises:\n        requests.RequestException: If the API call fails.\n    \"\"\"\n    import requests\n    response = requests.get(f\"https://api.example.com/users/{user_id}\")\n    response.raise_for_status()\n    return response.json()\n</code></pre> <pre><code>def fetch_user_data(user_id: str) -&gt; dict:\n    \"\"\"Fetch user data\"\"\"\n    import requests\n    response = requests.get(f\"https://api.example.com/users/{user_id}\")\n    return response.json()  # return data\n</code></pre> <p> </p>", "tags": ["info"]}, {"location": "about/contributing/#casing_1", "title": "Casing", "text": "<ul> <li>Stick to <code>camelCase</code>; unless:</li> <li>naming functions, capitalize the first letter</li> <li>Capitalize enums</li> <li>If you see code not conforming with this, please revise it in your pull request.</li> </ul> <p>[!TIP] \u2705 Correct </p><pre><code>def Encrypt( key : int, byteStr : bytes ):\n    res = b''\n    iBlock, leftBytes = divmod( len(byteStr), 3 )\n</code></pre><p></p> <p></p> <p>[!CAUTION] \u274c Wrong </p><pre><code>def encrypt( key : int, bytestr : bytes ):\n    res = b''\n    i_blk, left_bytes = divmod( len(bytestr), 3 )\n</code></pre><p></p> <p></p> <p></p> <p><code>^        back to top        ^</code></p> <p></p> <p></p>", "tags": ["info"]}, {"location": "about/contributing/#nodejs", "title": "NodeJS", "text": "<p>The following allows you to configure ESLint and Prettier.</p> <p> </p>", "tags": ["info"]}, {"location": "about/contributing/#prettier", "title": "Prettier", "text": "<p>We have opted to make use of ESLint over Prettier. We provide a detailed ESLint flag config file with very specific linting rules. Please review that section for more information.</p> <p> </p>", "tags": ["info"]}, {"location": "about/contributing/#eslint", "title": "ESLint", "text": "<p>Within the root folder of the repo, there are several configuration files which you should be using within the project. These files dictate how prettier and eslint will behave and what is acceptable / not acceptable.</p> <p></p> <p>Pick the config file below depending on which version of ESLint you are using. The v8 and older <code>.eslint</code> may not be there if we have migrated over to an Eslint v9 flat config file:</p> <p></p>", "tags": ["info"]}, {"location": "about/contributing/#v9-newer-config", "title": "v9 &amp; Newer (Config)", "text": "<p>Our NodeJS applications require that you utilize ESLint v9 or newer which makes use of a flat config structure. You may find a copy of our flat config at the link below:</p> <ul> <li>\ud83d\udcc4 eslint.config.mjs</li> </ul> <p></p>", "tags": ["info"]}, {"location": "about/contributing/#v8-older-config", "title": "v8 &amp; Older (Config)", "text": "<ul> <li>We no longer utilize any version of ESLint older than version 9.</li> </ul> <p>Note</p> <p>When submitting your pull request, these linting and style rules will be verified with all of your files.  If you did not follow these rules; the linter tests on your pull request will fail; and you'll be expected  to correct these issues before your submission will be transferred over for human review.</p> <p> </p>", "tags": ["info"]}, {"location": "about/contributing/#packages", "title": "Packages", "text": "<p>We use the following packages for linting and prettier.</p> <p></p> Package Repo File Description @stylistic/eslint-plugin-js package.json JavaScript stylistic rules for ESLint, migrated from eslint core. @stylistic/eslint-plugin-ts package.json TypeScript stylistic rules for ESLint, migrated from typescript-eslint. @stylistic/eslint-plugin-plus package.json Supplementary rules introduced by ESLint Stylistic. eslint-plugin-prettier package.json Runs Prettier as an ESLint rule and reports differences as individual ESLint issues. <p></p> <p>You can add the following to your <code>package.json</code> file:</p> <pre><code>    \"devDependencies\": {\n        \"@types/uuid\": \"^10.0.0\",\n        \"all-contributors-cli\": \"^6.26.1\",\n        \"uuid\": \"^11.1.0\",\n        \"env-cmd\": \"^10.1.0\",\n        \"eslint\": \"9.17.0\",\n        \"eslint-plugin-chai-friendly\": \"^1.0.1\",\n        \"eslint-plugin-import\": \"2.31.0\",\n        \"eslint-plugin-n\": \"17.15.0\",\n        \"eslint-plugin-promise\": \"7.2.1\",\n        \"@stylistic/eslint-plugin-js\": \"^3.1.0\"\n    },\n</code></pre> <p> </p>", "tags": ["info"]}, {"location": "about/contributing/#indentation_2", "title": "Indentation", "text": "<p>Use <code>4 spaces</code> per indentation level.</p> <p> </p>", "tags": ["info"]}, {"location": "about/contributing/#style", "title": "Style", "text": "<p>For files that are not controlled by Prettier or ESLint; use <code>Allman Style</code>.  Braces should be on their own lines, and any code inside the braces should be indented 4 spaces.</p> <p></p> <pre><code>return {\n    status: \"failure\",\n    user:\n    {\n        id: \"1aaa35aa-fb3a-62ae-ffec-a14g7fc401ac\",\n        label: \"Test String\",\n    }\n};\n\nwhile (x == y)\n{\n    foo();\n    bar();\n}\n</code></pre> <p> </p>", "tags": ["info"]}, {"location": "about/contributing/#line-length_2", "title": "Line Length", "text": "<p>Keep the maximum character count to <code>100 characters per line</code>. The configs on this page have prettier automatically set up to detect more than 100 characters per line.</p> <p></p>", "tags": ["info"]}, {"location": "about/contributing/#commenting_2", "title": "Commenting", "text": "<p>Comment your code. It helps novice readers to better understand the process. You may use block style commenting, or single lines:</p> <pre><code>/*\n    tests to decide if the end-user is running on Darwin or another platform.\n*/\n\ntest(`Return true if platform is Darwin`, () =&gt;\n{\n    process.platform = 'darwin';\n    expect(bIsDarwin()).toBe(true);\n});\n\ntest(`Return false if platform is not Darwin`, () =&gt;\n{\n    process.platform = 'linux';\n    expect(bIsDarwin()).toBe(false);\n});\n</code></pre> <p></p>", "tags": ["info"]}, {"location": "about/contributing/#casing_2", "title": "Casing", "text": "<p>Stick to <code>camelCase</code> as much as possible. </p> <pre><code>let myVar = 'one';\nlet secondVar = 'two';\n</code></pre> <p></p> <p>If you are defining a new environment variable; it must be in ALL CAPS in the <code>Dockerfile</code>:</p> <pre><code>ENV DIR_BUILD=/usr/src/app\nENV DIR_RUN=/usr/bin/app\nENV URL_REPO=\"https://github.com/Aetherinox/csf-firewall\"\nENV WEB_IP=\"0.0.0.0\"\nENV WEB_PORT=4124\nENV LOG_LEVEL=4\nENV TZ=\"Etc/UTC\"\n</code></pre> <p></p> <p>Then you may call your new environment variable within the Javascript code; and ensure you define a default value to correct any user misconfigurations:</p> <pre><code>const envUrlRepo = process.env.URL_REPO || 'https://github.com/Aetherinox/csf-firewall';\n</code></pre> <p> </p> <p><code>^        back to top        ^</code></p> <p> </p> <p> </p>", "tags": ["info"]}, {"location": "about/conventions/", "title": "Conventions", "text": ""}, {"location": "about/conventions/#conventions", "title": "Conventions", "text": "<p>This documentation use some symbols for illustration purposes. Before you read on, please make sure you've made yourself familiar with the following list of conventions on this page, as they are used quite frequently.</p> <p></p>"}, {"location": "about/conventions/#general-badges", "title": "General Badges", "text": "<p>The badges in this section are for general use.</p> <p></p>"}, {"location": "about/conventions/#flags", "title": "Flags", "text": "Description <p>These icons denote / mark a particular item with a specific category type. Use these to indicate that a feature or service is <code>experimental</code>,  <code>dangerous</code>, <code>setting</code>, or <code>required</code>.</p> <code>Examples</code> <p> Default  <code>&lt;!-- md:flag --&gt;</code></p> <p> Experimental  <code>&lt;!-- md:flag experimental --&gt;</code></p> <p> Required  <code>&lt;!-- md:flag required --&gt;</code></p> <p> Customization  <code>&lt;!-- md:flag customization --&gt;</code></p> <p> Metadata  <code>&lt;!-- md:flag metadata --&gt;</code></p> <p> Dangerous  <code>&lt;!-- md:flag dangerous --&gt;</code></p> <p> Multiple  <code>&lt;!-- md:flag multiple --&gt;</code></p> <p> Setting  <code>&lt;!-- md:flag setting --&gt;</code></p> <p></p>"}, {"location": "about/conventions/#controls", "title": "Controls", "text": "Description <p>These icons deonote what type of control a specified setting uses if the settings are controlled by a graphical user interface.</p> <code>Examples</code> <p> default  <code>&lt;!-- md:control --&gt;</code></p> <p> toggle  <code>&lt;!-- md:control toggle --&gt;</code></p> <p> toggle on  <code>&lt;!-- md:control toggle_on --&gt;</code></p> <p> toggle off  <code>&lt;!-- md:control toggle_off --&gt;</code></p> <p> textbox  <code>&lt;!-- md:control textbox --&gt;</code></p> <p> dropdown  <code>&lt;!-- md:control dropdown --&gt;</code></p> <p> button  <code>&lt;!-- md:control button --&gt;</code></p> <p> slider  <code>&lt;!-- md:control slider --&gt;</code></p> <p> docker volume  <code>&lt;!-- md:control volume --&gt;</code></p> <p> env variable  <code>&lt;!-- md:control env --&gt;</code></p> <p> <code>&lt;!-- md:control color #E5E5E5 #121315 --&gt;</code></p> <p></p>"}, {"location": "about/conventions/#release-types", "title": "Release Type", "text": "Description <p>The tag symbol in conjunction with a version number denotes when a specific feature or functionality was added. Make sure  you're at least on this version if you want to use the specified feature or functionality.</p> <code>Examples</code> <p> default  <code>&lt;!-- md:version --&gt;</code></p> <p> stable  <code>&lt;!-- md:version stable --&gt;</code></p> <p> development  <code>&lt;!-- md:version development --&gt;</code></p> <p>1.6.1 <code>&lt;!-- md:version 1.6.1 --&gt;</code></p> <p>1.6.1 <code>&lt;!-- md:version stable-1.6.1 --&gt;</code></p> <p>1.6.1 <code>&lt;!-- md:version development-1.6.1 --&gt;</code></p> <p></p>"}, {"location": "about/conventions/#default", "title": "Default Value", "text": "Description <p>Denotes what the default value is for a particular setting. If you ever change a setting and wish to revert back to the default value; this is the value you should use.</p> <code>Examples</code> <p> Specified setting has a default value  <code>&lt;!-- md:default --&gt;</code></p> <p> Specified setting has no default value and is empty  <code>&lt;!-- md:default none --&gt;</code></p> <p> Specified setting is automatically computed by the app  <code>&lt;!-- md:default computed --&gt;</code></p> <p><code>false</code> Default value is false  <code>&lt;!-- md:default false --&gt;</code></p> <p></p>"}, {"location": "about/conventions/#command", "title": "Command", "text": "Description <p>Denotes that this item is a command which can be executed via a terminal, command prompt or some other console.</p> <code>Examples</code> <p> Specified setting has a default value  <code>&lt;!-- md:command --&gt;</code></p> <p><code>-s,  --start</code> Specified setting has a default value  <code>&lt;!-- md:command -s, --start --&gt;</code></p> <p></p>"}, {"location": "about/conventions/#3rdparty", "title": "3<sup>rd</sup> Party", "text": "Description <p>Denotes that this item is provided by a 3<sup>rd</sup> party service or app which is not directly associated with this application.</p> <code>Examples</code> <p> <code>&lt;!-- md:3rdparty --&gt;</code></p> <p>mike <code>&lt;!-- md:3rdparty mike --&gt;</code></p> <p></p>"}, {"location": "about/conventions/#docs", "title": "Documentation", "text": "Description <p>Denotes that this item has additional documentation which the user can click the icon for and be taken to another site / page</p> <code>Examples</code> <p> <code>&lt;!-- md:docs --&gt;</code></p> <p>View Docs <code>&lt;!-- md:docs ../advanced/services/blocklist.configserver/ self --&gt;</code></p> <p>View Docs <code>&lt;!-- md:docs ../advanced/services/blocklist.configserver/ new --&gt;</code></p> <p></p>"}, {"location": "about/conventions/#plugin", "title": "Plugin", "text": "Description <p>Denotes that this item requires a specific plugin in order to function.</p> <code>Examples</code> <p> <code>&lt;!-- md:plugin --&gt;</code></p> <p>name <code>&lt;!-- md:plugin name --&gt;</code></p> <p>[typeset] \u2013 built-in With Details  <code>&lt;!-- md:plugin [typeset] \u2013 built-in --&gt;</code></p> <p> </p>"}, {"location": "about/conventions/#feature", "title": "Feature", "text": "Description <p>Denotes a feature available within the app.</p> <code>Examples</code> <p> <code>&lt;!-- md:feature --&gt;</code></p> <p>name <code>&lt;!-- md:feature name --&gt;</code></p> <p> </p>"}, {"location": "about/conventions/#requires", "title": "Requires File", "text": "Description <p>Denotes that a particular feature or functionality looks for, or requires a specific file on your system.</p> <code>Examples</code> <p> <code>&lt;!-- md:requires --&gt;</code></p> <p>/etc/csf/csf.conf <code>&lt;!-- md:requires /etc/csf/csf.conf --&gt;</code></p> <p> </p>"}, {"location": "about/conventions/#source", "title": "Source File", "text": "Description <p>Denotes a feature's source file location. This explains what file the feature or setting can be found in.</p> <code>Examples</code> <p> <code>&lt;!-- md:source --&gt;</code></p> <p>/etc/csf/csf.conf <code>&lt;!-- md:source /etc/csf/csf.conf --&gt;</code></p> <p> </p>"}, {"location": "about/conventions/#setting", "title": "Configurable Settings", "text": "DescriptionUsage <p>Denotes that this item is a configurable setting. Using this requires that you place it within a heading, typically <code>h4</code></p> <code>Examples</code> <pre><code>#### &lt;!-- md:setting config.archive --&gt;\n</code></pre> <p></p>"}, {"location": "about/conventions/#config.archive", "title": "<code>archive</code>", "text": ""}, {"location": "about/conventions/#markdown-extension", "title": "Markdown Extension", "text": "DescriptionUsage <p>This symbol denotes that the thing described is a Markdown element. When adding links, ensure you create a reference-style link</p> <code>Examples</code> <p> <code>&lt;!-- md:markdown --&gt;</code></p> <p>admonition <code>&lt;!-- md:markdown [admonition][Admonition] --&gt;</code></p> <pre><code>:   &lt;!-- md:markdown [admonition][Admonition] --&gt;\n\n[Admonition]: https://python-markdown.github.io/extensions/admonition/\n</code></pre> <p> </p>"}, {"location": "about/conventions/#file-preview", "title": "File Preview", "text": "Description <p>Creates a badge which allows a user to download a file. Badges will contain three sections:</p> <ol> <li>View Example</li> <li>Download Example</li> <li>.ext filename extension</li> </ol> <code>Examples</code> <p> Icon Only  </p> <p>`` Left Aligned</p> <p>Right Aligned ``</p> <p><code>&lt;!-- md:file something.rar --&gt;</code> Right Aligned</p> <p><code>&lt;!-- md:file something.rar left</code> \u2192 Left Aligned</p> <p><code>&lt;!-- md:file something.rar right</code> \u2192 Right Aligned</p> <p> </p>"}, {"location": "about/conventions/#sponsor", "title": "Insiders Sponsor", "text": "Description <p>The pumping heart symbol denotes a person who has been generous enough to support our development through donations.</p> <code>Examples</code> <p> Sponsor  </p> <p> </p> <p></p> <p></p>"}, {"location": "about/conventions/#options", "title": "Options", "text": "<p>Options are another form of setting which lists what the option does, and then examples of how it works.</p> <code>rss.enabled</code> <p><code>true</code> This option specifies whether the plugin is enabled when building your project. If you want to speed up local builds, you can use an [environment variable][mkdocs.env]:</p> <pre><code>plugins:\n  - rss:\n      enabled: !ENV [CI, false]\n</code></pre> <code>rss.match_path</code> <p><code>.*</code> This option specifies which pages should be included in the feed. For example, to only include blog posts in the feed, use the following regular expression:</p> <pre><code>plugins:\n  - rss:\n      match_path: blog/posts/.*\n</code></pre> <p> </p> <p></p>"}, {"location": "about/conventions/#general-examples", "title": "General Examples", "text": "<p>These are just generic examples with no specific purpose. They demonstrate how badges can be used.</p> <p></p>"}, {"location": "about/conventions/#debug_enabled", "title": "DEBUG_ENABLED", "text": "<p>2.0.0 <code>false</code> ``</p> <p>This is an example setting.</p> example.md <pre><code>#### &lt;!-- md:flag setting --&gt; DEBUG_ENABLED \n&lt;!-- md:version stable-2.0.0 --&gt; &lt;!-- md:default `false` --&gt; &lt;!-- md:flag required --&gt; &lt;!-- md:file test.zip --&gt;\n\nThis is an example setting.\n</code></pre> <p> </p> <p></p>"}, {"location": "about/conventions/#icons", "title": "Icons", "text": "<p>Some parts of this documentation may also display icons in one of two ways</p> <ol> <li>Using HTML <pre><code>&lt;i class=\"axd ax-file axd-xs\"&gt;&lt;/i&gt; [View Raw Version](https://license.md/wp-content/uploads/2022/06/gpl-3.0.txt)\n</code></pre></li> <li>Using Markdown     <pre><code>:aetherx-axd-file:\n</code></pre></li> </ol> <p></p> <p></p>"}, {"location": "about/conventions/#emoji-in-tooltips", "title": "Emoji in Tooltips", "text": "<p>You can display an emoji / icon search bar which can be called from a codeblock tooltip as shown below.</p> <pre><code>&lt;span class=\"twemoji\"&gt;\n    &lt;img src=\"/.icons/aetherx/axs/csf-logo-1.svg\" alt=\"CSF Logo\" width=\"32\"&gt; &lt;!-- (1)! --&gt;\n&lt;/span&gt;\n</code></pre> <ol> <li> <p>Enter a few keywords to find the perfect icon using our [icon search] and     click on the shortcode to copy it to your clipboard:</p> <p></p> <ol></ol> <p></p> </li> </ol> <p> </p> <p></p>"}, {"location": "about/conventions/#icon-search", "title": "Icon Search", "text": "<p>Use the following to search our database for a specific icon which is available through our documentation.</p> All Icons Emojis <p> Tip: Enter some keywords to find icons and emojis and click on the   shortcode to copy it to your clipboard. </p> <p> </p>"}, {"location": "about/csf/", "title": "About ConfigServer Firewall & Security Suite", "text": "", "tags": ["info"]}, {"location": "about/csf/#about-configserver-security-firewall", "title": "About ConfigServer Security &amp; Firewall", "text": "<p>ConfigServer Security &amp; Firewall (CSF) is a comprehensive security suite for Linux servers, first released in 2005. At its core, CSF is a Stateful Packet Inspection (SPI) firewall and intrusion detection system that works as a front-end to iptables or nftables, the standard Linux firewall frameworks.</p> <p></p> <p></p>", "tags": ["info"]}, {"location": "about/csf/#about", "title": "About", "text": "<p>ConfigServer Security &amp; Firewall, also known as CSF, is a Stateful Packet Inspection (SPI) firewall and Login/Intrusion Detection and Security application for Linux servers which started back in 2005. CSF works as a front-end to iptables or nftables, configuring your server\u2019s firewall rules to lock down public access to services while allowing only approved connections. This provides better security for your server while giving you an advanced, easy-to-use interface for managing firewall settings. With CSF in place, you can safely permit activities such as logging in via FTP or SSH, checking email, and loading websites, while unauthorized access attempts are blocked.</p> <p></p> <p>As part of the ConfigServer Firewall suite, CSF includes the companion service Login Failure Daemon (LFD). LFD continuously monitors authentication activity on your server to detect excessive login failures, a common sign of brute force attacks. When repeated failures are detected from the same IP address, LFD will automatically and temporarily block that IP from accessing any services on your server. These blocks expire after a set period, but they can also be manually removed through the ConfigServer interface. You can also extend the duration of a blocked IP address, or block an IP indefinitely.</p> <p></p> <p>Beyond automated blocking, CSF provides tools to whitelist trusted IPs, blacklist unwanted IPs, and monitor real-time activity of LFD\u2019s actions. Detailed instructions for configuring these features are covered in Managing Your CSF Firewall.</p> <p></p> <p>When you install the CSF suite on your server; you will be provided with two services:</p> Service Description <code>csf</code> ConfigServer Firewall (csf): SPI iptables firewall which allows you to restrict what is allowed to communicate with your server. <code>lfd</code> Login Failure Daemon (lfd): Process that runs all the time and periodically (every X seconds) scans the latest log file entries for login attempts against your server that continually fail within a short period of time. <p></p> <p></p>", "tags": ["info"]}, {"location": "about/csf/#features", "title": "Features", "text": "<p>Interested in ConfigServer Security &amp; Firewall? Check out a partial list of the included features below:</p> <p></p>", "tags": ["info"]}, {"location": "about/csf/#firewall-network-security", "title": "Firewall &amp; Network Security", "text": "<ul> <li>Easy-to-use SPI firewall powered by iptables/nftables</li> <li>Pre-configured for cPanel and DirectAdmin (standard ports open by default)</li> <li>Auto-detects non-standard SSH ports during installation</li> <li>Works with multiple network interfaces</li> <li>Supports IPv6 via ip6tables</li> <li>Block traffic on unused server IPs to reduce attack surface</li> <li>Country-based access control (allow/deny by ISO Country Code)</li> <li>Protection against:<ul> <li>SYN floods</li> <li>Ping of Death</li> <li>Port scans</li> <li>Connection flooding (per IP/per port detection)</li> </ul> </li> <li>Permanent or temporary IP blocking (with TTL support)</li> <li>Integration with blocklists like DShield and Spamhaus DROP</li> <li>BOGON packet protection</li> </ul>", "tags": ["info"]}, {"location": "about/csf/#login-user-monitoring", "title": "Login &amp; User Monitoring", "text": "<ul> <li>Login Failure Daemon (LFD): detects repeated login failures (brute force protection)</li> <li>Monitors authentication for:<ul> <li>SSH (OpenSSH)</li> <li>FTP (Pure-ftpd, vsftpd, Proftpd)</li> <li>Mail (Courier IMAP, Dovecot, Kerio, Exim SMTP AUTH, POP3/IMAP)</li> <li>Web (cPanel/WHM, Webmail, htpasswd-protected pages)</li> <li>ModSecurity (v1 &amp; v2)</li> <li>Suhosin</li> <li>Custom services via regex and log file matching</li> </ul> </li> <li>POP3/IMAP login tracking (limit logins per hour)</li> <li>Distributed attack detection (across multiple servers)</li> <li>LFD clustering \u2013 share blocks/whitelists across a server group</li> <li>Temporary IP allows (with TTL)</li> </ul>", "tags": ["info"]}, {"location": "about/csf/#alerts-notifications", "title": "Alerts &amp; Notifications", "text": "<ul> <li>SSH and su login notifications</li> <li>Root access notifications (WHM)</li> <li>Alerts for:<ul> <li>High server load average</li> <li>Excessive email sending per hour (spamming detection)</li> <li>Suspicious processes running</li> <li>Abnormal file activity in /tmp and similar directories</li> <li>Excessive user processes or resource usage</li> <li>Account changes (password updates, shell changes, etc.)</li> </ul> </li> </ul>", "tags": ["info"]}, {"location": "about/csf/#intrusion-detection-exploit-protection", "title": "Intrusion Detection &amp; Exploit Protection", "text": "<ul> <li>Intrusion Detection System (IDS) \u2013 monitors system/application binaries</li> <li>Suspicious process and file reporting</li> <li>Exploit checks</li> <li>Directory and file integrity monitoring</li> <li>ModSecurity log reporting</li> <li>Messenger Service \u2013 optionally redirect blocked users to a custom page explaining why access is denied</li> </ul>", "tags": ["info"]}, {"location": "about/csf/#management-control", "title": "Management &amp; Control", "text": "<ul> <li>Integrated UI for major control panels:<ul> <li>cPanel, DirectAdmin, InterWorx, CWP, VestaCP, CyberPanel, Webmin</li> </ul> </li> <li>cPanel reseller access (per-reseller firewall controls: Allow, Deny, Unblock, Search)</li> <li>Integrated with CloudFlare Firewall</li> <li>Upgrade firewall directly from control panel or shell</li> <li>Quick start mode for servers with large allow/deny lists</li> <li>Easy Dynamic DNS support (auto-allow your changing home IP)</li> <li>System statistics &amp; graphs (CPU, load, memory, etc.)</li> <li>ipset support for handling large IP lists efficiently</li> <li>Integrated support for cse within the UI</li> </ul>", "tags": ["info"]}, {"location": "about/license/", "title": "License", "text": ""}, {"location": "about/license/#license", "title": "License", "text": ""}, {"location": "about/license/#gnu-general-public-license-30", "title": "GNU GENERAL PUBLIC LICENSE 3.0", "text": "<p>Much like version 2.0 of the same license, the GNU General Public License v3.0 is a strong copyleft license. With it, the permissions are conditioned to completely availing source code of all licensed works and their modifications. The permissions also cover larger works covered by the same license.</p> <p></p> Permissions Limitations Conditions \u2714\ufe0f Commercial use \u274c Liability \u2139\ufe0f License and copyright notice for source \u2714\ufe0f Modification \u274c Warranty \u2139\ufe0f State changes \u2714\ufe0f Distribution \u2139\ufe0f Same license \u2714\ufe0f Private use \u2139\ufe0f Disclose source \u2714\ufe0f Patent use <p></p> <ul> <li> <p> GNU GENERAL PUBLIC LICENSE 3.0 \u203a Raw Text Version</p> <p>This link displays a raw-text version of the GNU GENERAL PUBLIC LICENSE 3.0 which is stripped of any markdown or other formatting syntax and cab be utilized within a <code>.txt</code> file.</p> </li> </ul> <p></p> <p></p>"}, {"location": "about/license/#gplv3-license", "title": "GPLv3 License", "text": "<p>Version 3, 29 June 2007 Copyright \u00a9 2007 Free Software Foundation, Inc. &lt;http://fsf.org/&gt;</p> <p>Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.</p> <p></p>"}, {"location": "about/license/#preamble", "title": "Preamble", "text": "<p>The GNU General Public License is a free, copyleft license for software and other kinds of works.</p> <p>The licenses for most software and other practical works are designed to take away your freedom to share and change the works. By contrast, the GNU General Public License is intended to guarantee your freedom to share and change all versions of a program--to make sure it remains free software for all its users. We, the Free Software Foundation, use the GNU General Public License for most of our software; it applies also to any other work released this way by its authors. You can apply it to your programs, too.</p> <p>When we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things.</p> <p>To protect your rights, we need to prevent others from denying you these rights or asking you to surrender the rights. Therefore, you have certain responsibilities if you distribute copies of the software, or if you modify it: responsibilities to respect the freedom of others.</p> <p>For example, if you distribute copies of such a program, whether gratis or for a fee, you must pass on to the recipients the same freedoms that you received. You must make sure that they, too, receive or can get the source code. And you must show them these terms so they know their rights.</p> <p>Developers that use the GNU GPL protect your rights with two steps:</p> <ol> <li>assert copyright on the software, and;</li> <li>offer you this License giving you legal permission to copy, distribute and/or modify it.</li> </ol> <p>For the developers' and authors' protection, the GPL clearly explains that there is no warranty for this free software. For both users' and authors' sake, the GPL requires that modified versions be marked as changed, so that their problems will not be attributed erroneously to authors of previous versions.</p> <p>Some devices are designed to deny users access to install or run modified versions of the software inside them, although the manufacturer can do so. This is fundamentally incompatible with the aim of protecting users' freedom to change the software. The systematic pattern of such abuse occurs in the area of products for individuals to use, which is precisely where it is most unacceptable. Therefore, we have designed this version of the GPL to prohibit the practice for those products. If such problems arise substantially in other domains, we stand ready to extend this provision to those domains in future versions of the GPL, as needed to protect the freedom of users.</p> <p>Finally, every program is threatened constantly by software patents. States should not allow patents to restrict development and use of software on general-purpose computers, but in those that do, we wish to avoid the special danger that patents applied to a free program could make it effectively proprietary. To prevent this, the GPL assures that patents cannot be used to render the program non-free.</p> <p>The precise terms and conditions for copying, distribution and modification follow.</p> <p></p>"}, {"location": "about/license/#terms-and-conditions", "title": "TERMS AND CONDITIONS", "text": ""}, {"location": "about/license/#0-definitions", "title": "0. Definitions", "text": "<p>\"This License\" refers to version 3 of the GNU General Public License.</p> <p>\"Copyright\" also means copyright-like laws that apply to other kinds of works, such as semiconductor masks.</p> <p>\"The Program\" refers to any copyrightable work licensed under this License. Each licensee is addressed as \"you\". \"Licensees\" and \"recipients\" may be individuals or organizations.</p> <p>To \"modify\" a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy. The resulting work is called a \"modified version\" of the earlier work or a work \"based on\" the earlier work.</p> <p>A \"covered work\" means either the unmodified Program or a work based on the Program.</p> <p>To \"propagate\" a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy. Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well.</p> <p>To \"convey\" a work means any kind of propagation that enables other parties to make or receive copies. Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying.</p> <p>An interactive user interface displays \"Appropriate Legal Notices\" to the extent that it includes a convenient and prominently visible feature that</p> <ul> <li>1) displays an appropriate copyright notice, and</li> <li>2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License. If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion.</li> </ul> <p></p>"}, {"location": "about/license/#1-source-code", "title": "1. Source Code", "text": "<p>The \"source code\" for a work means the preferred form of the work for making modifications to it. \"Object code\" means any non-source form of a work.</p> <p>A \"Standard Interface\" means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language.</p> <p>The \"System Libraries\" of an executable work include anything, other than the work as a whole, that </p> <ul> <li>a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and </li> <li>b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form.</li> </ul> <p>A \"Major Component\", in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it.</p> <p>The \"Corresponding Source\" for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities. However, it does not include the work's System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work. For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work.</p> <p>The Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source.</p> <p>The Corresponding Source for a work in source code form is that same work.</p> <p></p>"}, {"location": "about/license/#2-basic-permissions", "title": "2. Basic Permissions", "text": "<p>All rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met. This License explicitly affirms your unlimited permission to run the unmodified Program. The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work. This License acknowledges your rights of fair use or other equivalent, as provided by copyright law.</p> <p>You may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force. You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright. Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you.</p> <p>Conveying under any other circumstances is permitted solely under the conditions stated below. Sublicensing is not allowed; section 10 makes it unnecessary.</p> <p></p>"}, {"location": "about/license/#3-protecting-users-legal-rights-from-anti-circumvention-law", "title": "3. Protecting Users' Legal Rights From Anti-Circumvention Law", "text": "<p>No covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures.</p> <p>When you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work's users, your or third parties' legal rights to forbid circumvention of technological measures.</p> <p></p>"}, {"location": "about/license/#4-conveying-verbatim-copies", "title": "4. Conveying Verbatim Copies", "text": "<p>You may convey verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program.</p> <p>You may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee.</p> <p></p>"}, {"location": "about/license/#5-conveying-modified-source-versions", "title": "5. Conveying Modified Source Versions", "text": "<p>You may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions:</p> <ul> <li>a) The work must carry prominent notices stating that you modified it, and giving a relevant date.</li> <li>b) The work must carry prominent notices stating that it is released under this License and any conditions added under section 7. This requirement modifies the requirement in section 4 to \"keep intact all notices\".</li> <li>c) You must license the entire work, as a whole, under this License to anyone who comes into possession of a copy. This License will therefore apply, along with any applicable section 7 additional terms, to the whole of the work, and all its parts, regardless of how they are packaged. This License gives no permission to license the work in any other way, but it does not invalidate such permission if you have separately received it.</li> <li>d) If the work has interactive user interfaces, each must display Appropriate Legal Notices; however, if the Program has interactive interfaces that do not display Appropriate Legal Notices, your work need not make them do so.</li> </ul> <p>A compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an \"aggregate\" if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation's users beyond what the individual works permit. Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate.</p> <p></p>"}, {"location": "about/license/#6-conveying-non-source-forms", "title": "6. Conveying Non-Source Forms", "text": "<p>You may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways:</p> <ul> <li>a) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by the Corresponding Source fixed on a durable physical medium customarily used for software interchange.</li> <li>b) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by a written offer, valid for at least three years and valid for as long as you offer spare parts or customer support for that product model, to give anyone who possesses the object code either<ul> <li>1) a copy of the Corresponding Source for all the software in the product that is covered by this License, on a durable physical medium customarily used for software interchange, for a price no more than your reasonable cost of physically performing this conveying of source, or</li> <li>2) access to copy the Corresponding Source from a network server at no   charge.</li> </ul> </li> <li>c) Convey individual copies of the object code with a copy of the written offer to provide the Corresponding Source. This alternative is allowed only occasionally and noncommercially, and only if you received the object code with such an offer, in accord with subsection 6b.</li> <li>d) Convey the object code by offering access from a designated place (gratis or for a charge), and offer equivalent access to the Corresponding Source in the same way through the same place at no further charge. You need not require recipients to copy the Corresponding Source along with the object code. If the place to copy the object   code is a network server, the Corresponding Source may be on a different server (operated by you or a third party) that supports equivalent copying facilities, provided you maintain clear directions next to the object code saying where to find the Corresponding Source. Regardless of what server hosts the Corresponding Source, you remain obligated to ensure that it is available for as long as needed to satisfy these requirements.</li> <li>e) Convey the object code using peer-to-peer transmission, provided you inform other peers where the object code and Corresponding Source of the work are being offered to the general public at no charge under subsection 6d.</li> </ul> <p>A separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work.</p> <p>A \"User Product\" is either * 1) a \"consumer product\", which means any tangible personal property which is normally used for personal, family, or household purposes, or  * 2) anything designed or sold for incorporation into a dwelling. In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage. For a particular product received by a particular user, \"normally used\" refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product. A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product.</p> <p>\"Installation Information\" for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source. The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made.</p> <p>If you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information. But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM).</p> <p>The requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed. Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network.</p> <p>Corresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying.</p> <p></p>"}, {"location": "about/license/#7-additional-terms", "title": "7. Additional Terms", "text": "<p>\"Additional permissions\" are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law. If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions.</p> <p>When you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it. (Additional permissions may be written to require their own removal in certain cases when you modify the work.) You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission.</p> <p>Notwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms:</p> <ul> <li>a) Disclaiming warranty or limiting liability differently from the terms of sections 15 and 16 of this License; or</li> <li>b) Requiring preservation of specified reasonable legal notices or author attributions in that material or in the Appropriate Legal Notices displayed by works containing it; or</li> <li>c) Prohibiting misrepresentation of the origin of that material, or requiring that modified versions of such material be marked in reasonable ways as different from the   original version; or</li> <li>d) Limiting the use for publicity purposes of names of licensors or authors of the material; or</li> <li>e) Declining to grant rights under trademark law for use of some trade names, trademarks, or service marks; or</li> <li>f) Requiring indemnification of licensors and authors of that material by anyone who conveys the material (or modified versions of it) with contractual assumptions of liability to the recipient, for any liability that these contractual assumptions directly impose on those licensors and authors.</li> </ul> <p>All other non-permissive additional terms are considered \"further restrictions\" within the meaning of section 10. If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term. If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying.</p> <p>If you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms.</p> <p>Additional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way.</p> <p></p>"}, {"location": "about/license/#8-termination", "title": "8. Termination", "text": "<p>You may not propagate or modify a covered work except as expressly provided under this License. Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11).</p> <p>However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated   * a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and   * b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation.</p> <p>Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice.</p> <p>Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License. If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10.</p> <p></p>"}, {"location": "about/license/#9-acceptance-not-required-for-having-copies", "title": "9. Acceptance Not Required for Having Copies", "text": "<p>You are not required to accept this License in order to receive or run a copy of the Program. Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance. However, nothing other than this License grants you permission to propagate or modify any covered work. These actions infringe copyright if you do not accept this License. Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so.</p> <p></p>"}, {"location": "about/license/#10-automatic-licensing-of-downstream-recipients", "title": "10. Automatic Licensing of Downstream Recipients", "text": "<p>Each time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License. You are not responsible for enforcing compliance by third parties with this License.</p> <p>An \"entity transaction\" is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations. If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party's predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts.</p> <p>You may not impose any further restrictions on the exercise of the rights granted or affirmed under this License. For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it.</p> <p></p>"}, {"location": "about/license/#11-patents", "title": "11. Patents", "text": "<p>A \"contributor\" is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based. The work thus licensed is called the contributor's \"contributor version\".</p> <p>A contributor's \"essential patent claims\" are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version. For purposes of this definition, \"control\" includes the right to grant patent sublicenses in a manner consistent with the requirements of this License.</p> <p>Each contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor's essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version.</p> <p>In the following three paragraphs, a \"patent license\" is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement). To \"grant\" such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party.</p> <p>If you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either</p> <ul> <li>1) cause the Corresponding Source to be so available, or </li> <li>2) arrange to deprive yourself of the benefit of the patent license for this particular work, or </li> <li>3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients. \"Knowingly relying\" means you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient's use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid.</li> </ul> <p>If, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it.</p> <p>A patent license is \"discriminatory\" if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License. You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license</p> <ul> <li>a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or </li> <li>b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007.</li> </ul> <p>Nothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law.</p> <p></p>"}, {"location": "about/license/#12-no-surrender-of-others-freedom", "title": "12. No Surrender of Others' Freedom", "text": "<p>If conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all. For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program.</p> <p></p>"}, {"location": "about/license/#13-use-with-the-gnu-affero-general-public-license", "title": "13. Use with the GNU Affero General Public License", "text": "<p>Notwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU Affero General Public License into a single combined work, and to convey the resulting work. The terms of this License will continue to apply to the part which is the covered work, but the special requirements of the GNU Affero General Public License, section 13, concerning interaction through a network will apply to the combination as such.</p> <p></p>"}, {"location": "about/license/#14-revised-versions-of-this-license", "title": "14. Revised Versions of this License", "text": "<p>The Free Software Foundation may publish revised and/or new versions of the GNU General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.</p> <p>Each version is given a distinguishing version number. If the Program specifies that a certain numbered version of the GNU General Public License \"or any later version\" applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of the GNU General Public License, you may choose any version ever published by the Free Software Foundation.</p> <p>If the Program specifies that a proxy can decide which future versions of the GNU General Public License can be used, that proxy's public statement of acceptance of a version permanently authorizes you to choose that version for the Program.</p> <p>Later license versions may give you additional or different permissions. However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version.</p> <p></p>"}, {"location": "about/license/#15-disclaimer-of-warranty", "title": "15. Disclaimer of Warranty", "text": "<p>THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.</p> <p></p>"}, {"location": "about/license/#16-limitation-of-liability", "title": "16. Limitation of Liability", "text": "<p>IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.</p> <p></p>"}, {"location": "about/license/#17-interpretation-of-sections-15-and-16", "title": "17. Interpretation of Sections 15 and 16", "text": "<p>If the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee.</p> <p>END OF TERMS AND CONDITIONS</p> <p></p>"}, {"location": "about/license/#how-to-apply-these-terms-to-your-new-programs", "title": "How to Apply These Terms to Your New Programs", "text": "<p>If you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms.</p> <p>To do so, attach the following notices to the program. It is safest to attach them to the start of each source file to most effectively state the exclusion of warranty; and each file should have at least the \"copyright\" line and a pointer to where the full notice is found.</p> <pre><code>&lt;one line to give the program's name and a brief idea of what it does.&gt;\nCopyright (C) &lt;year&gt;  &lt;name of author&gt;\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.\n</code></pre> <p>Also add information on how to contact you by electronic and paper mail.</p> <p>If the program does terminal interaction, make it output a short notice like this when it starts in an interactive mode:</p> <pre><code>&lt;program&gt;  Copyright (C) &lt;year&gt;  &lt;name of author&gt;\nThis program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'.\nThis is free software, and you are welcome to redistribute it\nunder certain conditions; type 'show c' for details.\n</code></pre> <p>The hypothetical commands <code>show w</code> and <code>show c</code> should show the appropriate parts of the General Public License. Of course, your program's commands might be different; for a GUI interface, you would use an \"about box\".</p> <p>You should also get your employer (if you work as a programmer) or school, if any, to sign a \"copyright disclaimer\" for the program, if necessary. For more information on this, and how to apply and follow the GNU GPL, see &lt;http://www.gnu.org/licenses/&gt;.</p> <p>The GNU General Public License does not permit incorporating your program into proprietary programs. If your program is a subroutine library, you may consider it more useful to permit linking proprietary applications with the library. If this is what you want to do, use the GNU Lesser General Public License instead of this License. But first, please read &lt;http://www.gnu.org/philosophy/why-not-lgpl.html&gt;.</p> <p> </p>"}, {"location": "about/patcher/", "title": "How this patcher works", "text": "", "tags": ["info"]}, {"location": "about/patcher/#how-patcher-works", "title": "How Patcher Works", "text": "<p>This section is optional to read. It simply outlines what the patcher does from the time of execution to better explain what will be happening on your systen.</p> <p></p> <ul> <li>Download all the files in the <code>/patch</code> folder to your system.</li> <li>Set the <code>install.sh</code> file to be executable.<ul> <li><code>sudo chmod +x install.sh</code></li> </ul> </li> <li>Run the <code>install.sh</code> script<ul> <li><code>sudo ./install.sh</code></li> <li>The script will first check to see if you have ConfigServer Firewall and all of its prerequisites installed. It will install them if they are not installed. This includes:<ul> <li>ConfigServer Firewall</li> <li>ipset package</li> <li>iptables / ip6tables package</li> </ul> </li> <li>Two new files will be added:<ul> <li><code>/usr/local/csf/bin/csfpre.sh</code></li> <li><code>/usr/local/csf/bin/csfpost.sh</code></li> </ul> </li> <li>The patches will then be moved onto your system in the locations:<ul> <li><code>/usr/local/include/csf/post.d/docker.sh</code></li> <li><code>/usr/local/include/csf/post.d/openvpn.sh</code></li> </ul> </li> <li>The <code>Docker</code> patch will first check to ensure you have the following:<ul> <li>Must have Docker installed</li> <li>This script will NOT install docker. You must do that.</li> <li>Must have a valid docker network adapter named <code>docker*</code> or <code>br-*</code></li> </ul> </li> <li>The <code>OpenVPN</code> patch will first check to ensure you have the following:<ul> <li>Must have OpenVPN Server installed</li> <li>Must have a valid network tunnel named <code>tun*</code> (tun0, tun1, etc)</li> <li>Must have an outside network adapter named either <code>eth*</code> or <code>enp*</code></li> <li>If any of the checks above are not true, OpenVPN patcher will skip</li> <li>You can check your list of network adapters using any of the commands below:<ul> <li><code>ip link show</code></li> <li><code>ifconfig</code></li> </ul> </li> <li>You can check if OpenVPN server is installed by using the commmand:<ul> <li><code>openvpn --version</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> <p></p> <ul> <li>If you attempt to run the <code>install.sh</code> any time after the initial setup:<ul> <li>The script will check if ConfigServer Firewall and all prerequisites are installed.<ul> <li>If they are not installed; they will be installed.</li> <li>If they are already installed; nothing will happen. The script does NOT update your packages. It installs the latest version of each package from the time that you run the script and do not already have ConfigServer Firewall installed.</li> </ul> </li> <li>The script will look at all of the files it added the first time and check the MD5 hash.<ul> <li>If the <code>csfpre</code>, <code>csfpost</code>, or patch files do not exist; they will be re-added to your system.</li> <li>If the patch files are different from the one the patcher comes with, you will be prompted / asked if you wish to overwrite your already installed copy</li> <li>If the patch files are the same as the ones which comes with the patcher; nothing will be done and it will skip that step.</li> </ul> </li> </ul> </li> </ul> <p></p> <p></p>", "tags": ["info"]}, {"location": "about/tags/", "title": "Tags", "text": ""}, {"location": "about/tags/#tags", "title": "Tags", "text": "<p>Following is a list of relevant tags:</p>"}, {"location": "about/tags/#tag:2fa", "title": "2fa", "text": "<ul> <li>            Authentik Integration          </li> </ul>"}, {"location": "about/tags/#tag:apt", "title": "apt", "text": "<ul> <li>            Dependencies          </li> </ul>"}, {"location": "about/tags/#tag:apt-get", "title": "apt-get", "text": "<ul> <li>            Dependencies          </li> </ul>"}, {"location": "about/tags/#tag:authentication", "title": "authentication", "text": "<ul> <li>            Authentik Integration          </li> </ul>"}, {"location": "about/tags/#tag:authentik", "title": "authentik", "text": "<ul> <li>            Authentik Integration          </li> </ul>"}, {"location": "about/tags/#tag:blocklistconfigserverdev", "title": "blocklist.configserver.dev", "text": "<ul> <li>            Services          </li> <li>            blocklist.configserver.dev          </li> </ul>"}, {"location": "about/tags/#tag:blocklists", "title": "blocklists", "text": "<ul> <li>            Blocklists          </li> </ul>"}, {"location": "about/tags/#tag:centos-web-panel", "title": "centos-web-panel", "text": "<ul> <li>            Install          </li> </ul>"}, {"location": "about/tags/#tag:changelog", "title": "changelog", "text": "<ul> <li>            Changelog          </li> </ul>"}, {"location": "about/tags/#tag:cheatsheet", "title": "cheatsheet", "text": "<ul> <li>            Cheatsheet: Troubleshooting          </li> <li>            Commands          </li> <li>            Example Configs          </li> <li>            Home          </li> <li>            Ports          </li> <li>            Structure          </li> </ul>"}, {"location": "about/tags/#tag:commands", "title": "commands", "text": "<ul> <li>            Commands          </li> </ul>"}, {"location": "about/tags/#tag:configs", "title": "configs", "text": "<ul> <li>            Example Configs          </li> <li>            Ports          </li> </ul>"}, {"location": "about/tags/#tag:configure", "title": "configure", "text": "<ul> <li>            Authentik Integration          </li> <li>            Blocklists          </li> <li>            Cheatsheet: Troubleshooting          </li> <li>            Configuration          </li> <li>            Docker Integration          </li> <li>            Example Configs          </li> <li>            Geographical Blocks          </li> <li>            Getting Started          </li> <li>            Home          </li> <li>            Ipsets          </li> <li>            Ports          </li> <li>            Pre &amp; Post Scripts          </li> <li>            Structure          </li> <li>            Traefik Integration          </li> </ul>"}, {"location": "about/tags/#tag:cpan", "title": "cpan", "text": "<ul> <li>            Dependencies          </li> </ul>"}, {"location": "about/tags/#tag:cpanel", "title": "cpanel", "text": "<ul> <li>            Install          </li> </ul>"}, {"location": "about/tags/#tag:cpanm", "title": "cpanm", "text": "<ul> <li>            Dependencies          </li> </ul>"}, {"location": "about/tags/#tag:cwp", "title": "cwp", "text": "<ul> <li>            Install          </li> </ul>"}, {"location": "about/tags/#tag:cyberpanel", "title": "cyberpanel", "text": "<ul> <li>            Install          </li> </ul>"}, {"location": "about/tags/#tag:dependencies", "title": "dependencies", "text": "<ul> <li>            Dependencies          </li> </ul>"}, {"location": "about/tags/#tag:diagnostics", "title": "diagnostics", "text": "<ul> <li>            Diagnostic Tests          </li> </ul>"}, {"location": "about/tags/#tag:directadmin", "title": "directadmin", "text": "<ul> <li>            Install          </li> </ul>"}, {"location": "about/tags/#tag:dnf", "title": "dnf", "text": "<ul> <li>            Dependencies          </li> </ul>"}, {"location": "about/tags/#tag:docker", "title": "docker", "text": "<ul> <li>            Docker Integration          </li> </ul>"}, {"location": "about/tags/#tag:download", "title": "download", "text": "<ul> <li>            Download          </li> </ul>"}, {"location": "about/tags/#tag:downloadconfigserverdev", "title": "download.configserver.dev", "text": "<ul> <li>            Services          </li> <li>            download.configserver.dev          </li> </ul>"}, {"location": "about/tags/#tag:geoip", "title": "geoip", "text": "<ul> <li>            Geographical Blocks          </li> </ul>"}, {"location": "about/tags/#tag:getconfigserverdev", "title": "get.configserver.dev", "text": "<ul> <li>            Services          </li> <li>            get.configserver.dev          </li> </ul>"}, {"location": "about/tags/#tag:getsh", "title": "get.sh", "text": "<ul> <li>            get.configserver.dev          </li> </ul>"}, {"location": "about/tags/#tag:history", "title": "history", "text": "<ul> <li>            Changelog          </li> </ul>"}, {"location": "about/tags/#tag:home", "title": "home", "text": "<ul> <li>            Home          </li> </ul>"}, {"location": "about/tags/#tag:info", "title": "info", "text": "<ul> <li>            Contributing          </li> <li>            How this patcher works          </li> <li>            How this patcher works          </li> <li>            Introduction          </li> </ul>"}, {"location": "about/tags/#tag:insiders", "title": "insiders", "text": "<ul> <li>            Insiders \u203a About          </li> <li>            Our Sponsors          </li> </ul>"}, {"location": "about/tags/#tag:install", "title": "install", "text": "<ul> <li>            Dependencies          </li> <li>            Diagnostic Tests          </li> <li>            Download          </li> <li>            Enable Web Interface          </li> <li>            Install          </li> <li>            Patcher: Configure          </li> <li>            Patcher: Download          </li> <li>            Start Services          </li> </ul>"}, {"location": "about/tags/#tag:integration", "title": "integration", "text": "<ul> <li>            Authentik Integration          </li> <li>            Docker Integration          </li> <li>            Traefik Integration          </li> </ul>"}, {"location": "about/tags/#tag:interworx", "title": "interworx", "text": "<ul> <li>            Install          </li> </ul>"}, {"location": "about/tags/#tag:passkey", "title": "passkey", "text": "<ul> <li>            Authentik Integration          </li> </ul>"}, {"location": "about/tags/#tag:patch", "title": "patch", "text": "<ul> <li>            Patcher: Configure          </li> <li>            Patcher: Download          </li> </ul>"}, {"location": "about/tags/#tag:ports", "title": "ports", "text": "<ul> <li>            Ports          </li> </ul>"}, {"location": "about/tags/#tag:releases", "title": "releases", "text": "<ul> <li>            Changelog          </li> </ul>"}, {"location": "about/tags/#tag:resource", "title": "resource", "text": "<ul> <li>            Example Configs          </li> <li>            Ports          </li> </ul>"}, {"location": "about/tags/#tag:service", "title": "service", "text": "<ul> <li>            Start Services          </li> </ul>"}, {"location": "about/tags/#tag:services", "title": "services", "text": "<ul> <li>            Services          </li> <li>            blocklist.configserver.dev          </li> <li>            download.configserver.dev          </li> <li>            get.configserver.dev          </li> </ul>"}, {"location": "about/tags/#tag:setup", "title": "setup", "text": "<ul> <li>            Diagnostic Tests          </li> <li>            Download          </li> <li>            Enable Web Interface          </li> <li>            Install          </li> <li>            Start Services          </li> </ul>"}, {"location": "about/tags/#tag:sponsor", "title": "sponsor", "text": "<ul> <li>            Insiders \u203a About          </li> <li>            Our Sponsors          </li> </ul>"}, {"location": "about/tags/#tag:systemctl", "title": "systemctl", "text": "<ul> <li>            Start Services          </li> </ul>"}, {"location": "about/tags/#tag:tests", "title": "tests", "text": "<ul> <li>            Diagnostic Tests          </li> </ul>"}, {"location": "about/tags/#tag:traefik", "title": "traefik", "text": "<ul> <li>            Traefik Integration          </li> </ul>"}, {"location": "about/tags/#tag:tutorials", "title": "tutorials", "text": "<ul> <li>            Geographical Blocks          </li> </ul>"}, {"location": "about/tags/#tag:uninstall", "title": "uninstall", "text": "<ul> <li>            Uninstall          </li> </ul>"}, {"location": "about/tags/#tag:usage", "title": "usage", "text": "<ul> <li>            Authentik Integration          </li> <li>            Blocklists          </li> <li>            Configuration          </li> <li>            Docker Integration          </li> <li>            Getting Started          </li> <li>            Ipsets          </li> <li>            Pre &amp; Post Scripts          </li> <li>            Traefik Integration          </li> </ul>"}, {"location": "about/tags/#tag:vestacp", "title": "vestacp", "text": "<ul> <li>            Install          </li> </ul>"}, {"location": "about/tags/#tag:webmin", "title": "webmin", "text": "<ul> <li>            Install          </li> </ul>"}, {"location": "about/tags/#tag:whm", "title": "whm", "text": "<ul> <li>            Install          </li> </ul>"}, {"location": "about/tags/#tag:yum", "title": "yum", "text": "<ul> <li>            Dependencies          </li> </ul>"}, {"location": "advanced/services/blocklist.configserver/", "title": "Advanced \u203a Services \u203a blocklist.configserver.dev", "text": "", "tags": ["services", "blocklist.configserver.dev"]}, {"location": "advanced/services/blocklist.configserver/#blocklistconfigserverdev", "title": "blocklist.configserver.dev", "text": "<p>CSF's blocklist.configserver.dev provides short, stable URLs for CSF\u2019s official blocklists and other repo-hosted IPSETs. Accessing a URL returns the raw ipset file (one IP or CIDR per line), making it easy to consume and implement with CSF's blocklist feature. A JSON API is also available for statistical data, showing counts and metadata, while by default the plain text lists are served for direct consumption by tools.</p> <p>IPSET files are formatted one entry per line (IP or CIDR), fully compatible with CSF. Administrators can add the URLs to <code>/etc/csf/csf.blocklists</code> or <code>/etc/csf/csf.deny</code>, allowing CSF to automatically apply the entries as iptables rules or via IPSET. The raw format is also easy to script against, mirror, or integrate into firewall automation workflows.</p> <p>The blocklists aggregate trusted sources, including high-confidence feeds like AbusiveIPDB top offenders, known brute-force ranges, port scanners, and botnets. While built for CSF, the lists can also be used with Fail2Ban, FireHOL, pfSense, Shorewall, and other compatible firewall tools.</p> <p>Read the chapter Blocklists for more information about this feature and service.</p> <p></p> <p></p>", "tags": ["services", "blocklist.configserver.dev"]}, {"location": "advanced/services/blocklist.configserver/#about-blocklists", "title": "About Blocklists", "text": "<p>A blocklist is a collection of IP addresses or entire networks (CIDRs) that you don\u2019t want accessing your server. When an IP on the blocklist attempts to connect, CSF blocks the request, helping to protect your system from unwanted or malicious traffic.</p> <p>Blocklists are powerful because they let you deny connections from known bad actors automatically. This includes IPs flagged for brute-force attacks, spam, port scanning, or other suspicious activity. Instead of manually adding rules for each offender, CSF can apply a list of rules that you maintain or import from external sources.</p> <p>Many blocklists are published and maintained by security organizations that track malicious activity worldwide. By subscribing to these maintained blocklists, you can keep your server automatically protected from known threats without the need for constant manual intervention.</p> <p></p> <p></p>", "tags": ["services", "blocklist.configserver.dev"]}, {"location": "advanced/services/blocklist.configserver/#usage", "title": "Usage", "text": "<p>This section explains the different ways you can access and work with our blocklist service.  </p> <p></p>", "tags": ["services", "blocklist.configserver.dev"]}, {"location": "advanced/services/blocklist.configserver/#get-ipset", "title": "Get IPSET", "text": "<p>By default, each blocklist is served as a plain text file containing IP addresses and CIDR ranges. All lists are available as <code>.ipset</code> files and can be retrieved directly over HTTP.  </p> <p>For example, you can open the following URL in your browser or use <code>curl</code> to download the master blocklist:</p> <ul> <li> IPSET \u203a https://blocklist.configserver.dev/master.ipset</li> </ul> <p>This file can then be imported into CSF, FireHOL, or any firewall, security tool, or monitoring system that supports ipsets.  </p> <p></p>", "tags": ["services", "blocklist.configserver.dev"]}, {"location": "advanced/services/blocklist.configserver/#get-json-api", "title": "Get JSON API", "text": "<p>Beyond simple blocklist retrieval, the service also provides an API with a statistics endpoint. By appending the query parameter <code>?stats=true</code> to any <code>.ipset</code> file, the server will return metadata instead of the raw list.  </p> <ul> <li> IPSET \u203a https://blocklist.configserver.dev/master.ipset?stats=true</li> </ul> <p>The statistics response is provided in JSON format and includes details such as the list name, source, number of entries, size, and timestamps.  </p> <p>Example response:</p> https://blocklist.configserver.dev/master.ipset<pre><code>{\n  \"name\": \"Master Blocklist\",\n  \"id\": \"master_ipset\",\n  \"filename\": \"master.ipset\",\n  \"category\": \"Master\",\n  \"uuid\": \"ae40fa01-270d-3a98-98eb-249207584724\",\n  \"source\": \"https://raw.githubusercontent.com/Aetherinox/csf-firewall/main/blocklists/master.ipset\",\n  \"url\": \"https://raw.githubusercontent.com/Aetherinox/csf-firewall/main/blocklists/master.ipset\",\n  \"subnets\": 5387,\n  \"ips_single\": 425310,\n  \"ips_total\": 612962028,\n  \"client_ip\": \"127.0.0.1\",\n  \"timestamp\": \"2025-09-27T15:36:37.954Z\",\n  \"date\": \"09-27-2025 08:36:38\",\n  \"took\": \"0m 02s\",\n  \"took_ms\": 2001\n}\n</code></pre> <p></p> <p></p>", "tags": ["services", "blocklist.configserver.dev"]}, {"location": "advanced/services/blocklist.configserver/#add-blocklists-to-csf", "title": "Add Blocklists to CSF", "text": "<p>To use our blocklist.configserver.dev service, select the lists you want to add to CSF from the blocklists section below.  </p> <p>For example, you might add the lists <code>master.ipset</code> and <code>highrisk.ipset</code>.</p> <p>Open your <code>/etc/csf/csf.blocklists</code> and add the following:</p> <pre><code># #\n#   @blocklist              Official CSF Blocklists\n#   @details:               https://aetherinox.github.io/csf-firewall/usage/blocklists/#official-blocklists\n#                           https://aetherinox.github.io/csf-firewall/advanced/services/blocklist.configserver\n#   \n#   The official CSF blocklists contain a large number of IPs which range from various \n#   different services, including AbuseIPDB (100% confidency).\n#   \n#   You can also use our blocklist service:\n#       https://blocklist.configserver.dev/master.ipset\n#       https://blocklist.configserver.dev/highrisk.ipset\n#   \n#   We offer many others, but these two are the primary ones.\n#   \n#   Requires you to edit /etc/csf/csf.conf setting:\n#       LF_IPSET_MAXELEM = \"4000000\"\n# #\n\nCSF_MASTER   | 43200 | 0      | https://blocklist.configserver.dev/master.ipset\nCSF_HIGHRISK | 43200 | 0      | https://blocklist.configserver.dev/highrisk.ipset\n</code></pre> <p></p> <p></p>", "tags": ["services", "blocklist.configserver.dev"]}, {"location": "advanced/services/blocklist.configserver/#blocklists", "title": "Blocklists", "text": "<p>The following lists outline the blocklists that are available to use with our blocklist service</p> <p></p>", "tags": ["services", "blocklist.configserver.dev"]}, {"location": "advanced/services/blocklist.configserver/#risk-assessments", "title": "Risk Assessments", "text": "<p>The lists in this README use <code>\u269d</code> and <code>\u2605</code> icons to indicate risk levels. More stars mean higher risk. Lists marked as High or Critical should be added to your CSF blocklist to secure your server. Lower-risk lists are optional and can be added at your discretion.</p> <p>Our automated CI generates this risk assessment each day.</p> <p></p> Rating Risk Description <code>\u269d\u269d\u269d\u269d\u269d</code> No Risk IPs pose no real threat, but possibly suspected <code>\u2605\u269d\u269d\u269d\u269d</code> Low Risk IPs pose minimal threat <code>\u2605\u2605\u269d\u269d\u269d</code> Moderate Risk IPs may cause issues; monitor carefully <code>\u2605\u2605\u2605\u269d\u269d</code> Elevated Risk IPs are risky; consider blocking <code>\u2605\u2605\u2605\u2605\u269d</code> High Risk IPs are dangerous; likely to cause harm <code>\u2605\u2605\u2605\u2605\u2605</code> Critical Risk IPs are highly dangerous; block immediately <p></p>", "tags": ["services", "blocklist.configserver.dev"]}, {"location": "advanced/services/blocklist.configserver/#main-lists", "title": "Main Lists", "text": "<p>These are the primary IPSETs that most people will be interested in. They contain a large number of IP addresses that have been reported recently for abusive behavior. These statistics are gathered from multiple sources, such as AbuseIPDB and IPThreat. IPs on this list have a 100% confidence level, meaning you should encounter no false positives from any of the IPs included.  </p> <p>IP addresses in these lists have been flagged for engaging in activities such as:</p> <ul> <li>SSH Bruteforcing</li> <li>Port Scanning</li> <li>DDoS Attacks</li> <li>IoT Targeting</li> <li>Phishing</li> </ul> <p></p> <p>For most users, the blocklists <code>master.ipset</code> and <code>highrisk.ipset</code> are all you need. They contain a massive collection of IP addresses, all with a 100% confidence level, meaning you should encounter none or minimal false positives.</p> Set Name Description Risk View <code>master.ipset</code> Abusive IP addresses which have been reported for port scanning and SSH brute-forcing. HIGHLY recommended.  Includes AbuseIPDB, IPThreat, CinsScore, GreensNow \u2605\u2605\u2605\u2605\u2605 view <code>highrisk.ipset</code> IPs with highest risk to your network and have a possibility that the activity which comes from them are going to be fraudulent. \u2605\u2605\u2605\u2605\u2605 view <p></p>", "tags": ["services", "blocklist.configserver.dev"]}, {"location": "advanced/services/blocklist.configserver/#privacy", "title": "Privacy", "text": "<p>These blocklists help you control which third-party services can access your server, allowing you to block bad actors or unwanted service providers.</p> <p></p> Set Description Risk View <code>privacy_general.ipset</code> Servers which scan ports for data collection and research purposes.  List includes Censys, Shodan, Project25499, InternetArchive, Cyber Resilience, Internet Measurement, probe.onyphe.net, Security Trails \u2605\u2605\u2605\u2605\u269d view <code>privacy_ahrefs.ipset</code> Ahrefs SEO and services \u2605\u2605\u269d\u269d\u269d view <code>privacy_amazon_aws.ipset</code> Amazon AWS \u2605\u2605\u269d\u269d\u269d view <code>privacy_amazon_ec2.ipset</code> Amazon EC2 \u2605\u2605\u269d\u269d\u269d view <code>privacy_applebot.ipset</code> Apple Bots \u2605\u2605\u2605\u269d\u269d view <code>privacy_bing.ipset</code> Microsoft Bind and Bing Crawlers / Bots \u2605\u2605\u269d\u269d\u269d view <code>privacy_bunnycdn.ipset</code> Bunny CDN \u2605\u2605\u269d\u269d\u269d view <code>privacy_cloudflarecdn.ipset</code> Cloudflare CDN \u2605\u2605\u269d\u269d\u269d view <code>privacy_cloudfront.ipset</code> Cloudfront DNS \u2605\u269d\u269d\u269d\u269d view <code>privacy_duckduckgo.ipset</code> DuckDuckGo Web Crawlers / Bots \u2605\u2605\u269d\u269d\u269d view <code>privacy_facebook.ipset</code> Facebook Bots &amp; Trackers \u2605\u2605\u2605\u269d\u269d view <code>privacy_fastly.ipset</code> Fastly CDN \u2605\u269d\u269d\u269d\u269d view <code>privacy_google.ipset</code> Google Crawlers \u2605\u2605\u269d\u269d\u269d view <code>privacy_pingdom.ipset</code> Pingdom Monitoring Service \u2605\u2605\u269d\u269d\u269d view <code>privacy_rssapi.ipset</code> RSS API Reader \u2605\u2605\u269d\u269d\u269d view <code>privacy_stripe_api.ipset</code> Stripe Payment Gateway API \u2605\u2605\u269d\u269d\u269d view <code>privacy_stripe_armada_gator.ipset</code> Stripe Armada Gator \u2605\u2605\u269d\u269d\u269d view <code>privacy_stripe_webhooks.ipset</code> Stripe Webhook Service \u2605\u2605\u269d\u269d\u269d view <code>privacy_telegram.ipset</code> Telegram Trackers and Crawlers \u2605\u2605\u2605\u269d\u269d view <code>privacy_uptimerobot.ipset</code> Uptime Robot Monitoring Service \u2605\u269d\u269d\u269d\u269d view <code>privacy_webpagetest.ipset</code> Webpage Test Services \u2605\u2605\u269d\u269d\u269d view <p> </p>", "tags": ["services", "blocklist.configserver.dev"]}, {"location": "advanced/services/blocklist.configserver/#spam", "title": "Spam", "text": "<p>These blocklists help prevent known spam sources from accessing your server. They include IPs identified by services like Spamhaus as well as spammers targeting forums and other online platforms.</p> <p></p> Set Description Risk View <code>spam_forums.ipset</code> List of known forum / blog spammers and bots \u2605\u2605\u2605\u269d\u269d view <code>spam_spamhaus.ipset</code> Bad actor IP addresses registered with Spamhaus \u2605\u2605\u2605\u2605\u269d view <p> </p>", "tags": ["services", "blocklist.configserver.dev"]}, {"location": "advanced/services/blocklist.configserver/#internet-service-providers", "title": "Internet Service Providers", "text": "<p>These blocklists allow you to filter traffic based on Internet Service Providers (ISPs). They can be used to block or restrict access from specific networks or providers.</p> <p></p> Set Description Risk View <code>isp_aol.ipset</code> AOL Internet Service Provider IPs \u2605\u269d\u269d\u269d\u269d view <code>isp_att.ipset</code> AT&amp;T Internet Service Provider IPs \u2605\u269d\u269d\u269d\u269d view <code>isp_cablevision.ipset</code> Cablevision / Optimum ISP IPs \u2605\u269d\u269d\u269d\u269d view <code>isp_charter_spectrum_timewarnercable.ipset</code> Charter/Spectrum/TWC ISP IPs \u2605\u269d\u269d\u269d\u269d view <code>isp_comcast.ipset</code> Comcast / Xfinity ISP IPs \u2605\u269d\u269d\u269d\u269d view <code>isp_cox_communications.ipset</code> Cox Communications ISP IPs \u2605\u269d\u269d\u269d\u269d view <code>isp_embarq.ipset</code> Embarq / CenturyLink ISP IPs \u2605\u269d\u269d\u269d\u269d view <code>isp_frontier_communications.ipset</code> Frontier Communications ISP IPs \u2605\u269d\u269d\u269d\u269d view <code>isp_qwest.ipset</code> Qwest / CenturyLink ISP IPs \u2605\u269d\u269d\u269d\u269d view <code>isp_spacex_starlink.ipset</code> SpaceX Starlink satellite ISP IPs \u2605\u269d\u269d\u269d\u269d view <code>isp_sprint.ipset</code> Sprint ISP IPs \u2605\u269d\u269d\u269d\u269d view <code>isp_suddenlink_altice_optimum.ipset</code> Suddenlink / Altice / Optimum ISP IPs \u2605\u269d\u269d\u269d\u269d view <code>isp_verizon.ipset</code> Verizon ISP IPs \u2605\u269d\u269d\u269d\u269d view <p> </p>", "tags": ["services", "blocklist.configserver.dev"]}, {"location": "advanced/services/blocklist.configserver/#transmission-bittorrent-client", "title": "Transmission (BitTorrent Client)", "text": "<p>This section includes blocklists which you can import into the bittorrent client Transmission.</p> <p></p> <ul> <li>In this repo, copy the direct URL to the Transmission blocklist, provided below:<ul> <li>https://github.com/Aetherinox/csf-firewall/raw/main/blocklists/transmission/blocklist.gz</li> </ul> </li> <li>Open your Transmission application; depending on the version you run, do ONE of the follow two choices:<ul> <li>Paste the link to Transmission \u203a <code>Settings</code> \u203a <code>Peers</code> \u203a <code>Blocklist</code></li> <li>Paste the link to Transmission \u203a <code>Edit</code> \u203a <code>Preferences</code> \u203a <code>Privacy</code> \u203a <code>Enable Blocklist</code></li> </ul> </li> </ul> <p></p> Set Description Risk View Website <code>transmission.ipset</code> A large blocklist for the BitTorrent client Transmission \u2605\u2605\u2605\u2605\u2605 view view <p> </p>", "tags": ["services", "blocklist.configserver.dev"]}, {"location": "advanced/services/blocklist.configserver/#continents-geolite2", "title": "Continents (GeoLite2)", "text": "<p>These blocklists let you control which geographical locations can access your server. They can be used as either a whitelist or a blacklist and include both continents and countries.  </p> <p>All data is sourced directly from the GeoLite2 Database.</p> <p></p> Set Description Risk View <code>continent_africa.ipset</code> All IPs located in Africa \u2605\u2605\u2605\u269d\u269d view <code>continent_antartica.ipset</code> All IPs located in Antarctica \u269d\u269d\u269d\u269d\u269d view <code>continent_asia.ipset</code> All IPs located in Asia \u2605\u2605\u2605\u2605\u269d view <code>continent_europe.ipset</code> All IPs located in Europe \u2605\u2605\u2605\u269d\u269d view <code>continent_north_america.ipset</code> All IPs located in North America \u2605\u2605\u2605\u2605\u269d view <code>continent_oceania.ipset</code> All IPs located in Oceania \u2605\u269d\u269d\u269d\u269d view <code>continent_south_america.ipset</code> All IPs located in South America \u2605\u2605\u269d\u269d\u269d view <p> </p>", "tags": ["services", "blocklist.configserver.dev"]}, {"location": "advanced/services/blocklist.configserver/#countries-geolite2", "title": "Countries (GeoLite2)", "text": "<p>These blocklists let you control which geographical locations can access your server. They can be used as either a whitelist or a blacklist and include both continents and countries.  </p> <p>All data is sourced directly from the GeoLite2 Database.</p> <p></p> Set Description Risk View <code>country_afghanistan.ipset</code> Afghanistan \u2605\u2605\u2605\u2605\u269d view <code>country_aland_islands.ipset</code> Aland Islands \u269d\u269d\u269d\u269d\u269d view <code>country_albania.ipset</code> Albania \u2605\u2605\u269d\u269d\u269d view <code>country_algeria.ipset</code> Algeria \u2605\u2605\u2605\u269d\u269d view <code>country_american_samoa.ipset</code> American Samoa \u269d\u269d\u269d\u269d\u269d view <code>country_andorra.ipset</code> Andorra \u269d\u269d\u269d\u269d\u269d view <code>country_angola.ipset</code> Angola \u2605\u2605\u2605\u269d\u269d view <code>country_anguilla.ipset</code> Anguilla \u269d\u269d\u269d\u269d\u269d view <code>country_antarctica.ipset</code> Antarctica \u269d\u269d\u269d\u269d\u269d view <code>country_antigua_barbuda.ipset</code> Antigua and Barbuda \u2605\u2605\u269d\u269d\u269d view <code>country_argentina.ipset</code> Argentina \u2605\u2605\u2605\u269d\u269d view <code>country_armenia.ipset</code> Armenia \u2605\u2605\u269d\u269d\u269d view <code>country_aruba.ipset</code> Aruba \u269d\u269d\u269d\u269d\u269d view <code>country_australia.ipset</code> Australia \u2605\u2605\u2605\u269d\u269d view <code>country_austria.ipset</code> Austria \u2605\u2605\u269d\u269d\u269d view <code>country_azerbaijan.ipset</code> Azerbaijan \u2605\u2605\u269d\u269d\u269d view <code>country_bahamas.ipset</code> The Bahamas \u2605\u2605\u269d\u269d\u269d view <code>country_bahrain.ipset</code> Bahrain \u2605\u2605\u269d\u269d\u269d view <code>country_bangladesh.ipset</code> Bangladesh \u2605\u2605\u2605\u2605\u269d view <code>country_barbados.ipset</code> Barbados \u2605\u2605\u269d\u269d\u269d view <code>country_belarus.ipset</code> Belarus \u2605\u2605\u2605\u269d\u269d view <code>country_belgium.ipset</code> Belgium \u2605\u2605\u269d\u269d\u269d view <code>country_belize.ipset</code> Belize \u2605\u2605\u269d\u269d\u269d view <code>country_benin.ipset</code> Benin \u2605\u2605\u2605\u269d\u269d view <code>country_bermuda.ipset</code> Bermuda \u269d\u269d\u269d\u269d\u269d view <code>country_bhutan.ipset</code> Bhutan \u269d\u269d\u269d\u269d\u269d view <code>country_bolivia.ipset</code> Bolivia \u2605\u2605\u269d\u269d\u269d view <code>country_bonaire_sint_eustatius_saba.ipset</code> Bonaire, Sint Eustatius, and Saba \u269d\u269d\u269d\u269d\u269d view <code>country_bosnia_herzegovina.ipset</code> Bosnia and Herzegovina \u2605\u2605\u2605\u269d\u269d view <code>country_botswana.ipset</code> Botswana \u2605\u2605\u269d\u269d\u269d view <code>country_bouvet_island.ipset</code> Bouvet Island \u269d\u269d\u269d\u269d\u269d view <code>country_brazil.ipset</code> Brazil \u2605\u2605\u2605\u2605\u269d view <code>country_british_indian_ocean_territory.ipset</code> British Indian Ocean Territory \u269d\u269d\u269d\u269d\u269d view <code>country_british_virgin_islands.ipset</code> British Virgin Islands \u2605\u2605\u269d\u269d\u269d view <code>country_brunei_darussalam.ipset</code> Brunei \u2605\u2605\u269d\u269d\u269d view <code>country_bulgaria.ipset</code> Bulgaria \u2605\u2605\u269d\u269d\u269d view <code>country_burkina_faso.ipset</code> Burkina Faso \u2605\u2605\u2605\u269d\u269d view <code>country_burundi.ipset</code> Burundi \u2605\u2605\u2605\u269d\u269d view <code>country_cambodia.ipset</code> Cambodia \u2605\u2605\u2605\u269d\u269d view <code>country_cameroon.ipset</code> Cameroon \u2605\u2605\u2605\u269d\u269d view <code>country_canada.ipset</code> Canada \u2605\u2605\u269d\u269d\u269d view <code>country_cape_verde.ipset</code> Cape Verde \u2605\u2605\u269d\u269d\u269d view <code>country_cayman_islands.ipset</code> Cayman Islands \u2605\u2605\u269d\u269d\u269d view <code>country_cc.ipset</code> Cocos (Keeling) Islands \u269d\u269d\u269d\u269d\u269d view <code>country_central_african_republic.ipset</code> Central African Republic \u2605\u2605\u2605\u2605\u269d view <code>country_chad.ipset</code> Chad \u2605\u2605\u2605\u2605\u269d view <code>country_chile.ipset</code> Chile \u2605\u2605\u269d\u269d\u269d view <code>country_china.ipset</code> China \u2605\u2605\u2605\u2605\u2605 view <code>country_christmas_island.ipset</code> Christmas Island \u269d\u269d\u269d\u269d\u269d view <code>country_colombia.ipset</code> Colombia \u2605\u2605\u2605\u269d\u269d view <code>country_comoros.ipset</code> Comoros \u2605\u2605\u269d\u269d\u269d view <code>country_congo.ipset</code> Congo \u2605\u2605\u2605\u2605\u269d view <code>country_cook_islands.ipset</code> Cook Islands \u269d\u269d\u269d\u269d\u269d view <code>country_costa_rica.ipset</code> Costa Rica \u2605\u2605\u269d\u269d\u269d view <code>country_cote_divoire.ipset</code> C\u00f4te d'Ivoire \u2605\u2605\u2605\u269d\u269d view <code>country_croatia.ipset</code> Croatia \u2605\u2605\u269d\u269d\u269d view <code>country_cuba.ipset</code> Cuba \u2605\u2605\u2605\u269d\u269d view <code>country_curacao.ipset</code> Cura\u00e7ao \u2605\u2605\u269d\u269d\u269d view <code>country_cyprus.ipset</code> Cyprus \u2605\u2605\u269d\u269d\u269d view <code>country_czech_republic.ipset</code> Czech Republic \u2605\u2605\u269d\u269d\u269d view <code>country_democratic_republic_congo.ipset</code> Democratic Republic of the Congo \u2605\u2605\u2605\u2605\u2605 view <code>country_denmark.ipset</code> Denmark \u2605\u2605\u269d\u269d\u269d view <code>country_djibouti.ipset</code> Djibouti \u2605\u2605\u2605\u269d\u269d view <code>country_dominica.ipset</code> Dominica \u269d\u269d\u269d\u269d\u269d view <code>country_dominican_republic.ipset</code> Dominican Republic \u2605\u2605\u269d\u269d\u269d view <code>country_ecuador.ipset</code> Ecuador \u2605\u2605\u2605\u269d\u269d view <code>country_egypt.ipset</code> Egypt \u2605\u2605\u2605\u2605\u269d view <code>country_el_salvador.ipset</code> El Salvador \u2605\u2605\u2605\u269d\u269d view <code>country_equatorial_guinea.ipset</code> Equatorial Guinea \u2605\u2605\u2605\u269d\u269d view <code>country_eritrea.ipset</code> Eritrea \u2605\u2605\u2605\u269d\u269d view <code>country_estonia.ipset</code> Estonia \u2605\u2605\u269d\u269d\u269d view <code>country_eswatini.ipset</code> Eswatini \u2605\u2605\u269d\u269d\u269d view <code>country_ethiopia.ipset</code> Ethiopia \u2605\u2605\u2605\u269d\u269d view <code>country_europe.ipset</code> Europe \u2605\u2605\u269d\u269d\u269d view <code>country_falkland_islands_malvinas.ipset</code> Falkland Islands (Malvinas) \u269d\u269d\u269d\u269d\u269d view <code>country_faroe_islands.ipset</code> Faroe Islands \u269d\u269d\u269d\u269d\u269d view <code>country_fiji.ipset</code> Fiji \u2605\u2605\u269d\u269d\u269d view <code>country_finland.ipset</code> Finland \u2605\u2605\u269d\u269d\u269d view <code>country_france.ipset</code> France \u2605\u2605\u269d\u269d\u269d view <code>country_french_guiana.ipset</code> French Guiana \u2605\u2605\u269d\u269d\u269d view <code>country_french_polynesia.ipset</code> French Polynesia \u269d\u269d\u269d\u269d\u269d view <code>country_french_southern_territories.ipset</code> French Southern Territories \u269d\u269d\u269d\u269d\u269d view <code>country_gabon.ipset</code> Gabon \u2605\u2605\u2605\u269d\u269d view <code>country_gambia.ipset</code> Gambia \u2605\u2605\u2605\u269d\u269d view <code>country_georgia.ipset</code> Georgia \u2605\u2605\u269d\u269d\u269d view <code>country_germany.ipset</code> Germany \u2605\u2605\u269d\u269d\u269d view <code>country_ghana.ipset</code> Ghana \u2605\u2605\u2605\u269d\u269d view <code>country_gibraltar.ipset</code> Gibraltar \u2605\u2605\u269d\u269d\u269d view <code>country_great_britain.ipset</code> Great Britain \u2605\u2605\u269d\u269d\u269d view <code>country_greece.ipset</code> Greece \u2605\u2605\u269d\u269d\u269d view <code>country_greenland.ipset</code> Greenland \u269d\u269d\u269d\u269d\u269d view <code>country_grenada.ipset</code> Grenada \u269d\u269d\u269d\u269d\u269d view <code>country_guadeloupe.ipset</code> Guadeloupe \u2605\u2605\u269d\u269d\u269d view <code>country_guam.ipset</code> Guam \u2605\u2605\u269d\u269d\u269d view <code>country_guatemala.ipset</code> Guatemala \u2605\u2605\u2605\u269d\u269d view <code>country_guernsey.ipset</code> Guernsey \u2605\u2605\u269d\u269d\u269d view <code>country_guineabissau.ipset</code> Guinea-Bissau \u2605\u2605\u2605\u269d\u269d view <code>country_guinea.ipset</code> Guinea \u2605\u2605\u2605\u269d\u269d view <code>country_guyana.ipset</code> Guyana \u2605\u2605\u269d\u269d\u269d view <code>country_haiti.ipset</code> Haiti \u2605\u2605\u2605\u2605\u269d view <code>country_heard_island_and_mcdonald_islands.ipset</code> Heard Island and McDonald Islands \u269d\u269d\u269d\u269d\u269d view <code>country_honduras.ipset</code> Honduras \u2605\u2605\u2605\u269d\u269d view <code>country_hong_kong.ipset</code> Hong Kong \u2605\u2605\u2605\u2605\u269d view <code>country_hungary.ipset</code> Hungary \u2605\u2605\u269d\u269d\u269d view <code>country_iceland.ipset</code> Iceland \u2605\u2605\u269d\u269d\u269d view <code>country_india.ipset</code> India \u2605\u2605\u2605\u2605\u269d view <code>country_indonesia.ipset</code> Indonesia \u2605\u2605\u2605\u2605\u269d view <code>country_iran.ipset</code> Iran \u2605\u2605\u2605\u2605\u269d view <code>country_iraq.ipset</code> Iraq \u2605\u2605\u2605\u2605\u269d view <code>country_ireland.ipset</code> Ireland \u2605\u2605\u269d\u269d\u269d view <code>country_isle_of_man.ipset</code> Isle of Man \u2605\u2605\u269d\u269d\u269d view <code>country_israel.ipset</code> Israel \u2605\u2605\u2605\u269d\u269d view <code>country_italy.ipset</code> Italy \u2605\u2605\u269d\u269d\u269d view <code>country_jamaica.ipset</code> Jamaica \u2605\u2605\u2605\u269d\u269d view <code>country_japan.ipset</code> Japan \u2605\u2605\u269d\u269d\u269d view <code>country_jersey.ipset</code> Jersey \u2605\u2605\u269d\u269d\u269d view <code>country_jordan.ipset</code> Jordan \u2605\u2605\u2605\u269d\u269d view <code>country_kazakhstan.ipset</code> Kazakhstan \u2605\u2605\u2605\u269d\u269d view <code>country_kenya.ipset</code> Kenya \u2605\u2605\u2605\u269d\u269d view <code>country_kiribati.ipset</code> Kiribati \u269d\u269d\u269d\u269d\u269d view <code>country_kosovo.ipset</code> Kosovo \u2605\u2605\u269d\u269d\u269d view <code>country_kuwait.ipset</code> Kuwait \u2605\u2605\u269d\u269d\u269d view <code>country_kyrgyzstan.ipset</code> Kyrgyzstan \u2605\u2605\u2605\u269d\u269d view <code>country_laos.ipset</code> Laos \u2605\u2605\u2605\u269d\u269d view <code>country_latvia.ipset</code> Latvia \u2605\u2605\u269d\u269d\u269d view <code>country_lebanon.ipset</code> Lebanon \u2605\u2605\u2605\u269d\u269d view <code>country_lesotho.ipset</code> Lesotho \u2605\u2605\u269d\u269d\u269d view <code>country_liberia.ipset</code> Liberia \u2605\u2605\u2605\u269d\u269d view <code>country_libya.ipset</code> Libya \u2605\u2605\u2605\u2605\u269d view <code>country_liechtenstein.ipset</code> Liechtenstein \u269d\u269d\u269d\u269d\u269d view <code>country_lithuania.ipset</code> Lithuania \u2605\u2605\u269d\u269d\u269d view <code>country_luxembourg.ipset</code> Luxembourg \u2605\u2605\u269d\u269d\u269d view <code>country_macedonia_republic.ipset</code> Macedonia \u2605\u2605\u269d\u269d\u269d view <code>country_madagascar.ipset</code> Madagascar \u2605\u2605\u269d\u269d\u269d view <code>country_malawi.ipset</code> Malawi \u2605\u2605\u269d\u269d\u269d view <code>country_malaysia.ipset</code> Malaysia \u2605\u2605\u2605\u269d\u269d view <code>country_maldives.ipset</code> Maldives \u2605\u2605\u269d\u269d\u269d view <code>country_mali.ipset</code> Mali \u2605\u2605\u2605\u2605\u269d view <code>country_malta.ipset</code> Malta \u2605\u2605\u269d\u269d\u269d view <code>country_marshall_islands.ipset</code> Marshall Islands \u269d\u269d\u269d\u269d\u269d view <code>country_martinique.ipset</code> Martinique \u2605\u2605\u269d\u269d\u269d view <code>country_mauritania.ipset</code> Mauritania \u2605\u2605\u2605\u269d\u269d view <code>country_mauritius.ipset</code> Mauritius \u2605\u2605\u269d\u269d\u269d view <code>country_mayotte.ipset</code> Mayotte \u2605\u2605\u269d\u269d\u269d view <code>country_mexico.ipset</code> Mexico \u2605\u2605\u2605\u2605\u269d view <code>country_micronesia.ipset</code> Micronesia \u269d\u269d\u269d\u269d\u269d view <code>country_monaco.ipset</code> Monaco \u2605\u2605\u269d\u269d\u269d view <code>country_mongolia.ipset</code> Mongolia \u2605\u2605\u269d\u269d\u269d view <code>country_montenegro.ipset</code> Montenegro \u2605\u2605\u269d\u269d\u269d view <code>country_montserrat.ipset</code> Montserrat \u269d\u269d\u269d\u269d\u269d view <code>country_morocco.ipset</code> Morocco \u2605\u2605\u2605\u269d\u269d view <code>country_mozambique.ipset</code> Mozambique \u2605\u2605\u2605\u269d\u269d view <code>country_myanmar.ipset</code> Myanmar \u2605\u2605\u2605\u269d\u269d view <code>country_namibia.ipset</code> Namibia \u2605\u2605\u269d\u269d\u269d view <code>country_nauru.ipset</code> Nauru \u269d\u269d\u269d\u269d\u269d view <code>country_nepal.ipset</code> Nepal \u2605\u2605\u269d\u269d\u269d view <code>country_netherlands.ipset</code> Netherlands \u2605\u2605\u269d\u269d\u269d view <code>country_new_caledonia.ipset</code> New Caledonia \u2605\u2605\u269d\u269d\u269d view <code>country_new_zealand.ipset</code> New Zealand \u2605\u2605\u269d\u269d\u269d view <code>country_nicaragua.ipset</code> Nicaragua \u2605\u2605\u2605\u269d\u269d view <code>country_nigeria.ipset</code> Nigeria \u2605\u2605\u2605\u2605\u2605 view <code>country_niger.ipset</code> Niger \u2605\u2605\u2605\u269d\u269d view <code>country_niue.ipset</code> Niue \u269d\u269d\u269d\u269d\u269d view <code>country_norfolk_island.ipset</code> Norfolk Island \u269d\u269d\u269d\u269d\u269d view <code>country_northern_mariana_islands.ipset</code> Northern Mariana Islands \u269d\u269d\u269d\u269d\u269d view <code>country_north_korea.ipset</code> North Korea \u2605\u2605\u2605\u2605\u2605 view <code>country_norway.ipset</code> Norway \u2605\u2605\u269d\u269d\u269d view <code>country_oman.ipset</code> Oman \u2605\u2605\u269d\u269d\u269d view <code>country_pakistan.ipset</code> Pakistan \u2605\u2605\u2605\u2605\u2605 view <code>country_palau.ipset</code> Palau \u269d\u269d\u269d\u269d\u269d view <code>country_palestine.ipset</code> Palestine \u2605\u2605\u2605\u2605\u269d view <code>country_panama.ipset</code> Panama \u2605\u2605\u2605\u269d\u269d view <code>country_papua_new_guinea.ipset</code> Papua New Guinea \u2605\u2605\u2605\u269d\u269d view <code>country_paraguay.ipset</code> Paraguay \u2605\u2605\u2605\u269d\u269d view <code>country_peru.ipset</code> Peru \u2605\u2605\u2605\u269d\u269d view <code>country_philippines.ipset</code> Philippines \u2605\u2605\u2605\u2605\u269d view <code>country_pitcairn.ipset</code> Pitcairn Islands \u269d\u269d\u269d\u269d\u269d view <code>country_poland.ipset</code> Poland \u2605\u2605\u269d\u269d\u269d view <code>country_portugal.ipset</code> Portugal \u2605\u2605\u269d\u269d\u269d view <code>country_puerto_rico.ipset</code> Puerto Rico \u2605\u2605\u2605\u269d\u269d view <code>country_qatar.ipset</code> Qatar \u2605\u2605\u269d\u269d\u269d view <code>country_republic_moldova.ipset</code> Moldova \u2605\u2605\u269d\u269d\u269d view <code>country_reunion.ipset</code> R\u00e9union \u2605\u2605\u269d\u269d\u269d view <code>country_romania.ipset</code> Romania \u2605\u2605\u269d\u269d\u269d view <code>country_russia.ipset</code> Russia \u2605\u2605\u2605\u2605\u2605 view <code>country_rwanda.ipset</code> Rwanda \u2605\u2605\u2605\u269d\u269d view <code>country_saint_barthelemy.ipset</code> Saint Barth\u00e9lemy \u269d\u269d\u269d\u269d\u269d view <code>country_saint_helena.ipset</code> Saint Helena \u269d\u269d\u269d\u269d\u269d view <code>country_saint_kitts_nevis.ipset</code> Saint Kitts and Nevis \u269d\u269d\u269d\u269d\u269d view <code>country_saint_lucia.ipset</code> Saint Lucia \u269d\u269d\u269d\u269d\u269d view <code>country_saint_martin_north.ipset</code> Saint Martin (North) \u269d\u269d\u269d\u269d\u269d view <code>country_saint_pierre_miquelon.ipset</code> Saint Pierre and Miquelon \u269d\u269d\u269d\u269d\u269d view <code>country_saint_vincent_grenadines.ipset</code> Saint Vincent and the Grenadines \u269d\u269d\u269d\u269d\u269d view <code>country_samoa.ipset</code> Samoa \u269d\u269d\u269d\u269d\u269d view <code>country_san_marino.ipset</code> San Marino \u269d\u269d\u269d\u269d\u269d view <code>country_sao_tome_principe.ipset</code> S\u00e3o Tom\u00e9 and Pr\u00edncipe \u2605\u2605\u269d\u269d\u269d view <code>country_saudi_arabia.ipset</code> Saudi Arabia \u2605\u2605\u2605\u2605\u269d view <code>country_senegal.ipset</code> Senegal \u2605\u2605\u2605\u269d\u269d view <code>country_serbia.ipset</code> Serbia \u2605\u2605\u269d\u269d\u269d view <code>country_seychelles.ipset</code> Seychelles \u2605\u2605\u269d\u269d\u269d view <code>country_sierra_leone.ipset</code> Sierra Leone \u2605\u2605\u2605\u269d\u269d view <code>country_singapore.ipset</code> Singapore \u2605\u2605\u269d\u269d\u269d view <code>country_sint_maarten_south.ipset</code> Sint Maarten (South) \u269d\u269d\u269d\u269d\u269d view <code>country_slovakia.ipset</code> Slovakia \u2605\u2605\u269d\u269d\u269d view <code>country_slovenia.ipset</code> Slovenia \u2605\u2605\u269d\u269d\u269d view <code>country_solomon_islands.ipset</code> Solomon Islands \u269d\u269d\u269d\u269d\u269d view <code>country_somalia.ipset</code> Somalia \u2605\u2605\u2605\u2605\u2605 view <code>country_south_africa.ipset</code> South Africa \u2605\u2605\u2605\u269d\u269d view <code>country_south_georgia_and_the_south_sandwich_islands.ipset</code> South Georgia and the South Sandwich Islands \u269d\u269d\u269d\u269d\u269d view <code>country_south_korea.ipset</code> South Korea \u2605\u2605\u269d\u269d\u269d view <code>country_south_sudan.ipset</code> South Sudan \u2605\u2605\u2605\u2605\u269d view <code>country_spain.ipset</code> Spain \u2605\u2605\u269d\u269d\u269d view <code>country_sri_lanka.ipset</code> Sri Lanka \u2605\u2605\u2605\u269d\u269d view <code>country_sudan.ipset</code> Sudan \u2605\u2605\u2605\u2605\u269d view <code>country_suriname.ipset</code> Suriname \u2605\u2605\u269d\u269d\u269d view <code>country_svalbard_jan_mayen.ipset</code> Svalbard and Jan Mayen \u269d\u269d\u269d\u269d\u269d view <code>country_sweden.ipset</code> Sweden \u2605\u2605\u269d\u269d\u269d view <code>country_switzerland.ipset</code> Switzerland \u2605\u2605\u269d\u269d\u269d view <code>country_syria.ipset</code> Syria \u2605\u2605\u2605\u2605\u2605 view <code>country_taiwan.ipset</code> Taiwan \u2605\u2605\u269d\u269d\u269d view <code>country_tajikistan.ipset</code> Tajikistan \u2605\u2605\u2605\u269d\u269d view <code>country_tanzania.ipset</code> Tanzania \u2605\u2605\u2605\u269d\u269d view <code>country_thailand.ipset</code> Thailand \u2605\u2605\u2605\u269d\u269d view <code>country_timorleste.ipset</code> Timor-Leste \u269d\u269d\u269d\u269d\u269d view <code>country_togo.ipset</code> Togo \u2605\u2605\u2605\u269d\u269d view <code>country_tokelau.ipset</code> Tokelau \u269d\u269d\u269d\u269d\u269d view <code>country_tonga.ipset</code> Tonga \u269d\u269d\u269d\u269d\u269d view <code>country_trinidad_tobago.ipset</code> Trinidad and Tobago \u2605\u2605\u269d\u269d\u269d view <code>country_tunisia.ipset</code> Tunisia \u2605\u2605\u2605\u269d\u269d view <code>country_turkey.ipset</code> Turkey \u2605\u2605\u2605\u2605\u269d view <code>country_turkmenistan.ipset</code> Turkmenistan \u2605\u2605\u2605\u269d\u269d view <code>country_turks_caicos_islands.ipset</code> Turks and Caicos Islands \u269d\u269d\u269d\u269d\u269d view <code>country_tuvalu.ipset</code> Tuvalu \u269d\u269d\u269d\u269d\u269d view <code>country_uganda.ipset</code> Uganda \u2605\u2605\u2605\u269d\u269d view <code>country_ukraine.ipset</code> Ukraine \u2605\u2605\u2605\u2605\u269d view <code>country_united_arab_emirates.ipset</code> United Arab Emirates \u2605\u2605\u269d\u269d\u269d view <code>country_united_states.ipset</code> United States \u2605\u2605\u2605\u2605\u269d view <code>country_united_states_minor_outlying_islands.ipset</code> US Minor Outlying Islands \u269d\u269d\u269d\u269d\u269d view <code>country_united_states_virgin_islands.ipset</code> US Virgin Islands \u2605\u2605\u269d\u269d\u269d view <code>country_uruguay.ipset</code> Uruguay \u2605\u2605\u269d\u269d\u269d view <code>country_uzbekistan.ipset</code> Uzbekistan \u2605\u2605\u2605\u269d\u269d view <code>country_vanuatu.ipset</code> Vanuatu \u269d\u269d\u269d\u269d\u269d view <code>country_vatican_city_holy_see.ipset</code> Vatican City / Holy See \u269d\u269d\u269d\u269d\u269d view <code>country_venezuela.ipset</code> Venezuela \u2605\u2605\u2605\u269d\u269d view <code>country_vietnam.ipset</code> Vietnam \u2605\u2605\u2605\u269d\u269d view <code>country_wallis_futuna.ipset</code> Wallis and Futuna \u269d\u269d\u269d\u269d\u269d view <code>country_western_sahara.ipset</code> Western Sahara \u2605\u2605\u2605\u269d\u269d view <code>country_yemen.ipset</code> Yemen \u2605\u2605\u2605\u2605\u2605 view <code>country_zambia.ipset</code> Zambia \u2605\u2605\u269d\u269d\u269d view <code>country_zimbabwe.ipset</code> Zimbabwe \u2605\u2605\u2605\u269d\u269d view <p> </p>", "tags": ["services", "blocklist.configserver.dev"]}, {"location": "advanced/services/download.configserver/", "title": "Advanced \u203a Services \u203a download.configserver.dev", "text": "", "tags": ["services", "download.configserver.dev"]}, {"location": "advanced/services/download.configserver/#downloadconfigserverdev", "title": "download.configserver.dev", "text": "<p>The subdomain download.configserver.dev provides a convenient way to download the latest version of CSF without needing to look up the name of the current release. Downloads can be accessed directly through your web browser, or from the command line using tools such as <code>wget</code> or <code>curl</code>. Below, we outline the basic usage to help you quickly obtain the latest version of CSF.</p> <p>This mirrors the service originally offered by the CSF developers, which was the standard method of obtaining fresh copies of CSF for many years. Our version works the same way, with a few additional features that are described in the Advanced section.</p> <code>.zip</code> vs <code>.tgz</code> format <p>Our documentation frequently mentions both <code>.zip</code> and <code>.tgz</code> releases of CSF. </p> <p>When we initially developed addons for CSF, we pushed all of our releases in a <code>.zip</code> archive. </p> <p>However, after taking over full development of CSF, we opted to migrate back to the <code>.tgz</code> format to keep conformity with how the original developer packaged releases. This is why our scripts mention both extensions, and why our scripts look for both.</p> <p></p>", "tags": ["services", "download.configserver.dev"]}, {"location": "advanced/services/download.configserver/#usage", "title": "Usage", "text": "<p>This section explains how to utilize the CSF download service.</p> <p> </p> <p> </p>", "tags": ["services", "download.configserver.dev"]}, {"location": "advanced/services/download.configserver/#using-browser", "title": "Using Browser", "text": "<p>The simplest way to use this service is via your browser. Visit https://download.configserver.dev to download the latest CSF as a <code>.zip</code> or <code>.tgz</code>, depending on the release.</p> <p>By default, all downloads are named <code>csf.ext</code>, making them easy to use in scripts without worrying about the version number.  </p> <p>If you do need the exact version of the release you downloaded:</p> <ul> <li>Open the downloaded archive and check the <code>version.txt</code> file, OR;</li> <li>Append <code>?name=preserve</code> to the URL, for example: https://download.configserver.dev?name=preserve, OR;</li> <li>Query our api, and get a json response which contains the latest version number by using <code>https://download.configserver.dev/?output=json</code></li> </ul> <p> </p> <p> </p>", "tags": ["services", "download.configserver.dev"]}, {"location": "advanced/services/download.configserver/#using-cli", "title": "Using CLI", "text": "<p>You can use command-line tools like <code>wget</code> or <code>curl</code> to fetch the latest CSF release. For the simplest download method, see With Filename.</p> <ul> <li>With Filename</li> <li>Without Filename</li> </ul> <p></p>", "tags": ["services", "download.configserver.dev"]}, {"location": "advanced/services/download.configserver/#with-filename", "title": "With Filename", "text": "<p>When downloading CSF from the CLI, you can append <code>csf.zip</code> or <code>csf.tgz</code> to the URL. This works just like the original download servers.</p>  wget curl <pre><code>wget https://download.configserver.dev/csf.zip\n</code></pre> <pre><code>curl -O https://download.configserver.dev/csf.zip\n</code></pre> <p></p>", "tags": ["services", "download.configserver.dev"]}, {"location": "advanced/services/download.configserver/#without-filename", "title": "Without Filename", "text": "<p>You can also use <code>wget</code> or <code>curl</code> without adding a filename. In this mode, the server automatically selects <code>.zip</code> or <code>.tgz</code>, but your commands must support <code>content-disposition</code>. See the note below for details.</p> Get latest version from CLI without filename <p>If you want to use curl or wget to download the latest version of CSF, but not place the filename on the end of the url; please read these notes.</p> <p>When using <code>wget</code> or <code>curl</code> with our download service without explicitly including a filename (for example, https://download.configserver.dev/ instead of https://download.configserver.dev/csf.zip), the server decides which file to serve from the latest release. To help users, it automatically provides the correct archive (.zip or .tgz) and sends a <code>Content-Disposition</code> header with the proper filename.</p> <p>By default, <code>wget</code> will ignore this header unless you pass <code>--content-disposition</code>. Without it, the file is saved under a generic name like <code>index.html</code>, even though the correct archive was downloaded. </p> <p>Similarly, <code>curl</code> requires the flags <code>-JLO</code>:</p> <ul> <li><code>-J</code> tells curl to respect the server\u2019s Content-Disposition header.</li> <li><code>-L</code> follows redirects until it reaches the actual file.</li> <li><code>-O</code> writes the file using the server-provided name instead of dumping it to stdout.</li> </ul> <p>If you don\u2019t use these options, the tools won\u2019t know the intended filename and will either mislabel the file or refuse to save it. This is why wget <code>--content-disposition</code> and curl <code>-JLO</code> are the recommended ways to pull the latest CSF package without specifying the filename directly.</p> <p></p>  wget curl <pre><code>wget --content-disposition https://download.configserver.dev/\n</code></pre> <pre><code>curl -JLO https://download.configserver.dev/\n</code></pre> <p></p> <p></p>", "tags": ["services", "download.configserver.dev"]}, {"location": "advanced/services/download.configserver/#advanced-options", "title": "Advanced Options", "text": "<p>Our download service includes a few advanced features that may interest certain users.</p> <p></p>", "tags": ["services", "download.configserver.dev"]}, {"location": "advanced/services/download.configserver/#download-api", "title": "Download API", "text": "<p>Our API provides a structured JSON response, which can be used in your own scripts to retrieve information about the latest release. Below are some examples of how to use this feature. </p> <p></p>", "tags": ["services", "download.configserver.dev"]}, {"location": "advanced/services/download.configserver/#fetch-json-response", "title": "Fetch JSON Response", "text": "<p>To request a JSON response from our API, append <code>?output=json</code> to the end of your URL, for example:</p> <ul> <li>https://download.configserver.dev/?output=json</li> </ul> <p></p>", "tags": ["services", "download.configserver.dev"]}, {"location": "advanced/services/download.configserver/#fetch-latest-release-file", "title": "Fetch Latest Release File", "text": "<p>You can use our API to download the latest CSF release directly. This command retrieves the download URL and filename from the JSON response, and then downloads the file with the correct name.</p> <ol> <li>Gets the latest CSF release info from the API in JSON.</li> <li>Extracts the download URL and filename.</li> <li>Downloads the file using the URL and saves it as the correct filename.</li> </ol>  curl wget + curl <pre><code>curl -s \"https://download.configserver.dev/?output=json\" \\\n  | jq -r '.download_url + \" \" + .file_name' \\\n  | xargs -n2 sh -c 'curl -L -o \"$1\" \"$0\"'\n</code></pre> <pre><code>eval $(curl -s \"https://download.configserver.dev/?output=json\" | \\\n  jq -r '\"wget -O \\(.file_name) \\(.download_url)\"') \n</code></pre> <p></p>", "tags": ["services", "download.configserver.dev"]}, {"location": "advanced/services/download.configserver/#retrieve-only-the-download-url", "title": "Retrieve Only the Download URL", "text": "<p>If you just need the direct URL for the latest release, you can pull it from the JSON response. This will output the URL as a plain string, without downloading the file.</p> <ol> <li>Gets the latest CSF release info from the API in JSON.</li> <li>Extracts the download URL and returns the string in terminal.</li> </ol>  Command Output <pre><code>curl -s \"https://download.configserver.dev/?output=json\" | jq -r '.download_url'\n</code></pre> <pre><code>https://github.com/Aetherinox/csf-firewall/releases/download/15.00/csf-firewall-v15.00.zip\n</code></pre> <p> </p>", "tags": ["services", "download.configserver.dev"]}, {"location": "advanced/services/download.configserver/#preserve-filename", "title": "Preserve Filename", "text": "<p>By default, the download service fetches the latest CSF release and renames it to <code>csf.zip</code> or <code>csf.tgz</code>.  If you prefer, you can keep the original release name, such as <code>csf-firewall-vXX.XX.zip</code> or <code>csf-firewall-vXX.XX.tar</code> by appending <code>?name=preserve</code> to your url, such as:</p> <ul> <li>https://download.configserver.dev/?name=preserve</li> </ul> <p> </p>", "tags": ["services", "download.configserver.dev"]}, {"location": "advanced/services/get.configserver/", "title": "Advanced \u203a Services \u203a get.configserver.dev", "text": "", "tags": ["services", "get.sh", "get.configserver.dev"]}, {"location": "advanced/services/get.configserver/#getconfigserverdev", "title": "get.configserver.dev", "text": "<p>The subdomain get.configserver.dev provides a simple online service for downloading the latest version of CSF using a Bash script.  </p> <p>By default, running the script downloads the latest CSF release to the current directory. Optional arguments allow you to extend its functionality, including automatically extracting the archive and installing CSF immediately after download.</p> <code>.zip</code> vs <code>.tgz</code> format <p>Our documentation frequently mentions both <code>.zip</code> and <code>.tgz</code> releases of CSF. </p> <p>When we initially developed addons for CSF, we pushed all of our releases in a <code>.zip</code> archive. </p> <p>However, after taking over full development of CSF, we opted to migrate back to the <code>.tgz</code> format to keep conformity with how the original developer packaged releases. This is why our scripts mention both extensions, and why our scripts look for both.</p> <p></p>", "tags": ["services", "get.sh", "get.configserver.dev"]}, {"location": "advanced/services/get.configserver/#usage", "title": "Usage", "text": "<p>This section explains how the get.sh script can be utilized when obtaining the latest version of CSF from our servers.</p>", "tags": ["services", "get.sh", "get.configserver.dev"]}, {"location": "advanced/services/get.configserver/#examples", "title": "Examples", "text": "Command Description <code>bash &lt;(wget -qO - https://get.configserver.dev)</code> Download CSF w/ filename <code>csf.zip</code> or <code>csf.tgz</code> <code>bash &lt;(wget -qO - https://get.configserver.dev) --preserve-name</code> Download CSF w/ filename <code>csf-firewall-vXX.XX.zip</code> or <code>csf-firewall-vXX.XX.tgz</code> <code>bash &lt;(wget -qO - https://get.configserver.dev) --extract</code> Download CSF w/ filename <code>csf.zip</code> or <code>csf.tgz</code>, extract to <code>csf</code> <code>bash &lt;(wget -qO - https://get.configserver.dev) --extract --folder csftest</code> Download CSF w/ filename <code>csf.zip</code> or <code>csf.tgz</code>, extract to <code>csftest</code> <code>bash &lt;(wget -qO - https://get.configserver.dev) --install</code> Download CSF w/ filename <code>csf.zip</code> or <code>csf.tgz</code>, extract to <code>csf</code>, install CSF <code>bash &lt;(wget -qO - https://get.configserver.dev) --install --folder csftest</code> Download CSF w/ filename <code>csf.zip</code> or <code>csf.tgz</code>, extract to <code>csftest</code>, install CSF <code>bash &lt;(wget -qO - https://get.configserver.dev) --install --dryrun</code> Download CSF w/ filename <code>csf.zip</code> or <code>csf.tgz</code>, extract to <code>csf</code>, simulate install CSF <code>bash &lt;(wget -qO - https://get.configserver.dev) --install --folder csftest --dryrun</code> Download CSF w/ filename <code>csf.zip</code> or <code>csf.tgz</code>, extract to <code>csftest</code>, simulate install CSF <code>bash &lt;(wget -qO - https://get.configserver.dev) --install-only</code> No download, install existing local folder <code>csf</code> <code>bash &lt;(wget -qO - https://get.configserver.dev) --install-only --folder csftest</code> No download, install existing local folder <code>csftest</code> <code>bash &lt;(wget -qO - https://get.configserver.dev) --install-only --dryrun</code> No download, simulate install existing local folder <code>csf</code> <code>bash &lt;(wget -qO - https://get.configserver.dev) --install-only --folder csftest --dryrun</code> No download, simulate install existing local folder <code>csftest</code> <code>bash &lt;(wget -qO - https://get.configserver.dev) --clean</code> Delete existing <code>csf.zip</code> or <code>csf.tgz</code>, remove folder <code>csf</code> <code>bash &lt;(wget -qO - https://get.configserver.dev) --clean --folder csftest</code> Delete existing <code>csf.zip</code> or <code>csf.tgz</code>, remove folder <code>csftest</code>", "tags": ["services", "get.sh", "get.configserver.dev"]}, {"location": "advanced/services/get.configserver/#standard", "title": "Standard", "text": "<p>The command below will download the latest version of CSF and place the archive file on your machine in the folder where you ran the command. The archive file will either be <code>csf.zip</code> or <code>csf.tgz</code>, depending on which release is available.</p>  wget curl <pre><code>bash &lt;(wget -qO - https://get.configserver.dev)\n</code></pre> <pre><code>bash &lt;(curl -sL https://get.configserver.dev)\n</code></pre> <p> </p>", "tags": ["services", "get.sh", "get.configserver.dev"]}, {"location": "advanced/services/get.configserver/#advanced", "title": "Advanced", "text": "<p>The get.sh script has additional arguments that you can pass which expands on its functionality. </p> <p></p>", "tags": ["services", "get.sh", "get.configserver.dev"]}, {"location": "advanced/services/get.configserver/#download-only", "title": "Download Only", "text": "<p>To download the latest version of CSF and do nothing else; pass no arguments.</p>  wget curl <pre><code>bash &lt;(wget -qO - https://get.configserver.dev)\n</code></pre> <pre><code>bash &lt;(curl -sL https://get.configserver.dev)\n</code></pre> <p> </p>", "tags": ["services", "get.sh", "get.configserver.dev"]}, {"location": "advanced/services/get.configserver/#download-extract", "title": "Download + Extract", "text": "<p>Downloads the latest version of CSF to your local machine as the file <code>csf.zip</code> or <code>csf.tgz</code> and extracts to  <code>csf</code></p>  wget curl <pre><code>bash &lt;(wget -qO - https://get.configserver.dev) --extract\n</code></pre> <pre><code>bash &lt;(curl -sL https://get.configserver.dev)  --extract\n</code></pre> <p></p> <p>Out of box, this script extracts CSF to the folder  <code>csf</code>; you can change the default extraction folder with:</p>  Command <pre><code>bash &lt;(wget -qO - https://get.configserver.dev) --extract --folder csf-folder\n</code></pre> <p> </p>", "tags": ["services", "get.sh", "get.configserver.dev"]}, {"location": "advanced/services/get.configserver/#download-extract-install", "title": "Download + Extract + Install", "text": "<p>Downloads the latest version of CSF to your local machine as the file <code>csf.zip</code> or <code>csf.tgz</code>, extracts to  <code>csf</code>, and installs by running  <code>csf/install.sh</code></p>  wget curl <pre><code>bash &lt;(wget -qO - https://get.configserver.dev) --install\n</code></pre> <pre><code>bash &lt;(curl -sL https://get.configserver.dev)  --install\n</code></pre> <p></p> <p>Out of box, this script extracts CSF to the folder  <code>csf</code>, and then installs by running the file  <code>csf/install.sh</code>. You can change the default folder with:</p>  Command <pre><code>bash &lt;(wget -qO - https://get.configserver.dev) --install --folder csf-folder\n</code></pre> <p> </p>", "tags": ["services", "get.sh", "get.configserver.dev"]}, {"location": "advanced/services/get.configserver/#download-extract-install-dryrun", "title": "Download + Extract + Install (Dryrun)", "text": "<p>Downloads the latest version of CSF to your local machine as the file <code>csf.zip</code> or <code>csf.tgz</code>, extracts to  <code>csf</code>, and does a dry-run install without actually installing anything</p>  wget curl <pre><code>bash &lt;(wget -qO - https://get.configserver.dev) --install --dryrun\n</code></pre> <pre><code>bash &lt;(curl -sL https://get.configserver.dev)  --install --dryrun\n</code></pre> <p></p> <p>Out of box, this script extracts CSF to the folder  <code>csf</code>, and then installs by running the file  <code>csf/install.sh</code>. You can change the default folder with:</p>  Command <pre><code>bash &lt;(wget -qO - https://get.configserver.dev) --install --folder csf-folder --dryrun\n</code></pre> <p> </p>", "tags": ["services", "get.sh", "get.configserver.dev"]}, {"location": "advanced/services/get.configserver/#install-local-folder", "title": "Install Local Folder", "text": "<p>Does not download or extract CSF. Installs an existing local copy of CSF contained within the folder  <code>csf</code>. This will error if you attempt to pass this argument and the file  <code>csf/install.sh</code> does not exist.</p>  wget curl <pre><code>bash &lt;(wget -qO - https://get.configserver.dev) --install-only\n</code></pre> <pre><code>bash &lt;(curl -sL https://get.configserver.dev)  --install-only\n</code></pre> <p></p> <p>Out of box, this script looks for the install file  <code>csf/install.sh</code>; you can change the folder with the command below. You must have the file  <code>csf-folder/install.sh</code>:</p>  Command <pre><code>bash &lt;(wget -qO - https://get.configserver.dev) --install-only --folder csf-folder\n</code></pre> <p> </p>", "tags": ["services", "get.sh", "get.configserver.dev"]}, {"location": "advanced/services/get.configserver/#install-local-folder-dryrun", "title": "Install Local Folder (Dryrun)", "text": "<p>Does a dry-run installs on an existing local copy of CSF contained within the folder  <code>csf</code>, but does not actually install CSF. This will error if you attempt to pass this argument and the file  <code>csf/install.sh</code> does not exist.</p>  wget curl <pre><code>bash &lt;(wget -qO - https://get.configserver.dev) --install-only --dryrun\n</code></pre> <pre><code>bash &lt;(curl -sL https://get.configserver.dev)  --install-only --dryrun\n</code></pre> <p></p> <p>Out of box, this script looks for the install file  <code>csf/install.sh</code>; you can change the folder with the command below. You must have the path  <code>csf-folder/install.sh</code>:</p>  Command <pre><code>bash &lt;(wget -qO - https://get.configserver.dev) --install-only --folder csf-folder --dryrun\n</code></pre> <p> </p>", "tags": ["services", "get.sh", "get.configserver.dev"]}, {"location": "advanced/services/get.configserver/#clean", "title": "Clean", "text": "<p>Removes any existing <code>.zip</code> and <code>.tgz</code> files, removes local  <code>csf</code> folders.</p>  wget curl <pre><code>bash &lt;(wget -qO - https://get.configserver.dev) --clean\n</code></pre> <pre><code>bash &lt;(curl -sL https://get.configserver.dev)  --clean\n</code></pre> <p> </p>", "tags": ["services", "get.sh", "get.configserver.dev"]}, {"location": "advanced/services/get.configserver/#preserve-preserve-filename", "title": "Preserve Preserve Filename", "text": "<p>Out of box, the get.sh script finds the latest version of CSF. When it downloads the archive <code>.zip</code> or <code>.tgz</code> to your machine, it automatically re-names the archive file  <code>csf.xxx</code>. </p> <p>You can skip the re-name to  <code>csf.zip/tgz</code> and preseve the original release's archive name, which is typically <code>csf-firewall-vXX.XX.zip</code> or <code>csf-firewall-vXX.XX.tgz</code>.</p>  wget curl <pre><code>bash &lt;(wget -qO - https://get.configserver.dev) --preserve-name\n</code></pre> <pre><code>bash &lt;(curl -sL https://get.configserver.dev)  --preserve-name\n</code></pre> <p></p> <p>We have provided examples of what each command does:</p>  Without Parameter With Parameter <p>Running this command will download the latest CSF release, and name the archive file <code>csf.zip</code> or <code>csf.tgz</code>.</p> <pre><code>bash &lt;(wget -qO - https://get.configserver.dev)\n</code></pre> <p>Running this command will download the latest CSF release, and name the archive file <code>csf-firewall-vXX.XX.zip</code> or <code>csf-firewall-vXX.XX.tgz</code>.</p> <pre><code>bash &lt;(wget -qO - https://get.configserver.dev)  --preserve-name\n</code></pre> <p></p> <p></p>", "tags": ["services", "get.sh", "get.configserver.dev"]}, {"location": "advanced/services/get.configserver/#arguments", "title": "Arguments", "text": "<p>The get.sh script includes numerous arguments that can be passed to expand the functionality. The available arguments are listed below.</p> <p></p>", "tags": ["services", "get.sh", "get.configserver.dev"]}, {"location": "advanced/services/get.configserver/#extract", "title": "Extract", "text": "<p>15.10 <code>.sh</code> get.sh <code>-e,  --extract</code> </p> <p>Downloads the latest version of CSF, saves it to your machine as <code>csf.zip</code> or <code>csf.tgz</code>, extracts it to a local folder.</p> <p> </p>", "tags": ["services", "get.sh", "get.configserver.dev"]}, {"location": "advanced/services/get.configserver/#install", "title": "Install", "text": "<p>15.10 <code>.sh</code> get.sh <code>-i,  --install</code> </p> <p>Downloads the latest version of CSF, saves it to your machine as <code>csf.zip</code> or <code>csf.tgz</code>, extracts it to a local folder., and then run the CSF <code>install.sh</code> installation wizard.</p> <p> </p>", "tags": ["services", "get.sh", "get.configserver.dev"]}, {"location": "advanced/services/get.configserver/#install-only", "title": "Install Only", "text": "<p>15.10 <code>.sh</code> get.sh <code>-I,  --install-only</code> </p> <p>Requires an existing local extracted version of CSF which resides in a folder (defaults to  <code>csf</code>). Default folder can be changed with <code>-f</code>, <code>--folder</code></p> <p> </p>", "tags": ["services", "get.sh", "get.configserver.dev"]}, {"location": "advanced/services/get.configserver/#folder", "title": "Folder", "text": "<p>15.10 <code>.sh</code> get.sh <code>-f,  --folder</code> </p> <p>Allows you to override the default extraction and installation folder  <code>csf</code>. Can be used in combination with:</p> <ul> <li>Install</li> <li>Install Only</li> </ul> <p> </p>", "tags": ["services", "get.sh", "get.configserver.dev"]}, {"location": "advanced/services/get.configserver/#preserve-original-filename", "title": "Preserve Original Filename", "text": "<p>15.10 <code>.sh</code> get.sh <code>-p,  --preserve-name</code> </p> <p>When downloading the latest version of CSF, the script automatically re-names the latest release archive file from <code>csf-firewall-vXX.XX.zip</code> to <code>csf.zip</code>. Passing this parameter skips the re-name, and downloads the file to your system as <code>csf-firewall-vXX.XX.zip</code>.</p> <p> </p>", "tags": ["services", "get.sh", "get.configserver.dev"]}, {"location": "advanced/services/get.configserver/#dryrun", "title": "Dryrun", "text": "<p>15.10 <code>.sh</code> get.sh <code>-D,  --dryrun</code> </p> <p>When <code>--install</code> or <code>--install-only</code> are passed, this arguments simulations installation, but does not actually install CSF to your system.</p> <p> </p>", "tags": ["services", "get.sh", "get.configserver.dev"]}, {"location": "advanced/services/get.configserver/#clean_1", "title": "Clean", "text": "<p>15.10 <code>.sh</code> get.sh <code>-c,  --clean</code> </p> <p>Removes any <code>csf.zip</code> or <code>csf.tgz</code> files lintering within the folder. Also removes any extracted csf files and folders.</p> <p> </p>", "tags": ["services", "get.sh", "get.configserver.dev"]}, {"location": "advanced/services/get.configserver/#help", "title": "Help", "text": "<p>15.10 <code>.sh</code> get.sh <code>-h,  --help</code> </p> <p>Shows the help menu for the get.sh script. Performs no other actions.</p> <p> </p>", "tags": ["services", "get.sh", "get.configserver.dev"]}, {"location": "advanced/services/get.configserver/#version", "title": "Version", "text": "<p>15.10 <code>.sh</code> get.sh <code>-v,  --version</code> </p> <p>Shows the current version of the get.sh script being used.</p> <p></p> <p></p>", "tags": ["services", "get.sh", "get.configserver.dev"]}, {"location": "advanced/services/get.configserver/#source-code", "title": "Source Code", "text": "<p>The source code for get.configserver.dev can be found within the official CSF repository below:</p> <ul> <li> Get.sh Source Code</li> </ul> get.sh<pre><code>#!/bin/sh\n\n# #\n#   @app                ConfigServer Firewall &amp; Security (CSF)\n#                       Login Failure Daemon (LFD)\n#   @service            get.configserver.dev\n#   @script             Bash \u203a Script \u203a Installation\n#   @desc               installation script for csf\n#   @website            https://configserver.dev\n#   @docs               https://docs.configserver.dev\n#   @download           https://download.configserver.dev\n#   @repo               https://github.com/Aetherinox/csf-firewall\n#   @copyright          Copyright (C) 2025-2026 Aetherinox\n#   @license            GPLv3\n#   @updated            09.28.2025\n#\n#   This program is free software; you can redistribute it and/or modify\n#   it under the terms of the GNU General Public License as published by\n#   the Free Software Foundation; either version 3 of the License, or (at\n#   your option) any later version.\n#\n#   This program is distributed in the hope that it will be useful, but\n#   WITHOUT ANY WARRANTY; without even the implied warranty of\n#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n#   General Public License for more details.\n#\n#   You should have received a copy of the GNU General Public License\n#   along with this program; if not, see &lt;https://www.gnu.org/licenses&gt;.\n# #\n\n# #\n#   @usage              Download Only                               sh get.sh\n#                       Download Only (Maintain original filename)  sh get.sh --preserve-name\n#                       Download + Extract                          sh get.sh --extract\n#                       Download + Extract Custom Dir               sh get.sh --extract --folder csftemp\n#                       Download + Extract + Install                sh get.sh --install\n#                       Download + Extract + Install Custom Dir     sh get.sh --install --folder csftemp\n#                       Download + Install (Dryrun)                 sh get.sh --install --dryrun\n#                       Install Only Existing Archive               sh get.sh --install-only\n#                       Install Only Existing Archive (Dryrun)      sh get.sh --install-only --dryrun\n#                       Clean existing archive + folder             sh get.sh --clean\n#                       Help menu                                   sh get.sh --help\n#                       Version information                         sh get.sh --version\n#   \n#   @notes              --install                                   automatically extracts\n#                       --dryrun                                    passed to csf install.sh script when used\n#                       --install-only                              requires existing .tar/.zip; \n#                                                                   will not download new from github.\n#                       --clean                                     removes .tar/.zip and csf folder\n# #\n\n# #\n#   define \u203a colors\n# #\n\nesc=$(printf '\\033')\nend=\"${esc}[0m\"\nbold=\"${esc}[1m\"\ndim=\"${esc}[2m\"\nunderline=\"${esc}[4m\"\nblink=\"${esc}[5m\"\nwhite=\"${esc}[97m\"\nblack=\"${esc}[0;30m\"\nredl=\"${esc}[0;91m\"\nredd=\"${esc}[38;5;196m\"\nmagental=\"${esc}[0;95m\"\nmagentad=\"${esc}[0;35m\"\nfuchsial=\"${esc}[38;5;205m\"\nfuchsiad=\"${esc}[38;5;198m\"\nbluel=\"${esc}[38;5;75m\"\nblued=\"${esc}[38;5;33m\"\ngreenl=\"${esc}[38;5;76m\"\ngreend=\"${esc}[38;5;2m\"\norangel=\"${esc}[0;93m\"\noranged=\"${esc}[38;5;202m\"\nyellowl=\"${esc}[38;5;190m\"\nyellowd=\"${esc}[38;5;184m\"\ngreyl=\"${esc}[38;5;250m\"\ngreym=\"${esc}[38;5;244m\"\ngreyd=\"${esc}[0;90m\"\nnavy=\"${esc}[38;5;62m\"\nolive=\"${esc}[38;5;144m\"\npeach=\"${esc}[38;5;210m\"\n\n# #\n#   define \u203a general\n# #\n\napp_title=\"ConfigServer Firewall &amp; Security\"\napp_about=\"Bash utility to download the latest version of ConfigServer Firewall from the official github repository.\"\napp_repo_branch=\"main\"\napp_ver=1.0.0\napp_repo=\"Aetherinox/csf-firewall\"\ngithub_url=\"https://github.com/$app_repo\"\napi_url=\"https://api.github.com/repos/$app_repo/releases/latest\"\nfile_release=\"csf-firewall-v\"\nfile_installer=\"install.sh\"\nfolder_extract=\"csf\"\n\n# #\n#   define \u203a args\n# #\n\nargExtract=\"false\"\nargInstall=\"false\"\nargInstallOnly=\"false\"\nargDryrun=\"false\"\nargInstaller=\"\"\nargDev=\"false\"\nargStatus=\"downloaded\"\nargOriginalName=\"false\"\nargFolder=\"$folder_extract\"\n\n# #\n#   define \u203a files\n# #\n\napp_file_this=$(basename \"$0\")          #  get.sh (with ext)\napp_file_bin=\"${app_file_this%.*}\"      #  get (without ext)\n\n# #\n#   define \u203a folders\n# #\n\napp_dir=$(dirname -- \"$0\")\napp_dir=$(cd \"$app_dir\" &amp;&amp; pwd)\napp_dir_this_dir=$PWD\n\n# #\n#   https://man7.org/linux/man-pages/man1/date.1.html\n#   \n#   Thu, 01 May 2025 14:33:00 +0200\n#   \n#   %a      locale's abbreviated weekday name (e.g., Sun)\n#   %d      day of month (e.g., 01)\n#   %b      locale's abbreviated month name (e.g., Jan)\n#   %Y      year\n#   %H      hour (00..23)\n#   %M      minute (00..59)\n#   %S      second (00..60)\n# #\n\ndate_now=$(date -u '+%a, %d %b %Y %H:%M:%S')\ndate_stamp=$(date -u '+%m/%d/%Y %H:%M')\n\n# #\n#   func \u203a usage menu\n# #\n\nopt_usage()\n{\n    echo\n    printf \"  ${bluel}${app_title}${end}\\n\" 1&gt;&amp;2\n    printf \"  ${greym}${app_about}${end}\\n\" 1&gt;&amp;2\n    printf \"  ${greyd}version:${end} ${greyd}$app_ver${end}\\n\" 1&gt;&amp;2\n    printf \"  ${fuchsiad}$app_file_this${end} ${greyd}[${greym}--help${greyd}]${greyd}  |  ${greyd}[${greym}--version${greyd}]${greyd}  |  ${greyd}[${greym}--clean${greyd}]${greyd}  |  ${greyd}[${greym}--extract${greyd}${end} ${greyd}[${greym}--install${greyd}] ${end}${greyd}[${greym}--dryrun${greyd}]]${greyd}  |  ${greyd}[${greym}--install-only${greyd} ${greyd}[${greym}--dryrun${greyd}]]${greyd}  |  ${greyd}[${greym}--install${greyd} ${greyd}[${greym}--dryrun${greyd}]]${end}\" 1&gt;&amp;2\n    echo\n    echo\n    printf '  %-5s %-40s\\n' \"${greyd}Syntax:${end}\" \"\" 1&gt;&amp;2\n    printf '  %-5s %-30s %-40s\\n' \"    \" \"${greyd}Command${end}           \" \"${fuchsiad}$app_file_this${greyd} [ ${greym}-option ${greyd}[ ${yellowd}arg${greyd} ]${greyd} ]${end}\" 1&gt;&amp;2\n    printf '  %-5s %-30s %-40s\\n' \"    \" \"${greyd}Options${end}           \" \"${fuchsiad}$app_file_this${greyd} [ ${greym}-h${greyd} | ${greym}--help${greyd} ]${end}\" 1&gt;&amp;2\n    printf '  %-5s %-30s %-40s\\n' \"    \" \"    ${greym}-A${end}            \" \" ${white}required\" 1&gt;&amp;2\n    printf '  %-5s %-30s %-40s\\n' \"    \" \"    ${greym}-A...${end}         \" \" ${white}required; multiple can be specified\" 1&gt;&amp;2\n    printf '  %-5s %-30s %-40s\\n' \"    \" \"    ${greym}[ -A ]${end}        \" \" ${white}optional\" 1&gt;&amp;2\n    printf '  %-5s %-30s %-40s\\n' \"    \" \"    ${greym}[ -A... ]${end}     \" \" ${white}optional; multiple can be specified\" 1&gt;&amp;2\n    printf '  %-5s %-30s %-40s\\n' \"    \" \"    ${greym}{ -A | -B }${end}   \" \" ${white}one or the other; do not use both\" 1&gt;&amp;2\n    printf '  %-5s %-30s %-40s\\n' \"    \" \"${greyd}Arguments${end}         \" \"${fuchsiad}$app_file_this${end} ${greyd}[ ${greym}-d${yellowd} arg${greyd} | ${greym}--name ${yellowd}arg${greyd} ]${end}${yellowd} arg${end}\" 1&gt;&amp;2\n    printf '  %-5s %-30s %-40s\\n' \"    \" \"${greyd}Examples${end}          \" \"${fuchsiad}$app_file_this${end} ${end}\" 1&gt;&amp;2\n    printf '  %-5s %-30s %-40s\\n' \"    \" \"${greyd}${end}                  \" \"${fuchsiad}$app_file_this${end} ${greym}--install${yellowd} ${end}\" 1&gt;&amp;2\n    printf '  %-5s %-30s %-40s\\n' \"    \" \"${greyd}${end}                  \" \"${fuchsiad}$app_file_this${end} ${greym}--extract${yellowd} ${greym}--install${yellowd} ${end}\" 1&gt;&amp;2\n    printf '  %-5s %-30s %-40s\\n' \"    \" \"${greyd}${end}                  \" \"${fuchsiad}$app_file_this${end} ${greym}--extract${yellowd} ${greym}--install${yellowd} ${greym}--dryrun${yellowd} ${end}\" 1&gt;&amp;2\n    printf '  %-5s %-30s %-40s\\n' \"    \" \"${greyd}${end}                  \" \"${fuchsiad}$app_file_this${end} ${greym}--install${yellowd} ${greym}--dryrun${yellowd} ${end}\" 1&gt;&amp;2\n    printf '  %-5s %-30s %-40s\\n' \"    \" \"${greyd}${end}                  \" \"${fuchsiad}$app_file_this${end} ${greym}--install-only${yellowd} ${end}\" 1&gt;&amp;2\n    printf '  %-5s %-30s %-40s\\n' \"    \" \"${greyd}${end}                  \" \"${fuchsiad}$app_file_this${end} ${greym}--install-only${yellowd} ${greym}--dryrun${yellowd} ${end}\" 1&gt;&amp;2\n    printf '  %-5s %-30s %-40s\\n' \"    \" \"${greyd}${end}                  \" \"${fuchsiad}$app_file_this${end} ${greyd}[ ${greym}--help${greyd} | ${greym}-h${greyd} | ${greym}/?${greyd} ]${end}\" 1&gt;&amp;2\n    echo\n    printf '  %-5s %-40s\\n' \"${greyd}Options:${end}\" \"\" 1&gt;&amp;2\n    printf '  %-5s %-81s %-40s\\n' \"    \" \"${blued}-e${greyd},${blued}  --extract ${yellowd}${end}                    \" \"download, extract latest version of csf ${navy}&lt;default&gt; ${peach}$argExtract ${end}\" 1&gt;&amp;2\n    printf '  %-5s %-81s %-40s\\n' \"    \" \"${blued}-i${greyd},${blued}  --install ${yellowd}${end}                    \" \"download, extract, and install latest version of csf ${end} ${navy}&lt;default&gt; ${peach}$argInstall ${end}\" 1&gt;&amp;2\n    printf '  %-5s %-81s %-40s\\n' \"    \" \"${blued}-I${greyd},${blued}  --install-only ${yellowd}${end}               \" \"no download, no extract, installs csf from existing folder ${navy}&lt;default&gt; ${peach}$argInstallOnly ${end}\" 1&gt;&amp;2\n    printf '  %-5s %-81s %-40s\\n' \"    \" \"${blued}-p${greyd},${blued}  --preserve-name ${yellowd}${end}              \" \"preserves original filename, skips rename to csf.zip ${navy}&lt;default&gt; ${peach}$argOriginalName ${end}\" 1&gt;&amp;2\n    printf '  %-5s %-81s %-40s\\n' \"    \" \"${blued}-f${greyd},${blued}  --folder ${yellowd}&lt;string&gt;${end}             \" \"override default folder where csf is extracted ${navy}&lt;default&gt; ${peach}$argFolder ${end}\" 1&gt;&amp;2\n    printf '  %-5s %-81s %-40s\\n' \"    \" \"${blued}-c${greyd},${blued}  --clean ${yellowd}${end}                      \" \"cleans up lingering archive and tmp folders and exits ${end}\" 1&gt;&amp;2\n    printf '  %-5s %-81s %-40s\\n' \"    \" \"${blued}-D${greyd},${blued}  --dryrun ${yellowd}${end}                     \" \"pass dryrun to csf installer script, does not install csf ${end} ${navy}&lt;default&gt; ${peach}$argDryrun ${end}\" 1&gt;&amp;2\n    printf '  %-5s %-81s %-40s\\n' \"    \" \"${blued}-V${greyd},${blued}  --version ${yellowd}${end}                    \" \"current version of this utilty ${end}\" 1&gt;&amp;2\n    printf '  %-5s %-81s %-40s\\n' \"    \" \"${blued}-d${greyd},${blued}  --dev ${yellowd}${end}                        \" \"developer mode; verbose logging ${end}\" 1&gt;&amp;2\n    printf '  %-5s %-81s %-40s\\n' \"    \" \"${blued}-h${greyd},${blued}  --help ${yellowd}${end}                       \" \"show this help menu ${end}\" 1&gt;&amp;2\n    echo\n    echo\n}\n\n# #\n#   args \u203a handle\n# #\n\nwhile [ \"$#\" -gt 0 ]; do\n    case \"$1\" in\n        -d|--dev)\n            argDev=\"true\"\n            ;;\n        -e|--extract)\n            argExtract=\"true\"\n            argStatus=\"extracted\"\n            ;;\n        -i|--install)\n            argExtract=\"true\"\n            argInstall=\"true\"\n            argStatus=\"installed\"\n            ;;\n        -f|--folder|--install-folder)\n            case \"$1\" in\n                *=*) argFolder=\"${1#*=}\" ;;\n                *) shift; argFolder=\"$1\" ;;\n            esac\n            ;;\n        -I|--installOnly|--install-only|--install-local)\n            argInstallOnly=\"true\"\n            argStatus=\"installed local\"\n            ;;\n        -c|--clean)\n            printf '%-31s %-65s\\n' \"  ${bluel} STATUS ${end}\" \\\n                \"${greym} cleaning existing files and folders ${end}\"\n\n            rm -rf \"./$argFolder\" \"./$file_release\"*.zip \"./$file_release\"*-tgz\n\n            # #\n            #   Verify cleanup / deletion\n            # #\n\n            if [ ! -d \"./$argFolder\" ] &amp;&amp; [ ! -e \"./$file_release\"*.zip ] &amp;&amp; [ ! -e \"./$file_release\"*-tgz ]; then\n                printf '%-31s %-65s\\n' \"  ${greenl} SUCCESS ${end}\" \\\n                    \"${greym} all files and folders removed ${end}\"\n            else\n                printf '%-31s %-65s\\n' \"  ${redd} ERROR ${end}\" \\\n                    \"${greym} some files or folders could not be removed ${end}\"\n            fi\n\n            exit 0\n            ;;\n        -D|--dryrun)\n            if [ -n \"$argInstaller\" ]; then\n                argInstaller=\"$argInstaller --dryrun\"\n            else\n                argInstaller=\"--dryrun\"\n            fi\n            ;;\n        -o|-p|--original-name|--preserve-name|--preserve-filename)\n            argOriginalName=\"true\"\n            ;;\n        -v|--version|/v)\n            echo\n            printf \"  ${bluel}${app_title} (v$app_ver) ${end}\\n\" 1&gt;&amp;2\n            printf \"  ${end}${app_about} ${end}\\n\" 1&gt;&amp;2\n            printf \"  ${greyd}${github_url} ${end}\\n\" 1&gt;&amp;2\n            echo\n            exit 1\n            ;;\n        -h|--help|/?)\n            opt_usage\n            return\n            ;;\n        *)\n            printf '%-28s %-65s\\n' \"  ${redl} ERROR ${end}\" \"${greym} Unknown parameter:${redl} $1 ${greym}. Aborting ${end}\"\n            exit 1\n            ;;\n    esac\n    shift\ndone\n\n# #\n#   output \u203a header\n# #\n\necho\necho \" ${greyd}\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015 ${end}\"\nprintf '%-32s %-65s\\n' \"  ${greym} App${end}\" \"${fuchsial} $app_title \u203a Downloader  ${end}\"\nprintf '%-32s %-65s\\n' \"  ${greym} Repository${end}\" \"${fuchsial} ${app_repo}  ${end}\"\nprintf '%-32s %-65s\\n' \"  ${greym} Api${end}\" \"${fuchsial} ${api_url}  ${end}\"\nprintf '%-32s %-65s\\n' \"  ${greym} Version${end}\" \"${fuchsial} v${app_ver}  ${end}\"\necho \" ${greyd}\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015 ${end}\"\necho\n\n# #\n#   api url \u203a missing\n# #\n\nif [ -z \"$api_url\" ]; then\n    printf '%-28s %-65s\\n' \"  ${redl} ERROR ${end}\" \"${greym} api_url empty, cannot retrieve from api.github.com. Aborting ${end}\"\n    exit 1\nfi\n\n# #\n#   get json information from latest releases\n# #\n\nprintf '%-31s %-65s\\n' \"  ${bluel} STATUS ${end}\" \"${greym} fetching latest release info from${bluel} $api_url ${end}\"\nrelease_json=$(curl -sL \"$api_url\")\n\n# #\n#   extract latest tag\n# #\n\ntag_latest=$(echo \"$release_json\" | grep -m1 '\"tag_name\"' | awk -F'\"' '{print $4}')\nif [ -z \"$tag_latest\" ]; then\n    printf '%-28s %-65s\\n' \"  ${redl} ERROR ${end}\" \"${greym} could not find latest release tag. Aborting ${end}\"\n    exit 1\nelse\n    printf '%-31s %-65s\\n' \"  ${greenl} OK ${end}\" \"${greym} found latest release tag${greenl} $tag_latest ${end}\"\nfi\n\n# #\n#   extract download URL for latest release, detect zip or tgz\n# #\n\nDOWNLOAD_URL=$(echo \"$release_json\" \\\n    | grep '\"browser_download_url\"' \\\n    | awk -F'\"' '{print $4}' \\\n    | grep \"$file_release$tag_latest\" \\\n    | grep -E '\\.zip$|\\.tgz$|\\.tar\\.gz$|-tgz$' \\\n    | grep -vE 'helpers|theme' \\\n    | head -n1)\n\nif [ -z \"$DOWNLOAD_URL\" ]; then\n    printf '%-28s %-65s\\n' \"  ${redl} ERROR ${end}\" \"${greym} could not find download url for latest release tag (zip or tgz). Aborting ${end}\"\n    exit 1\nfi\n\n# #\n#   get latest release filename from URL\n# #\n\nfile_name_orig=$(basename \"$DOWNLOAD_URL\")\nfile_name_out=\"$file_name_orig\"\n\n# #\n#   normalize filename to csf.zip / csf.tgz unless --original-name provided\n# #\n\nif [ \"$argOriginalName\" = \"false\" ]; then\n    case \"$file_name_orig\" in\n        *.zip)\n            file_name_out=\"csf.zip\"\n            ;;\n        *.tar.gz|*.tgz|*-tgz)\n            file_name_out=\"csf.tgz\"\n            ;;\n        *)\n            file_name_out=\"$file_name_orig\"\n            ;;\n    esac\nelse\n    file_name_out=\"$file_name_orig\"\nfi\n\n# #\n#   download latest release unless --install-only\n# #\n\nif [ \"$argInstallOnly\" = \"false\" ]; then\n    printf '%-31s %-65s\\n' \"  ${bluel} STATUS ${end}\" \"${greym} downloading file${bluel} $file_name_out ${greym}from${bluel} $DOWNLOAD_URL ${end}\"\n    echo \n    curl -L -o \"$file_name_out\" \"$DOWNLOAD_URL\"\n    echo \nfi\n\n# #\n#   check if new release file downloaded / exists\n# #\n\nif [ -f \"$file_name_out\" ]; then\n    printf '%-31s %-65s\\n' \"  ${greenl} OK ${end}\" \"${greym} file${bluel} $file_name_out ${greym}downloaded successfully. ${end}\"\nelse\n    printf '%-28s %-65s\\n' \"  ${redl} ERROR ${end}\" \"${greym} archive file${bluel} $file_name_out ${greym}missing or not downloaded. Please check the URL or your connection. Aborting ${end}\"\n    exit 1\nfi\n\n# #\n#   extract archive if -e, --extract arg specified\n# #\n\nif [ \"$argExtract\" = \"true\" ] || [ \"$argInstall\" = \"true\" ]; then\n    printf '%-31s %-65s\\n' \"  ${bluel} STATUS ${end}\" \"${greym} extracting file${bluel} $file_name_out ${end}\"\n    [ ! -d $argFolder ] &amp;&amp; mkdir $argFolder\n\n    case \"$file_name_out\" in\n        *.zip)\n            unzip -oq \"$file_name_out\" -d \"$argFolder\"\n            ;;\n        *.tar.gz|*.tgz)\n            tar -xzf \"$file_name_out\" -C \"$argFolder\"\n            ;;\n        *)\n            printf '%-28s %-65s\\n' \"  ${redl} ERROR ${end}\" \"${greym} unknown archive format for file${redl} $file_name_out ${greym}. Aborting ${end}\"\n            exit 1\n            ;;\n    esac\n\n    printf '%-31s %-65s\\n' \"  ${greenl} OK ${end}\" \"${greym} extracted to ${greenl}./$argFolder/ ${end}\"\nfi\n\n# #\n#   install\n# #\n\nif [ \"$argInstall\" = \"true\" ] || [ \"$argInstallOnly\" = \"true\" ]; then\n    path_installer=\"./$argFolder/$file_installer\"\n    if [ ! -f \"$path_installer\" ]; then\n        printf '%-28s %-65s\\n' \"  ${redl} ERROR ${end}\" \"${greym} install script not found at${redl} $path_installer ${greym}. Aborting ${end}\"\n        exit 1\n    fi\n\n    printf '%-31s %-65s\\n' \"  ${bluel} STATUS ${end}\" \"${greym} running install script${bluel} $path_installer ${greym}with elevated permissions ${end}\"\n\n    #  sudo check\n    if command -v sudo &gt;/dev/null 2&gt;&amp;1; then\n        sudo sh \"$path_installer\" $argInstaller\n    else\n        sh \"$path_installer\" $argInstaller\n    fi\n\n    printf '%-31s %-65s\\n' \"  ${greenl} OK ${end}\" \"${greym} installation script ${greenl} $path_installer ${greym}finished with args${greenl} $argInstaller ${end}\"\nfi\n\n# #\n#   output \u203a footer\n# #\n\nprintf '%-31s %-65s\\n' \"  ${greenl} OK ${end}\" \"${greym} successfully $argStatus $app_title ${end}\"\n</code></pre> <p> </p>", "tags": ["services", "get.sh", "get.configserver.dev"]}, {"location": "blog/", "title": "Blog", "text": ""}, {"location": "blog/#blog", "title": "Blog", "text": ""}, {"location": "blog/2025/release-v1502/", "title": "Release v15.02", "text": ""}, {"location": "blog/2025/release-v1502/#release-v1502", "title": "Release: v15.02", "text": "<p>The next release of ConfigServer Security &amp; Firewall (CSF) is here, and I wanted to take a moment to share an update on what\u2019s coming next \u2014 including fixes, plans, and our broader direction moving forward. This post will cover integration improvements for both VestaCP and CyberPanel, as well as a look into the ongoing goals behind CSF\u2019s continued progression.</p> <p>Our focus remains on transparency, stability, and community involvement. Users deserve to know not only what\u2019s changing, but why. By keeping everyone informed and maintaining compatibility across control panels, we aim to ensure that CSF continues to be the trusted, secure, and reliable firewall solution it has always been.</p> <p>The full changelog is available here.</p> <p></p> <p></p>"}, {"location": "blog/2025/release-v1502/#objectives", "title": "Objectives", "text": "<p>This repository originally began as the home for a third-party CSF Dark Theme and a collection of helper scripts designed to simplify everyday management tasks. However, following the unfortunate announcement that Way to the Web would be closing down, this project evolved into a maintained fork of the ConfigServer Security &amp; Firewall core application itself.  </p> <p>CSF has long stood as one of the most stable and loved firewall applications available. It has been known for its consistency, reliability, and not fixing what isn\u2019t broken. That legacy is something I respect and want to maintain.</p> <p>As a long-time user myself, I understand what CSF brings to everyday server management. While I\u2019m fully capable of managing iptables or nftables directly, the convenience of having a clean, functional interface to manage my firewall saves time and effort, and that\u2019s something worth maintaining. </p> <p>The goal moving forward is simple: enhance, not overhaul</p> <p>I am focused on delivering thoughtful updates, quality improvements, and useful new features that make CSF better, without compromising its identity or stability. I have no intention of tearing down what makes CSF great. I want to strengthen it, preserve its integrity, and ensure it remains the trusted tool you know and rely on.</p> <p></p> <p></p>"}, {"location": "blog/2025/release-v1502/#community-collaboration", "title": "Community Collaboration", "text": "<p>GitHub was chosen as CSF\u2019s new home because it provides the transparency and the openness this project deserves. It lets users follow development in real-time, track changes as they happen, and directly participate in discussions or contributions. This approach keeps everyone in the loop and ensures that CSF evolves with community insight and feedback.</p> <p>While I\u2019m leading the maintenance and development, CSF isn\u2019t a one-person show. If you see areas for improvement, have ideas for new features, or have experience with Perl and want to contribute; your involvement is always welcome. Collaboration strengthens the project, and community input is what keeps it alive. Coupled with the fact that most of the applications I only use these days are open-source.</p> <p>Most importantly, CSF will always remain free and open-source. There will never be a shift toward closed-source development or any corporate acquisition. The goal has always been, and will continue to be, to keep CSF accessible, transparent, and powered by the community that relies on it.</p> <p></p> <p></p>"}, {"location": "blog/2025/release-v1502/#changelog", "title": "Changelog", "text": "<p>With all of that out of the way, this post is about the upcoming <code>v15.02</code> release and what it entails.</p> <p></p>"}, {"location": "blog/2025/release-v1502/#new-login-page", "title": "New Login Page", "text": "<p>This update re-introduces the login page that original users of the repository came to enjoy, with the added bonus that there is now a Theme Selector in the top-right.</p> <p>The theme selector changes the login page theme for the moment; however, it will tie into the main web interface in an upcoming version when the Dark Theme is re-added.</p> <p>Only Generic installation users will see the login screen, as that has always been the case. Control panels such as cPanel, VestaCP, Interworx, etc., never show a login page because authentication being tied into the control panel itself.</p> <p>I wanted to keep the login page simple, and not turn it into a commercialized stock layout. It's a simple, revised login page that keeps the original white appearance but adds a dark theme and a simple background.</p> <p>Users should note that when the dark theme returns to CSF, the white theme will remain. The goal is to preserve the original CSF look and avoid confusing the end-user. We're simply adding a dark theme to the web interface as an alternative option for users who would like it. The white theme will remain untouched aside from some style optimizations.</p> CSF \u203a Login <p></p> <p></p>"}, {"location": "blog/2025/release-v1502/#alpha-release-channel", "title": "Alpha Release Channel", "text": "<p>The Alpha Release Channel provides access to early builds of CSF that include experimental features, performance improvements, or upcoming functionality that has not yet been finalized for stable release.</p> <p>Alpha releases are highly experimental and not intended for production servers. These builds may contain incomplete features, untested changes, or critical bugs that could lead to system instability or security issues.</p> <p>The primary purpose of the alpha channel is to allow users and developers to test new functionality and provide feedback before the features are merged into the stable release channel.</p> <p>Only use the alpha channel in a controlled testing or development environment.</p> <p>If you wish to test an alpha release, it is strongly recommended that you do so on a virtual machine (such as Hyper-V, VMWare, or VirtualBox) or on a secondary barebones server that has no critical role in your primary infrastructure or homelab. This ensures that any potential bugs or regressions in the alpha build do not disrupt your production environment.</p> <p></p>"}, {"location": "blog/2025/release-v1502/#enable-alpha-releases", "title": "Enable Alpha Releases", "text": "<p>To enable the Alpha channel, edit your <code>/etc/csf/csf.conf</code> file and add the following line:</p> <pre><code>RELEASE_ALPHA = \"1\"\n</code></pre> \u26a0\ufe0f DANGER \u26a0\ufe0f Alpha Releases <p>This setting is not included by default to prevent accidental use on production systems.</p> <p></p>"}, {"location": "blog/2025/release-v1502/#download-service-updates", "title": "Download Service Updates", "text": "<p>Our download.configserver.dev update service has been enhanced to now include alpha releases. You can view the latest version of an alpha release by opening your browser and going to:</p> <ul> <li>https://download.configserver.dev/csf/version.txt?channel=alpha</li> </ul> <p></p> <p>When you enable the <code>csf.conf</code> setting <code>RELEASE_ALPHA</code>, CSF will download new alpha releases from the url:</p> <ul> <li>https://download.configserver.dev/csf.tgz?channel=alpha</li> </ul> <p></p> <p></p>"}, {"location": "blog/2025/release-v1502/#cyberpanel", "title": "Cyberpanel", "text": "<p>Recently, it seems that the Cyberpanel team has removed CSF as their default firewall solution. This change is understandable, especially given the transition to new developers and the natural concerns around trust and support.</p> <p>I will however, continue to maintain CSF for those who prefer it. If you want to use CSF as your firewall instead of the new default, that option remains fully available.</p> <p>With the release of v15.02, all issues affecting Cyberpanel integration have been resolved. The integration is now fully operational again.</p> <p>Installation and updates work exactly as they did before, and backwards compatibility has been preserved wherever possible to ensure a smooth experience for existing users.</p> Cyberpanel \u203a CSF <p></p> <p></p>"}, {"location": "blog/2025/release-v1502/#vestacp", "title": "VestaCP", "text": "<p>With the release of VestaCP <code>v1.0.x</code>, the platform transitioned to React, which broke CSF integration. While the <code>/list/csf</code> page could still be accessed directly via URL, the VestaCP header would no longer appear.</p> <p>This issue has been resolved, but there are some important considerations to note.</p> <p></p>"}, {"location": "blog/2025/release-v1502/#csf-submenu-in-header", "title": "CSF Submenu in Header", "text": "<p>React-based VestaCP templates are now minified <code>.js</code> and <code>.css</code> files rather than simple PHP and HTML. This change makes it significantly more challenging to modify the header and re-add CSF to the navigation menu, especially given hashed filenames in the build process; which we want to preserve the integrity of.</p> <p>Rather than rebuilding the templates ourselves which seems like a drastic approach; I have provided instructions for users to manually integrate CSF into the VestaCP menu: Add CSF to VestaCP Menu.</p> <p>Ideally, this would be solved by adding a conditional menu item in the header template, but VestaCP has not seen updates in some time, which brings us to the next point.</p> VestaCP \u203a CSF \u203a Header Menu <p></p>"}, {"location": "blog/2025/release-v1502/#lack-of-updates", "title": "Lack of Updates", "text": "<p>Security is the core focus of CSF, and using outdated software can increase your attack surface. Currently, VestaCP has over 20 known vulnerabilities. While I maintain CSF support for VestaCP, users should carefully consider the security implications of running an unsupported version.</p> <p>Support will continue, but given the lack of active updates from VestaCP, I cannot dedicate excessive resources to maintaining integration with a platform that appears unmaintained right now.</p> <p></p>"}, {"location": "blog/2025/release-v1502/#header-integration", "title": "Header Integration", "text": "<p>I have re-integrated the header menu into CSF for VestaCP, so you can now jump to other pages from the <code>/list/csf</code> page.</p> VestaCP \u203a ConfigServer Security &amp; Firewall <p></p> <p></p>"}, {"location": "blog/2025/release-v1502/#dark-theme-users", "title": "Dark Theme Users", "text": "<p>The dark theme will return, but restoring core functionality has been the primary focus. With several integrations previously not working correctly, I prioritized stability and usability first. The dark theme remains on the roadmap and will be reintroduced carefully.  </p> <p>The footer from the original dark theme has been re-implemented, along with the Light/Dark theme switcher. The corresponding CSS classes are not yet fully applied, as meticulous testing is required to avoid breaking the appearance or functionality of other integrations. This ensures a smooth, stable experience rather than rushing cosmetic changes that break CSF.</p> <p>The login interface, part of the original dark theme, has been restored.</p> <p></p> <p></p>"}, {"location": "blog/2025/release-v1502/#automatic-download-server", "title": "Automatic Download Server", "text": "<p>The update servers are now fully back online, restoring the same functionality as the original developer's website. A new help page has also been added to the download service for easier guidance:</p> Download Service \u203a Help Shows a list of commands that can be utilized with the CSF download service https://download.configserver.dev/help https://download.configserver.dev/help <p></p> <p>Additionally, a few companies have reached out to offer services like reputation identity, which CSF previously supported. These integrations are being reviewed and implemented carefully, with security and privacy as the top priorities, which means no data collection, no extra open ports, and no compromises on safety.</p> <p></p> <p>We have also added an official Help interface which shows examples of how to use the Download Service. You can view more information about it here:</p> <ul> <li>https://download.configserver.dev/help</li> </ul> <p></p> <p></p>"}, {"location": "blog/2025/release-v1502/#prepost-script-integration", "title": "Pre/Post Script Integration", "text": "<p>Pre/post script integration is now fully supported in CSF. Any existing scripts you use with CSF will continue to function without changes, but the decision to use one of the two designated directories is left up to the end-user.</p> <p></p> <ul> <li>When CSF is installed for the first time, two starter files  <code>/usr/local/csf/bin/csfpre.sh</code> and  <code>/usr/local/csf/bin/csfpost.sh</code> are automatically created on your system (only if they don\u2019t already exist). These serve as base loader scripts, giving you a foundation to add your own custom logic later on.<ul> <li>You must create your own pre/post loader folders  <code>/usr/local/include/csf/pre.d/</code> and  <code>/usr/local/include/csf/post.d/</code></li> </ul> </li> <li>If you already have existing pre/post loader files in place, CSF will respect your current setup and skip creating the starter versions \u2014 allowing you to continue using your existing scripts without interruption.</li> </ul> <p></p> <p>Full documentation and usage instructions can be found here:</p> Docs \u203a Pre &amp; Post CSF includes dedicated directories where you can place custom Bash scripts to run at specific stages of the firewall\u2019s startup process. https://docs.configserver.dev/usage/prepost/ https://docs.configserver.dev/usage/prepost/ <p></p> <p>With the updated logic, you can now place your pre and post shell scripts in multiple locations for greater flexibility:</p>"}, {"location": "blog/2025/release-v1502/#csfpresh", "title": "<code>csfpre.sh</code>", "text": "<ul> <li><code>/usr/local/csf/bin/csfpre.sh</code></li> <li><code>/etc/csf/csfpre.sh</code></li> </ul>"}, {"location": "blog/2025/release-v1502/#csfpostsh", "title": "<code>csfpost.sh</code>", "text": "<ul> <li><code>/usr/local/csf/bin/csfpost.sh</code></li> <li><code>/etc/csf/csfpost.sh</code></li> </ul> <p>Previously, CSF would only check one location for each script. With this improvement, you can use both locations simultaneously, allowing you to separate scripts as needed for organizational or operational purposes.</p> <p>The original behavior for loading your custom shell scripts has been fully preserved. This means you don\u2019t need to make any changes after upgrading to v15.01. Any existing scripts will continue to work exactly as they did before.</p> <p></p> <p></p>"}, {"location": "blog/2025/release-v1502/#updated-installsh-script", "title": "Updated install.sh Script", "text": "<p>The <code>install.sh</code> installation script has been updated. The core functionality of the script will remain the same, and any existing automation you may have in place which uses this file will require no changes. These updates just re-write the code, add better output, add support for both relative / absolute calls to the script, and ensure POSIX compliance.</p> <ul> <li>installer script now gives more detailed information to the user.</li> <li>supports absolute or relative execution / calls from any directory</li> <li>add flags <code>--dryrun</code>, <code>--detect</code>, <code>--help</code>, <code>--version</code></li> <li>POSIX compliant</li> <li>No base functionality changes, requires no changes by users with automated scripts; same run command</li> </ul> <p></p>"}, {"location": "blog/2025/release-v1502/#example-output", "title": "Example Output", "text": "<p>The following shows the output provided by the <code>install.sh</code> script:</p> <p></p>  Output Example 1 Output Example 2 <pre><code>$ sudo sh src/install.sh \n\n# #\n#  ConfigServer Security &amp; Firewall \u203a Installer\n#  version: 15.02\n# #\n\nOK                  Starting installer CyberPanel \u203a install.cyberpanel.sh \n</code></pre> <pre><code>$ sudo sh src/install.sh --help\n\nConfigServer Security &amp; Firewall\nRobust linux iptables/nftables firewall\nversion: 15.02\ninstall.sh [ --detect | --dryrun |  --version | --help ]\n\nFlags:                                         \n      -D,  --detect             returns installer script that will run; does not install csf &lt;default&gt; false\n      -d,  --dryrun             simulates installation, does not install csf &lt;default&gt; false\n      -v,  --version            current version of this utilty &lt;current&gt; 15.02\n      -h,  --help               show this help menu\n</code></pre> <p></p> <p></p>"}, {"location": "blog/2025/release-v1502/#config-file-changes", "title": "Config File Changes", "text": "<p><code>v15.02</code> introduces newly re-written configuration files. It does not change the way a user's existing configuration file loads, and a user is not required to use the newly revised configs. Most of the changes are simply cosmetic. If you want to keep your existing configuration file, you may do so without any negative results. You can simply use the newer config as an example.</p> <p></p>"}, {"location": "blog/2025/release-v1502/#added-headers", "title": "Added Headers", "text": "<p>Every configuration file now features a header displayed at the top of the Firewall Configuration page. This header shows which configuration file was generated during the initial CSF installation. It addresses user confusion reported on various forums regarding how config files are processed and helps users quickly identify the active config file within the file system.</p> CSF \u203a Configuration File <p></p>"}, {"location": "blog/2025/release-v1502/#enhanced-comments", "title": "Enhanced Comments", "text": "<p>The comments within each configuration file have been thoroughly revised. Descriptions above each setting are now more informative, providing explanations, common port examples, and additional context for specific features, without becoming overly verbose. This makes it easier for users to understand each setting and how it affects their firewall.</p> <p></p> <p></p>"}, {"location": "blog/2025/release-v1502/#summary", "title": "Summary", "text": "<p>This update builds upon existing functionality while preserving the stability and behavior users rely on. The goal is to deliver a seamless transition; keeping automation and workflows intact, while improving integration support and resolving previously broken functionality.</p> <p>As always, community feedback is encouraged. If you have feature suggestions or ideas that could enhance the user experience, feel free to open a ticket on the official GitHub repository:</p> Github \u203a Submit Issue Submit a bug or new feature request. https://github.com/Aetherinox/csf-firewall/issues/new https://github.com/Aetherinox/csf-firewall/issues/new <p></p>"}, {"location": "blog/2025/release-v1503/", "title": "Release v15.03", "text": ""}, {"location": "blog/2025/release-v1503/#release-v1503", "title": "Release: v15.03", "text": "<p>This update includes several minor improvements without adding major new features. It also fixes an issue in the Webmin control panel, restoring the Configuration and Help menus that were missing from the header in v15.02.</p> <p>The full changelog is available here.</p> <p></p> <p></p>"}, {"location": "blog/2025/release-v1503/#changelog", "title": "Changelog", "text": "<p>A list of the most important changes are listed below.</p> <p></p>"}, {"location": "blog/2025/release-v1503/#fix-webmin-header-icons", "title": "Fix Webmin Header Icons", "text": "<p><code>v15.02</code> introduced a minor bug to Webmin which removed the top-left header icons:</p> <ul> <li> Module Config</li> <li> Help</li> </ul> <p></p> <p>The Webmin control panel dynamically injects header icons using a specific tag that must be present in the CSF interface.</p> <pre><code>print \"&lt;div class='well well-sm'&gt;csf: v$myv&lt;/div&gt;\";\n</code></pre> <p></p> <p>These tags were accidentally removed during the footer redesign and were not migrated as intended. As of v15.03, the header icons have been restored and will appear correctly after updating.</p> <p></p> CSF \u203a Webmin \u203a Header Icons <p></p> <p></p>"}, {"location": "blog/2025/release-v1503/#updated-csfajaxtail", "title": "Updated Csfajaxtail", "text": "<p>This update provides a re-written <code>src/csfajaxtail.js</code> javascript library. This file is responsible for logging and grep features seen on pages such as:</p> <ul> <li>Watch System Logs</li> <li>View iptables logs</li> </ul> <p></p> <p>The re-write includes performance optimizations, and a status indicator when the end-user pauses logging.</p> <p></p> <p></p>"}, {"location": "blog/2025/release-v1503/#blog-comments", "title": "Blog Comments", "text": "<p>A commenting system has been integrated at the bottom of each blog page, powered by Giscus. This feature allows users to leave comments, ask questions, or provide feedback regarding changes made in a release.  </p> <p>All comments are synchronized with GitHub Discussions, allowing you to sign in using your GitHub account to participate.  </p> <p>We\u2019ve also ensured that privacy settings are enabled for this integration \u2014 no metadata is collected or stored.</p> <p></p> <p></p>"}, {"location": "blog/2025/release-v1503/#fontminus-fontplus-minimums", "title": "FontMinus FontPlus Minimums", "text": "<p>The font minimums have been changed from <code>12px</code> to <code>10px</code>. This allows for slightly more characters on a single line in order to prevent word-wrap as much as possible when viewing your logs.</p> <p>To change the font-size, click the icons  and .</p> CSF \u203a Decrease Minimum Font Size <p></p>"}, {"location": "blog/2025/release-v1504/", "title": "Release v15.04", "text": ""}, {"location": "blog/2025/release-v1504/#release-v1504", "title": "Release: v15.04", "text": "<p>This update addresses a textbox height bug for the Webmin control panel which affects the log viewing pages. Two new settings have also been added to the CSF config file <code>/etc/csf/csf.conf</code> which affects logging.</p> <p>The full changelog is available here.</p> <p></p> <p></p>"}, {"location": "blog/2025/release-v1504/#changelog", "title": "Changelog", "text": "<p>A list of the most important changes are listed below.</p> <p></p>"}, {"location": "blog/2025/release-v1504/#fix-webmin-log-textbox-height", "title": "Fix Webmin Log Textbox Height", "text": "<p>Release v15.03 introduced a complete rewrite of the <code>csfajaxtail.js</code> file, which handles log viewing within CSF. However, this update inadvertently caused a display issue where log textboxes were rendered only a few pixels tall.</p> <p>Version <code>v15.04</code> resolves this issue and adds support for vertical resizing of log windows.</p> <p></p> Webmin \u203a CSF \u203a Log Height Bug <p></p> <p></p>"}, {"location": "blog/2025/release-v1504/#new-settings", "title": "New Settings", "text": "<p>We have introduced two new settings that are available within your <code>/etc/csf/csf.conf</code> config file:</p> <p></p>"}, {"location": "blog/2025/release-v1504/#ui_logs_refresh_time", "title": "UI_LOGS_REFRESH_TIME", "text": "<p>This setting controls how frequently CSF automatically refreshes the displayed logs. The value represents the number of seconds between each refresh cycle. Lower values update the logs more often, while higher values reduce update frequency to conserve resources.</p> <pre><code># #\n#   Number of seconds between automatic log refreshes.\n#   Controls how frequently the log display updates.\n# #\n\nUI_LOGS_REFRESH_TIME = \"6\"\n</code></pre> <p> </p>"}, {"location": "blog/2025/release-v1504/#ui_logs_start_paused", "title": "UI_LOGS_START_PAUSED", "text": "<p>This setting allows you to define if automatic log refreshing on page load starts off running 0 or paused 1.</p> <code>UI_LOGS_START_PAUSED = \"0\"</code> <ul> <li>A value of 0 means that as soon as a log page is loaded, it will automatically start counting down from the value defined in <code>UI_LOGS_REFRESH_TIME</code>.</li> </ul> <code>UI_LOGS_START_PAUSED = \"1\"</code> <ul> <li>A value of 1 means that as soon as a log page is loaded, it will start in the paused state. To start the automatic refresh functionality and timer, you  need to press the Continue button toward the top of the window.</li> </ul> <pre><code># #\n#   Determines whether the log timer starts paused when the page loads.\n#   1 = start paused, 0 = start running immediately.\n# #\n\nUI_LOGS_START_PAUSED = \"0\"\n</code></pre> <p> </p>"}, {"location": "blog/2025/release-v1505/", "title": "Release v15.05", "text": ""}, {"location": "blog/2025/release-v1505/#release-v1505", "title": "Release: v15.05", "text": "<p>This update fixes an issue where HTML in the Firewall Configuration page was not properly escaped, and rewrites the <code>init.d</code> script for POSIX compatibility with added functionality.</p> <p>The full changelog is available here.</p> <p></p> <p></p>"}, {"location": "blog/2025/release-v1505/#changelog", "title": "Changelog", "text": "<p>A list of the most important changes are listed below.</p> <p></p>"}, {"location": "blog/2025/release-v1505/#fix-html-escaping", "title": "Fix HTML Escaping", "text": "<p>We have corrected an issue where HTML in the Firewall Configuration page was not properly escaped. This ensures that CSP (Content Security Policy) settings are applied correctly and safely when editing configuration files via the web interface.</p> <p></p> Bug \u203a Escaped Input <p></p> <p></p>"}, {"location": "blog/2025/release-v1505/#posix-compliant-init-script", "title": "POSIX-Compliant Init Script", "text": "<p>The <code>csf.sh</code> <code>init.d</code> script has been fully rewritten to be POSIX-compliant, ensuring compatibility across various Linux distributions and shell environments.</p> <p>It now supports all standard service commands:</p> <ul> <li><code>start</code></li> <li><code>stop</code></li> <li><code>status</code></li> <li><code>restart</code></li> <li><code>force-reload</code></li> <li><code>reload</code></li> <li><code>restart-all</code></li> <li><code>enable</code></li> <li><code>disable</code></li> </ul> <p>The script also includes enhancements for manual execution, allowing it to be run directly from the command-line when needed.</p> <p>This init script manages the CSF service on systems without <code>systemd</code>. During installation, it is copied from <code>/src/csf.sh</code> to <code>/etc/init.d/csf</code>.</p> <p></p> <p> </p>"}, {"location": "blog/2025/release-v1506/", "title": "Release v15.06", "text": ""}, {"location": "blog/2025/release-v1506/#release-v1506", "title": "Release: v15.06", "text": "<p>This update fixes a backwards compatibility bug between CSF and older versions of Webmin such as v2.111.</p> <p>The full changelog is available here.</p> <p></p> <p></p>"}, {"location": "blog/2025/release-v1506/#changelog", "title": "Changelog", "text": "<p>A list of the most important changes are listed below.</p> <p></p>"}, {"location": "blog/2025/release-v1506/#fix-webmin-backwards-compatibility", "title": "Fix Webmin Backwards Compatibility", "text": "<p>We have corrected a minor interface bug which caused issues with older version of Webmin dating back to v2.111, and the Authentic theme v21.10.</p> <p>Installations of CSF on older versions of Webmin would exhibit the following symptoms:</p> <ul> <li> <p>Webmin header would not show the buttons:</p> <ul> <li> Module Config</li> <li> Help</li> </ul> </li> <li> <p>Webmin footer would attempt to load custom footer for the generic installation.</p> </li> <li>Installation marked as generic installation for all modules of CSF.</li> </ul> <p></p> Bug exhibited on Webmin v2.111; incorrect theme button, incorrect control panel detected <p></p> Reported Webmin version affected by bugs <p></p> <p>After resolution, older versions of Webmin should appear identical to newer versions.</p> <p></p> Webmin \u203a Fixed Footer <p></p> Webmin \u203a Fixed Header <p> </p>"}, {"location": "includes/abbreviations/", "title": "Abbreviations", "text": ""}, {"location": "insiders/", "title": "Insiders \u203a About", "text": "", "tags": ["insiders", "sponsor"]}, {"location": "insiders/#insiders", "title": "Insiders", "text": "<p>Learn more about the The ConfigServer Security &amp; Firewall Insiders Program below.</p> <p></p> <p></p>", "tags": ["insiders", "sponsor"]}, {"location": "insiders/#about", "title": "About", "text": "<p>The ConfigServer Security &amp; Firewall Insiders Program is for users who want to help support and shape the future of ConfigServer Security &amp; Firewall. As an Insider, you\u2019ll gain early access to upcoming features and experimental functionality before it is released to the public.</p> <p>We don\u2019t believe in putting security behind a paywall, because your safety shouldn\u2019t depend on your wallet. The Insiders Program gives people a way to contribute to CSF by testing upcoming versions, keeping our lights on, and helping us catch bugs before a release rolls out to the public channel.</p> <p>If you\u2019ve got ideas on how something could work better or make life easier for others, your input can actually help steer where CSF goes next.</p> <p>By sponsoring our project, you will receive the following:</p> <ul> <li>Insiders access to ConfigServer Security and Firewall release channel</li> <li>Discord Sponsor role</li> <li>Listed on our project Sponsor page</li> <li>Tell us additional perks you'd like to see as a Sponsor</li> </ul> <p></p> <p></p>", "tags": ["insiders", "sponsor"]}, {"location": "insiders/#our-sponsors", "title": "Our Sponsors", "text": "<p>A huge thank you to the following people who have sponsored ConfigServer Security &amp; Firewall.</p> <p></p> <p> </p>", "tags": ["insiders", "sponsor"]}, {"location": "insiders/sponsors/", "title": "Insiders \u203a Sponsors", "text": "", "tags": ["insiders", "sponsor"]}, {"location": "insiders/sponsors/#our-sponsors", "title": "Our Sponsors", "text": "<p>A huge thank you to the following people who have sponsored ConfigServer Security &amp; Firewall.</p> <p></p> <p> </p>", "tags": ["insiders", "sponsor"]}, {"location": "install/authentik/", "title": "Usage \u203a Authentik Integration", "text": "", "tags": ["usage", "configure", "integration", "authentik", "authentication", "2fa", "passkey"]}, {"location": "install/authentik/#authentik-integration", "title": "Authentik Integration", "text": "<p>This section explains how to add Authentik as a middleware through Traefik so that you can secure the CSF web interface behind an authentication server.</p> <p></p> <p></p>", "tags": ["usage", "configure", "integration", "authentik", "authentication", "2fa", "passkey"]}, {"location": "install/authentik/#what-is-authentik", "title": "What is Authentik?", "text": "<p>Authentik is an open-source identity provider that helps you manage authentication and access control for your applications. It acts as a centralized system for securely verifying the identity of users before they can access your services. By using Authentik, you can enforce consistent security policies across all the software you manage, rather than relying on separate logins for each service.</p> <p>With Authentik, you can protect your applications using traditional passwords, implement two-factor authentication (2FA), or even leverage modern passkey solutions. This includes hardware keys such as YubiKey, or software-based passkeys stored in password managers like KeePassXC or Vaultwarden.</p> <p>Using Authentik adds an extra layer of security and simplifies access management, ensuring that only authorized users can reach sensitive applications like the CSF web interface. It can also integrate with middleware to enforce access policies without exposing your services to the public internet.</p> <p></p> <p></p>", "tags": ["usage", "configure", "integration", "authentik", "authentication", "2fa", "passkey"]}, {"location": "install/authentik/#before-you-begin", "title": "Before You Begin", "text": "<p>Currently, CSF does not have built-in functionality to detect if your system is protected by an authentication service such as Authentik or Authelia.</p> <p>If you choose to put CSF behind Authentik, you will encounter two authentication prompts when accessing the CSF web interface:</p> <ol> <li>The Authentik sign-in screen</li> <li>CSF\u2019s native login interface</li> </ol> <p></p> <p>We are working on a feature that will allow CSF to disable its built-in login system and rely entirely on a third-party authentication app. When this is implemented, you will only see a single login screen.</p> <p></p> <p></p>", "tags": ["usage", "configure", "integration", "authentik", "authentication", "2fa", "passkey"]}, {"location": "install/authentik/#setup", "title": "Setup", "text": "<p>If you are adding Authentik as middleware in the steps above; the last thing you must do is log in to your Authentik admin panel and add a new Provider so that we can access the CSF web interface via your domain.</p> <p></p> <p>Once you sign into the Authentik admin panel, go to the left-side navigation, select Applications \u203a Providers.</p> <p></p> Authentik \u203a Menu \u203a Applications \u203a Providers <p></p> <p>Then at the top of the new page, click Create.</p> <p></p> Authentik \u203a Create New Provider <p></p> <p>For the provider, select <code>Proxy Provider</code>.</p> <p></p> Authentik \u203a New Provider \u203a Proxy Provider <p></p> <p>Add the following provider values:</p> <ul> <li>Name: <code>CSF ForwardAuth</code></li> <li>Authentication Flow: <code>default-source-authentication (Welcome to authentik!)</code></li> <li>Authorization Flow: <code>default-provider-authorization-implicit-consent (Authorize Application)</code></li> </ul> <p></p> <p>Select Forward Auth (single application):</p> <ul> <li>External Host: <code>https://csf.domain.com</code></li> </ul> <p></p> Authentik \u203a New Provider \u203a Settings <p></p> <p>Once finished, click Create. Then on the left-side menu, select Applications \u203a Applications.</p> <p></p> Authentik \u203a Menu \u203a Applications \u203a Applications <p></p> <p>Then at the top of the new page, click Create.</p> <p></p> Authentik \u203a Create New App <p></p> <p>Add the following parameters:</p> <ul> <li>Name: <code>CSF (ConfigServer Firewall)</code></li> <li>Slug: <code>csf</code></li> <li>Group: <code>Administrative</code></li> <li>Provider: <code>CSF ForwardAuth</code></li> <li>Backchannel Providers: <code>None</code></li> <li>Policy Engine Mode: <code>any</code></li> </ul> <p></p> Authentik \u203a Menu \u203a Applications \u203a Create <p></p> <p>Save, and then on the left-side menu, select Applications \u203a Outposts:</p> <p></p> Authentik \u203a Menu \u203a Applications \u203a Outposts <p></p> <p>Find your Outpost and edit it.</p> Authentik \u203a Outposts \u203a Edit <p></p> <p>Move <code>CSF (ConfigServer Firewall)</code> to the right side Selected Applications box.</p> <p></p> Authentik \u203a Outposts \u203a Update <p></p> <p>You should be able to access <code>csf.domain.com</code> and be prompted now to authenticate with Authentik.</p> <p></p> <p></p>", "tags": ["usage", "configure", "integration", "authentik", "authentication", "2fa", "passkey"]}, {"location": "install/authentik/#authentication-types", "title": "Authentication Types", "text": "<p>When CSF is placed behind Authentik, you will be prompted to log in through Authentik to access the CSF web interface. The method of login depends on your Authentik configuration. Common authentication types include:</p> <ul> <li>Username + password</li> <li>Username + password + secondary authentication (2FA)</li> <li>Passkey (SSO / FIDO2) / Passwordless Login</li> <li>Duo Authentication</li> <li>Email</li> </ul> <p></p> <p>This guide does not cover the full setup of Authentik, as that is outside the scope of CSF. However, there are many tutorials and video guides available online that explain the process in detail.</p> <p></p> <p></p>", "tags": ["usage", "configure", "integration", "authentik", "authentication", "2fa", "passkey"]}, {"location": "install/authentik/#next-steps", "title": "Next Steps", "text": "<p>Select what documentation you would like to proceed with next ...</p> <ul> <li> <p> Geographical IP Block Integration</p> <p>Configure geographical restrictions in CSF to whitelist or blacklist specific regions from accessing your server.</p> <p>This chapter covers enabling the GeoIP blocklist feature using third-party services such as MaxMind (requires an API key), db-ip, ipdeny, or iptoasn.</p> <p>These services allow you to control access based on location while keeping your server secure.</p> </li> </ul> <p> </p>", "tags": ["usage", "configure", "integration", "authentik", "authentication", "2fa", "passkey"]}, {"location": "install/dependencies/", "title": "CSF \u203a Dependencies", "text": "", "tags": ["install", "dependencies", "apt", "apt-get", "dnf", "cpan", "cpanm", "yum"]}, {"location": "install/dependencies/#dependencies", "title": "Dependencies", "text": "<p>To ensure ConfigServer Security &amp; Firewall (CSF) functions correctly, all required dependencies must be installed. Some dependencies are essential for the core operation of CSF, while others are only necessary if you plan to use specific optional features.</p> <p></p>", "tags": ["install", "dependencies", "apt", "apt-get", "dnf", "cpan", "cpanm", "yum"]}, {"location": "install/dependencies/#install", "title": "Install", "text": "<p>For our documentation, we are going to include all packages you will need in order to run all functionality within CSF. A lot of the packages listed below will be installed along with the base <code>perl</code> package; however, we've included them to ensure nothing gets left behind.</p> <p></p>", "tags": ["install", "dependencies", "apt", "apt-get", "dnf", "cpan", "cpanm", "yum"]}, {"location": "install/dependencies/#minimal-dependencies", "title": "Minimal Dependencies", "text": "<p>The following are a list of the minimal dependencies required for CSF to function. This does not include packages such as gd library which are required if you plan to make use of the statistics feature which is enabled in the <code>/etc/csf/csf.conf</code> with the setting <code>ST_ENABLE = \"1\"</code>.</p> <p></p>  Debian/Ubuntu (apt-get) CentOS/RHEL (yum/dnf) Perl (CPAN) Perl (CPANMINUS) <pre><code># #\n#   Minimum Dependencies\n# #\n\nsudo apt-get update &amp;&amp; sudo apt-get install -y \\\n  ipset \\\n  libcrypt-ssleay-perl \\\n  libio-socket-inet6-perl \\\n  libio-socket-ssl-perl \\\n  libnet-libidn-perl \\\n  libsocket6-perl \\\n  perl \\\n  wget\n</code></pre> <pre><code># #\n#   Minimum Dependencies\n# #\n\nsudo yum makecache &amp;&amp; sudo yum install -y \\\n  ipset \\\n  perl \\\n  perl-IO-Socket-INET6 \\\n  perl-IO-Socket-SSL.noarch \\\n  perl-libwww-perl \\\n  perl-Net-LibIDN2 \\\n  perl-Net-SSLeay \\\n  perl-Socket6 \\\n  wget\n</code></pre> <pre><code># #\n#   Debian/Ubuntu\n# #\n\nsudo apt-get update &amp;&amp; sudo apt-get install -y perl build-essential\n\n# #\n#   CentOS/RHEL\n# #\n\nsudo yum makecache &amp;&amp; sudo yum groupinstall 'Development Tools' &amp;&amp; sudo yum install -y perl cpan\n\n# #\n#   Minimum Dependencies\n# #\n\nsudo cpan -i \\\n  IO::Socket::INET6 \\\n  IO::Socket::SSL \\\n  LWP \\\n  Net::LibIDN \\\n  Net::SSLeay \\\n  Socket6\n</code></pre> <pre><code># #\n#   Debian/Ubuntu\n# #\n\nsudo apt-get update &amp;&amp; sudo apt-get install -y perl cpanminus\n\n# #\n#   CentOS/RHEL\n# #\n\nsudo yum makecache &amp;&amp; sudo yum install -y perl perl-App-cpanminus\n\n# #\n#   Minimum Dependencies\n# #\n\nsudo cpanm \\\n  IO::Socket::INET6 \\\n  IO::Socket::SSL \\\n  LWP \\\n  Net::LibIDN \\\n  Net::SSLeay \\\n  Socket6\n</code></pre> <p></p>", "tags": ["install", "dependencies", "apt", "apt-get", "dnf", "cpan", "cpanm", "yum"]}, {"location": "install/dependencies/#full-dependencies", "title": "Full Dependencies", "text": "<p>The following commands allow you to install the full list of dependencies for CSF which include packages for every feature shipped with CSF, including the statistics feature which is enabled in the <code>/etc/csf/csf.conf</code> with the setting <code>ST_ENABLE = \"1\"</code>.</p> <p>This set of dependencies also includes <code>sendmail</code> to make use of CSF's mailing functionality.</p> <p></p>  Debian/Ubuntu (apt-get) CentOS/RHEL (yum/dnf) Perl (CPAN) Perl (CPANMINUS) <pre><code># #\n#   Full Dependencies\n# #\n\nsudo apt-get update &amp;&amp; sudo apt-get install -y \\\n  dnsutils \\\n  ipset \\\n  libcrypt-ssleay-perl \\\n  libgd-graph-perl \\\n  libio-socket-inet6-perl \\\n  libio-socket-ssl-perl \\\n  libjson-perl \\\n  liblwp-protocol-https-perl \\\n  libnet-libidn-perl \\\n  libnet-ssleay-perl \\\n  libsocket6-perl \\\n  libtime-hires-perl \\\n  libwww-perl \\\n  perl \\\n  sendmail \\\n  wget\n</code></pre> <pre><code># #\n#   Full Dependencies\n# #\n\nsudo yum makecache &amp;&amp; sudo yum install -y \\\n  bind-utils \\\n  ipset \\\n  net-tools \\\n  perl \\\n  perl-Crypt-SSLeay \\\n  perl-GDGraph \\\n  perl-IO-Socket-INET6 \\\n  perl-IO-Socket-SSL.noarch \\\n  perl-JSON \\\n  perl-libwww-perl \\\n  perl-LWP-Protocol-https.noarch \\\n  perl-Math-BigInt \\\n  perl-Net-LibIDN2 \\\n  perl-Net-SSLeay \\\n  perl-Socket \\\n  perl-Socket6 \\\n  perl-Time-HiRes \\\n  sendmail \\\n  wget\n</code></pre> <p>For the Statistics feature, ensure GD C library headers are installed first:</p> <ul> <li>Debian/Ubuntu: <code>sudo apt-get install -y libgd-dev</code></li> <li>RHEL/CentOS: <code>sudo yum install -y gd-devel</code></li> </ul> <pre><code># #\n#   Debian/Ubuntu\n# #\n\nsudo apt-get update &amp;&amp; sudo apt-get install -y perl libgd-dev\n\n# #\n#   CentOS/RHEL\n# #\n\nsudo yum makecache &amp;&amp; sudo yum install -y epel-release perl gd-devel\n\n# #\n#   Full Dependencies\n# #\n\nsudo cpan -i \\\n  Crypt::SSLeay \\\n  Digest::MD5 \\\n  Digest::SHA \\\n  Email::Valid \\\n  GD::Graph \\\n  IO::Socket::INET6 \\\n  IO::Socket::SSL \\\n  JSON \\\n  LWP \\\n  LWP::Protocol::https \\\n  LWP::UserAgent \\\n  Net::LibIDN \\\n  Net::SSLeay \\\n  Socket \\\n  Socket6 \\\n  Time::HiRes\n</code></pre> <p>For the Statistics feature, ensure GD C library headers are installed first:</p> <ul> <li>Debian/Ubuntu: <code>sudo apt-get install -y libgd-dev</code></li> <li>RHEL/CentOS: <code>sudo yum install -y gd-devel</code></li> </ul> <pre><code># #\n#   Debian/Ubuntu\n# #\n\nsudo apt-get update &amp;&amp; sudo apt-get install -y perl libgd-dev cpanminus\n\n# #\n#   CentOS/RHEL\n# #\n\nsudo yum makecache &amp;&amp; sudo yum install -y epel-release perl gd-devel perl-App-cpanminus\n\n# #\n#   Full Dependencies\n# #\n\nsudo cpanm \\\n  Crypt::SSLeay \\\n  Digest::MD5 \\\n  Digest::SHA \\\n  Email::Valid \\\n  GD::Graph \\\n  IO::Socket::INET6 \\\n  IO::Socket::SSL \\\n  JSON \\\n  LWP \\\n  LWP::Protocol::https \\\n  LWP::UserAgent \\\n  Net::LibIDN \\\n  Net::SSLeay \\\n  Socket \\\n  Socket6 \\\n  Time::HiRes\n</code></pre> <p></p>", "tags": ["install", "dependencies", "apt", "apt-get", "dnf", "cpan", "cpanm", "yum"]}, {"location": "install/dependencies/#optional-dependencies", "title": "Optional Dependencies", "text": "<p>If you decided to opt for the Full Dependencies install above, you do not need to do this step since the full dependency instructions already include these packages.</p> <p> </p>", "tags": ["install", "dependencies", "apt", "apt-get", "dnf", "cpan", "cpanm", "yum"]}, {"location": "install/dependencies/#email-alerts", "title": "Email Alerts", "text": "<p>CSF can send email alerts for blocked IPs, login failures, or other events. To enable this functionality, you need a working Mail Transfer Agent (MTA) such as <code>sendmail</code> or <code>postfix</code>.</p> Important Notes to Remember <p>The following should be taken into consideration when installing the dependencies for email alerts:</p> <ul> <li>After installing sendmail, ensure the MTA is enabled and running:</li> <li>Debian/Ubuntu: <code>sudo systemctl enable --now sendmail</code></li> <li>RHEL/CentOS: <code>sudo systemctl enable --now sendmail</code></li> <li>You can also use <code>postfix</code> or another MTA if preferred \u2014 CSF will use whatever MTA is configured on the system.</li> <li>This is optional if you do not need email alerts, but it is highly recommended for security monitoring.</li> </ul> <p></p>  Debian/Ubuntu (apt-get) CentOS/RHEL (yum/dnf) <pre><code>sudo apt-get update &amp;&amp; sudo apt-get install -y sendmail\n</code></pre> <pre><code>sudo yum makecache &amp;&amp; sudo yum install -y sendmail\n</code></pre> <p> </p>", "tags": ["install", "dependencies", "apt", "apt-get", "dnf", "cpan", "cpanm", "yum"]}, {"location": "install/dependencies/#statistics-graphs", "title": "Statistics / Graphs", "text": "<p>CSF comes with an optional feature which allows you to generate charts / graphs that can show Statistics for your server. In order to generate these charts, a few packages are required.</p> <ul> <li> <p>To enable Statistics (<code>ST_ENABLE = \"1\"</code>), you need the following:</p> <ul> <li> <p> GD Graphics Library (libgd) </p> <ul> <li>C library for creating and manipulating images (PNG, JPEG, GIF, etc.).  </li> <li>Provides low-level graphics functions for CSF statistics.</li> <li> Debian/Ubuntu: installing the Perl module <code>GD::Graph Perl Module</code> below will automatically pull in the necessary GD library.</li> <li> RHEL/CentOS: you may need <code>gd-devel</code>.</li> </ul> </li> <li> <p> GD::Graph Perl Module </p> <ul> <li>Perl module that depends on the GD library.  </li> <li>Provides an API to draw charts and graphs (line, bar, pie, etc.) in Perl scripts.  </li> <li>Used by CSF to render statistics graphs in the web interface.  </li> <li> Debian/Ubuntu: install via (<code>libgd-graph-perl</code> or CPAN/CPANM.</li> <li> RHEL/CentOS: install via <code>perl-GDGraph</code> or CPAN/CPANM.</li> </ul> </li> </ul> </li> </ul> <p></p>  Debian/Ubuntu (apt-get) CentOS/RHEL (yum/dnf) Perl (CPAN) Perl (CPANMINUS) <pre><code># Install GD Graphics Library (C library) \u2014 usually pulled in automatically\nsudo apt-get update &amp;&amp; sudo apt-get install -y libgd-dev\n\n# Install GD::Graph Perl module\nsudo apt-get install -y libgd-graph-perl\n</code></pre> <pre><code># Install GD Graphics Library (C library) \u2014 usually pulled in automatically\nsudo yum makecache &amp;&amp; sudo yum install -y gd-devel\n\n# Install GD::Graph Perl module\nsudo yum install -y perl-GDGraph\n</code></pre> <pre><code># Install GD::Graph Perl module (requires libgd-dev already installed)\nsudo cpan -i GD::Graph\n</code></pre> <pre><code># Install GD::Graph Perl module (requires libgd-dev already installed)\nsudo cpanm GD::Graph\n</code></pre> <p> </p>", "tags": ["install", "dependencies", "apt", "apt-get", "dnf", "cpan", "cpanm", "yum"]}, {"location": "install/dependencies/#blocklists", "title": "Blocklists", "text": "<p>CSF allows you to manage blocklists, which are lists of IP addresses that should be denied access to your server. Blocklists can come from official CSF sources or from third-party vendors, and they help automate the process of blocking potentially harmful traffic.</p> <p>Blocklists can be handled in two ways:</p> <ol> <li>Standard iptables rules: Each IP in the blocklist generates its own iptables rule when CSF starts. This works well for small lists but can become resource-intensive for lists with thousands of entries.</li> <li>IPSET integration: If IPSET is installed and enabled in the CSF configuration, each IP in the blocklist is added to an IPSET set. CSF then loads these IPSET lists instead of creating individual iptables rules. This method is much more efficient and reduces system resource usage for large blocklists.</li> </ol> <p></p> <p>If you would like to utilize CSF's built in IPSET integration, you will need to install the required dependencies:</p>  Debian/Ubuntu (apt-get) CentOS/RHEL (yum/dnf) <pre><code>sudo apt-get update &amp;&amp; sudo apt-get install -y ipset\n</code></pre> <pre><code>sudo yum install -y epel-release\nsudo yum makecache &amp;&amp; sudo yum install -y ipset\n</code></pre> <p></p> <p>This section does not go into detailed instructions on how to set up Blocklists or IPSET, however, if you want to read the full instructions for setting this up, review the chapters Introduction to IPSETs and  Setting Up Blocklists.</p> <p> Introduction to IPSETs</p> <p> Setting Up Blocklists</p> <p> </p>", "tags": ["install", "dependencies", "apt", "apt-get", "dnf", "cpan", "cpanm", "yum"]}, {"location": "install/dependencies/#dns-lookups", "title": "DNS Lookups", "text": "<p>CSF supports optional DNS Lookups, which allow the firewall to resolve IP addresses into hostnames and perform reverse lookups. This can be useful for logging, reporting, or applying rules based on domain names rather than just IP addresses. For example, CSF can show resolved hostnames in alert emails or in the web interface, making it easier to understand who is connecting to your server.</p> <p>Additionally, the <code>csf -g</code> and <code>csf -a</code> commands can use DNS lookups if the required packages are installed, allowing IP addresses to be automatically resolved to hostnames when searching or adding entries.</p> <p>To enable DNS lookups, CSF requires the <code>dnsutils</code> package (on Debian/Ubuntu) or <code>bind-utils</code> (on RedHat/CentOS). These packages provide tools such as <code>dig</code> and <code>nslookup</code> that CSF uses to perform DNS queries.</p>  Debian/Ubuntu (apt-get) CentOS/RHEL (yum/dnf) <pre><code>sudo apt-get update &amp;&amp; sudo apt-get install -y dnsutils\n</code></pre> <pre><code>sudo yum makecache &amp;&amp; sudo yum install -y bind-utils\n</code></pre> <p> </p>", "tags": ["install", "dependencies", "apt", "apt-get", "dnf", "cpan", "cpanm", "yum"]}, {"location": "install/dependencies/#geoip-blocking", "title": "GeoIP Blocking", "text": "<p>GeoIP Blocking in CSF allows you to block or allow traffic based on the country of origin. This is useful for restricting access to your server from certain regions or implementing geo-specific rules.  </p> <p>This feature does not require a traditional system package to function. Instead, it relies on external databases that map IP addresses to countries. </p> <p></p> <p>You have two options for providing these databases:</p> <ol> <li>MaxMind GeoLite2 Databases</li> <li>DB-IP, ipdeny.com, or iptoasn.com</li> </ol> <p>If you opt to use <code>MaxMind</code>, you can automate the database updates by installing the following:</p>  Debian/Ubuntu (apt-get) CentOS/RHEL (yum/dnf) <pre><code>sudo add-apt-repository ppa:maxmind/ppa\nsudo apt update\nsudo apt install geoipupdate\n</code></pre> <pre><code>sudo yum install -y epel-release\nsudo yum makecache\nsudo yum install -y geoipupdate\n</code></pre> <p></p> <p>This section does not go into detailed instructions on how to set up GeoIP blocking, however, if you want to read the full instructions for setting this up, review the chapter Geographical IP Block Integration.</p> <p> Geographical IP Block Integration</p> <p></p> <p></p>", "tags": ["install", "dependencies", "apt", "apt-get", "dnf", "cpan", "cpanm", "yum"]}, {"location": "install/dependencies/#next-steps", "title": "Next Steps", "text": "<p>Select what documentation you would like to proceed with next ...</p> <ul> <li> <p> Download CSF</p> <p>The next part of the guide shows how to download csf from our official sources, such as the GitHub repository, and place it on your server.</p> <p>It covers using <code>curl</code> or <code>wget</code> to fetch the files, as well as extracting them using either the traditional tar.gz method or the newer zip format.</p> <p>This step is essential to prepare your server for installing CSF and configuring the firewall.</p> </li> </ul> <p> </p>", "tags": ["install", "dependencies", "apt", "apt-get", "dnf", "cpan", "cpanm", "yum"]}, {"location": "install/docker/", "title": "Usage \u203a Docker Integration", "text": "", "tags": ["usage", "configure", "integration", "docker"]}, {"location": "install/docker/#docker-integration", "title": "Docker Integration", "text": "<p>Running CSF in environments that leverage Docker requires special considerations due to containerized networking and isolated interfaces. This section provides guidance on configuring CSF to recognize Docker networks, manage container IP ranges, and ensure that firewall rules do not interfere with container-to-host or container-to-container communication. Following these steps will help maintain both security and functionality in your Docker-based infrastructure.</p> <p></p> <p></p>", "tags": ["usage", "configure", "integration", "docker"]}, {"location": "install/docker/#enable-docker-mode", "title": "Enable Docker Mode", "text": "<p>Open your CSF config file located at <code>/etc/csf/csf.conf</code> and change the following setting to the value <code>1</code>:</p>  Find Change To /etc/csf/csf.conf<pre><code>DOCKER = \"0\"\n</code></pre> /etc/csf/csf.conf<pre><code>DOCKER = \"1\"\n</code></pre> <p></p> <p>Save the file and then give CSF a restart:</p>  Command <pre><code>sudo csf -ra\n</code></pre> <p></p> <p>Afterward, give your Docker service a restart:</p>  Command <pre><code>sudo service docker restart\n</code></pre> <p></p> <p></p>", "tags": ["usage", "configure", "integration", "docker"]}, {"location": "install/docker/#what-is-docker", "title": "What is Docker?", "text": "<p>Docker is a platform that allows developers and system administrators to package applications and their dependencies into lightweight, portable containers. These containers run consistently across different environments, ensuring that software behaves the same on a developer\u2019s laptop as it does on production servers. By isolating applications from the underlying operating system, Docker simplifies deployment, scaling, and management, making it an essential tool for modern infrastructure and DevOps practices.</p> <p>While Docker containers are not full virtual machines, they function in a similar way by providing isolated environments for applications. Each container has its own filesystem, processes, and network interfaces, allowing multiple containers to run on the same host without interfering with each other. This isolation provides many of the benefits of traditional virtual machines but with far lower overhead and faster startup times.</p> <p></p> <p></p>", "tags": ["usage", "configure", "integration", "docker"]}, {"location": "install/docker/#troubleshooting", "title": "Troubleshooting", "text": "<p>The following section highlights common issues or errors you might encounter when configuring CSF to work with Docker, along with potential solutions to resolve them.</p> <p></p>", "tags": ["usage", "configure", "integration", "docker"]}, {"location": "install/docker/#error-response-from-daemon-failed-to-set-up-container-networking", "title": "Error response from daemon: failed to set up container networking", "text": "<p>After integrating CSF, you might encounter the following error when trying to start or restart a Docker container:</p> <pre><code>Error response from daemon: failed to set up container networking:\n    driver failed programming external connectivity on endpoint my_container (cc81da8c4XXXXXXXXX): \n        Unable to enable DNAT rule:  (iptables failed: \n            iptables --wait -t nat -A DOCKER -p tcp -d 0/0 --dport 80 -j DNAT --to-destination 172.XX.XX.XX:80 ! -i br-6f611f185f\n</code></pre> <p></p> <p>To correct the above error, restart your docker service:</p>  Command <pre><code>sudo service docker restart\n</code></pre> <p></p> <p>You can now restart the Docker container again.</p>  Command (docker restart) Command (docker compose) Command (docker run) <pre><code>docker restart &lt;container_name_or_id&gt;\n</code></pre> <pre><code>docker-compose restart &lt;container_name_or_id&gt;\n</code></pre> <pre><code>docker run --name &lt;container_name_or_id&gt; --restart unless-stopped ...\n</code></pre> <p></p> <p></p>", "tags": ["usage", "configure", "integration", "docker"]}, {"location": "install/docker/#conclusion", "title": "Conclusion", "text": "<p>If you do all of the steps above, you should now be able to access the CSF web interface through your browser, with the added protection of Traefik. This will allow you to access the web interface from other locations, implement middleware such as IP whitelisting, and not expose the CSF web interface port to the world. You should NOT be allowing any connection to access the web interface, even if they don't have the username and password to sign in.</p> <p></p> <p></p>", "tags": ["usage", "configure", "integration", "docker"]}, {"location": "install/docker/#next-steps", "title": "Next Steps", "text": "<p>Select what documentation you would like to proceed with next ...</p> <ul> <li> <p> Authentik Integration</p> <p>Enhance the security of CSF by placing it behind the Authentik identity  provider using a forward proxy. </p> <p>This ensures that all traffic to the CSF web interface passes through Authentik,  giving you centralized control over authentication and access.</p> <p>With this setup, CSF is protected by modern authentication methods such as passwords, two-factor authentication (2FA), or passkeys.</p> </li> <li> <p> Geographical IP Block Integration</p> <p>Configure geographical restrictions in CSF to whitelist or blacklist specific regions from accessing your server.</p> <p>This chapter covers enabling the GeoIP blocklist feature using third-party services such as MaxMind (requires an API key), db-ip, ipdeny, or iptoasn.</p> <p>These services allow you to control access based on location while keeping your server secure.</p> </li> </ul> <p> </p>", "tags": ["usage", "configure", "integration", "docker"]}, {"location": "install/download/", "title": "Install \u203a Download CSF", "text": "", "tags": ["install", "setup", "download"]}, {"location": "install/download/#download-csf", "title": "Download CSF", "text": "<p>In the previous section, we explained how to install all the required dependencies for CSF. Now, we\u2019ll guide you through downloading the latest version of ConfigServer Security &amp; Firewall.</p> <p>Instructions on this page cover both the <code>tgz</code> and `zip archive, see the note below:</p> <code>.zip</code> vs <code>.tgz</code> format <p>Our documentation frequently mentions both <code>.zip</code> and <code>.tgz</code> releases of CSF. </p> <p>When we initially developed addons for CSF, we pushed all of our releases in a <code>.zip</code> archive. </p> <p>However, after taking over full development of CSF, we opted to migrate back to the <code>.tgz</code> format to keep conformity with how the original developer packaged releases. This is why our scripts mention both extensions, and why our scripts look for both.</p> <p></p>", "tags": ["install", "setup", "download"]}, {"location": "install/download/#generic-environment", "title": "Generic Environment", "text": "<p>These instructions are primarily written for servers without a control panel (such as cPanel, DirectAdmin, etc.).  However, most users can still follow along since the installation process is largely the same across all environments.  </p> <p>The main difference comes after installation \u2014 the way you access and manage CSF will vary depending on the control panel in use.</p> <p> </p> <p>Download the latest version of CSF. Two methods are provided below, and you can pick either one. Most users will want to opt for the  <code>Direct Download</code>.</p>  Direct Download (tgz) Direct Download (zip) Get.sh <pre><code># Using wget (tgz)\nwget https://download.configserver.dev/csf.tgz\n\n# Using curl (tgz)\ncurl -O https://download.configserver.dev/csf.tgz\n</code></pre> <pre><code># Using wget (zip)\nwget https://download.configserver.dev/csf.zip\n\n# Using curl (zip)\ncurl -O https://download.configserver.dev/csf.zip\n</code></pre> <pre><code># Using wget\nbash &lt;(wget -qO - https://get.configserver.dev)\n\n# Using curl\nbash &lt;(curl -sL https://get.configserver.dev)\n</code></pre> <p></p> <p>Decompress / unzip the downloaded archive file:</p>  .tgz .zip <pre><code>tar -xzf csf.tgz -C /tmp\n</code></pre> <pre><code>unzip csf.zip -d /tmp\n</code></pre> <p></p> <p>After you extract the archive, you can now change over to the folder where the extracted CSF files are located:</p> <pre><code>cd /tmp/csf\n</code></pre> <p></p> <p>At this point, we have CSF downloaded to your system and ready to install. However, we are going to first run Diagnostic Tests to ensure that our system is ready to handle CSF and has all required dependencies.</p> <p></p> <p>Select what documentation you would like to proceed with next ...</p> <ul> <li> <p> Run Diagnostic Tests</p> <p>Up next, we will explain how to run some diagnostic tests on your server before installing CSF.  These tests ensure that your server meets all requirements regarding perl dependencies.  </p> <p>Running these checks will confirm whether CSF can function properly on your server.</p> </li> </ul> <p> </p>", "tags": ["install", "setup", "download"]}, {"location": "install/download/#cpanel-whm", "title": "cPanel &amp; WHM", "text": "<p>If you have a server which you do not personally manage or do not have root access for, you will need to sign into WHM and see if your server provider has already pre-installed a copy of CSF which you can use. Without root access to the server, you will be unable to install CSF. Contact your hosting provider for additional information.</p> <p>However, if you manage your own server with root shell access, and have a valid cPanel &amp; WHM license, this means that you can manually install ConfigServer Firewall onto your server to utilize it.</p> <p></p> <p>First, log in to your server as the <code>root</code> user via SSH.</p>  Using Password Using Private Key <pre><code>ssh -vvv root@XX.XX.XX.XX -p 22\n</code></pre> <pre><code>ssh -i /path/to/private_key -vvv root@XX.XX.XX.XX -p 22\n</code></pre> <p></p> <p>Download the latest version of CSF. Two methods are provided below, and you can pick either one. Most users will want to opt for the  <code>Direct Download</code>.</p>  Direct Download (tgz) Direct Download (zip) Get.sh <pre><code># Using wget (tgz)\nwget https://download.configserver.dev/csf.tgz\n\n# Using curl (tgz)\ncurl -O https://download.configserver.dev/csf.tgz\n</code></pre> <pre><code># Using wget (zip)\nwget https://download.configserver.dev/csf.zip\n\n# Using curl (zip)\ncurl -O https://download.configserver.dev/csf.zip\n</code></pre> <pre><code># Using wget\nbash &lt;(wget -qO - https://get.configserver.dev)\n\n# Using curl\nbash &lt;(curl -sL https://get.configserver.dev)\n</code></pre> <p></p> <p>Decompress / unzip the downloaded archive file:</p>  .tgz .zip <pre><code>tar -xzf csf.tgz -C /usr/src/\n</code></pre> <pre><code>unzip csf.zip -d /usr/src/\n</code></pre> <p></p> <p>After you extract the archive, you can now change over to the folder where the extracted CSF files are located:</p> <pre><code>cd /usr/src/csf\n</code></pre> <p></p> <p>At this point, we have CSF downloaded to your system and ready to install. However, we are going to first run Diagnostic Tests to ensure that our system is ready to handle CSF and has all required dependencies.</p> <p></p> <p></p>", "tags": ["install", "setup", "download"]}, {"location": "install/download/#next-steps", "title": "Next Steps", "text": "<p>Select what documentation you would like to proceed with next ...</p> <ul> <li> <p> Run Diagnostic Tests</p> <p>Up next, we will explain how to run some diagnostic tests on your server before installing CSF.  These tests ensure that your server meets all requirements regarding perl dependencies.  </p> <p>Running these checks will confirm whether CSF can function properly on your server.</p> </li> </ul> <p></p> <p></p>", "tags": ["install", "setup", "download"]}, {"location": "install/install/", "title": "Install \u203a Install CSF", "text": "", "tags": ["install", "setup", "cpanel", "whm", "webmin", "vestacp", "cwp", "centos-web-panel", "directadmin", "interworx", "cyberpanel"]}, {"location": "install/install/#install-csf", "title": "Install CSF", "text": "<p>In the previous section, we covered how to install the required dependencies for CSF, download and extract the necessary files, and run the csftest.pl script.  </p> <p>If your tests were successful, you are now ready to install CSF on your server and begin configuring your new firewall. This section focuses on the basic installation process \u2014 detailed configuration will be covered in a later chapter.</p> <p> </p> <p></p> <p></p>", "tags": ["install", "setup", "cpanel", "whm", "webmin", "vestacp", "cwp", "centos-web-panel", "directadmin", "interworx", "cyberpanel"]}, {"location": "install/install/#before-you-begin", "title": "Before You Begin", "text": "<p>This page includes installation instructions for numerous control panels, however, the install script has been developed to be automatic in how it detects what distro you are on, and if you are using any control panels such as cPanel / WHM, VestaCP, etc.</p> <p>Typically, all users are going to run the same <code>install.sh</code> file, and then the installation wizard will detect if it needs to do anything extra. However, individual platforms instructions have been provided on this page.</p> <p>If your distro or control panel is not mentioned here, follow the Install: Generic instructions, and CSF will automatically detect anything extra that it needs to do.</p> <p></p> <p></p>", "tags": ["install", "setup", "cpanel", "whm", "webmin", "vestacp", "cwp", "centos-web-panel", "directadmin", "interworx", "cyberpanel"]}, {"location": "install/install/#install-generic", "title": "Install: Generic", "text": "<p>Before installing CSF, we need to make sure that no other firewalls are running. Use the commands below to disable any existing firewalls:</p>  UFW Firewalld <p>Stop and disable <code>ufw</code></p> <pre><code>sudo systemctl stop ufw\nsudo systemctl disable ufw\n</code></pre> <p>Confirm <code>ufw</code> is disabled with:</p> <pre><code>sudo systemctl status ufw\n</code></pre> <p>Stop and disable <code>firewalld</code></p> <pre><code>sudo systemctl stop firewalld\nsudo systemctl disable firewalld\n</code></pre> <p>Confirm <code>firewalld</code> is disabled with:</p> <pre><code>sudo systemctl status firewalld\n</code></pre> <p></p> Previous Chapter: Download <p>If coming from the previous download chapter, you should have downloaded a copy of CSF and extracted it on your server.  </p> <p>If so, skip ahead a few steps.</p> <p></p> <p>If you do not have the latest vesion of CSF downloaded; grab a copy with one of the following commands:</p>  .tgz .zip <pre><code># Using wget (tgz)\nwget https://download.configserver.dev/csf.tgz\n\n# Using curl (tgz)\ncurl -O https://download.configserver.dev/csf.tgz\n</code></pre> <pre><code># Using wget (zip)\nwget https://download.configserver.dev/csf.zip\n\n# Using curl (zip)\ncurl -O https://download.configserver.dev/csf.zip\n</code></pre> <p></p> <p>Decompress / unzip the downloaded archive file:</p>  .tgz .zip <pre><code>tar -xzf csf.tgz -C /tmp\n</code></pre> <pre><code>unzip csf.zip -d /tmp\n</code></pre> <p></p> <p>Run the CSF installation script:</p>  Command <pre><code>sudo sh /tmp/csf/install.sh\n</code></pre> <p></p> <p>Follow any instructions on-screen. If prompted for any additional information, enter it. Once the wizard completes, you can confirm if CSF is installed and functioning by accessing your server via SSH, and running the CSF version command:</p>  Command Output <pre><code>sudo csf -v\n</code></pre> <pre><code>csf: v15.10 (generic)\n</code></pre> <p></p> <p>Confirm the status of <code>csf</code> by running:</p>  Command Output <pre><code>sudo systemctl status csf\n</code></pre> <pre><code>\u25cf csf.service - ConfigServer Security &amp; Firewall - csf\n    Loaded: loaded (/lib/systemd/system/csf.service; enabled; vendor preset: enabled)\n    Active: active (exited) since Mon 2025-09-15 23:45:04 UTC; 14 seconds ago\n  Main PID: 597 (code=exited, status=0/SUCCESS)\n        CPU: 0min 14.956s\n\nNotice: journal has been rotated since unit was started, output may be incomplete.\n</code></pre> <p></p> Testing Mode Disables LFD <p>If you have not yet disabled testing mode in the <code>csf.conf</code>, lfd will be unable to start. Performing this step is covered in the next Configuration chapter.</p> <p></p> <p>If you receive the expected response, you can skip the remaining steps on this page and continue to the Next Steps section. Detailed instructions on using CSF will be provided in the next chapter of this guide.</p> <p> </p> <p> </p>", "tags": ["install", "setup", "cpanel", "whm", "webmin", "vestacp", "cwp", "centos-web-panel", "directadmin", "interworx", "cyberpanel"]}, {"location": "install/install/#install-cpanel-and-whm", "title": "Install: cPanel and WHM", "text": "<p>Installing CSF for WHM is almost the same process outlined in the Install: Generic steps, just with different extraction paths, and how you will access the CSF web interface.</p> <p></p> <p>Log in as the <code>root</code> user via SSH.</p>  Using Password Using Private Key <pre><code>ssh -vvv root@XX.XX.XX.XX -p 22\n</code></pre> <pre><code>ssh -i /path/to/private_key -vvv root@XX.XX.XX.XX -p 22\n</code></pre> <p></p> <p>You must already have cPanel installed to your server. cPanel offers a 15-day free trial, or you can purchase a license. To install and activate a free trial, run the following command on your server:</p>  Command <pre><code>cd /home &amp;&amp; sudo curl -o latest -L https://securedownloads.cpanel.net/latest &amp;&amp; sudo sh latest\n</code></pre> <p></p> <p>The installation of cPanel usually takes between 5 and 20 minutes, depending on your server\u2019s hardware and internet connection, as it installs and configures a large number of system packages.  </p> <p>While the installation is in progress, you\u2019ll need to create a cPanel account. This account is required to activate your free trial or paid license, and you\u2019ll use it to sign in once the installation finishes.  </p> <p></p> <p>After the installation completes, you\u2019ll see output similar to the following in your terminal:</p>  Output <pre><code>[19126] ( INFO): Flushing the task queue\n[19126] ( INFO): cPanel install finished in 6 minutes and 28 seconds!\n[19126] ( INFO): Congratulations! Your installation of cPanel &amp; WHM 11.130 is now complete. The next step is to configure your server. \n[19126] ( INFO): \n[19126] ( INFO): Before you configure your server, ensure that your firewall allows access on port 2087.\n[19126] ( INFO): \n[19126] ( INFO): After ensuring that your firewall allows access on port 2087, you can configure your server.\n[19126] ( INFO): \n[19126] ( INFO): 1. Open your preferred browser\n[19126] ( INFO): \n[19126] ( INFO): 2. Navigate to the following url using the address bar and enter this one-time autologin url:\n[19126] ( INFO): \n[19126] ( INFO): https://cp.configserver.dev:2087/cpsess4927138456/login/?session=root%x7rGd9PLkWqz3YFb2t%3acreate_user_session%f8b47c19a5de91b03ce6f20dbb1847e9d2\n</code></pre> <p></p> <p>Open the link in your browser and begin activating cPanel. Copy/paste the link you were provided in the terminal into your browser. </p> cPanel \u203a WHM Introduction Screen <p></p> <p>During setup, you may be prompted to review and accept the cPanel License Agreement or Terms of Use.  </p> <p>On the following page, click Log in to cPanel Store button in the lower-right corner to activate your license. You will be prompted to sign into your cPanel account that you created earlier.  </p> <p>If you ever need to verify your cPanel license later, you can do so by running the command below in your terminal:</p>  Command Output <pre><code>sudo /usr/local/cpanel/cpkeyclt\n</code></pre> <pre><code>Updating cPanel license...Done. Update succeeded.\n</code></pre> <p></p> <p>If you get the following response from running the command, you will need to reach out to the cPanel Support Team by creating a ticket.</p>  Output <pre><code>Updating cPanel license...Done. Update Failed!\nError message:\nThe cPanel license server said that a license could not be issued for your server (66).\nFor more information visit: https://www.cpanel.net/lic/\n\nThe exact message was: No valid cPanel/WHM license found. (XX.XX.XX.XX)\n</code></pre> <p></p> <p>Complete the cPanel Activation Wizard, and at some point, you will be taken to the homepage of WHM:</p> WHM \u203a Home <p></p> <p>Set WHM aside for a moment. Next, we need to ensure that we don't have any existing firewalls that need to be disabled. Run the commands below to disable them:</p>  UFW Firewalld <p>Stop and disable <code>ufw</code></p> <pre><code>sudo systemctl stop ufw\nsudo systemctl disable ufw\n</code></pre> <p>Confirm <code>ufw</code> is disabled with:</p> <pre><code>sudo systemctl status ufw\n</code></pre> <p>Stop and disable <code>firewalld</code></p> <pre><code>sudo systemctl stop firewalld\nsudo systemctl disable firewalld\n</code></pre> <p>Confirm <code>firewalld</code> is disabled with:</p> <pre><code>sudo systemctl status firewalld\n</code></pre> <p></p> Previous Chapter: Download <p>If coming from the previous download chapter, you should have downloaded a copy of CSF and extracted it on your server.  </p> <p>If so, skip ahead a few steps.</p> <p></p> <p>If you do not have the latest vesion of CSF downloaded; grab a copy with one of the following commands:</p>  .tgz .zip <pre><code># Using wget (tgz)\nwget https://download.configserver.dev/csf.tgz\n\n# Using curl (tgz)\ncurl -O https://download.configserver.dev/csf.tgz\n</code></pre> <pre><code># Using wget (zip)\nwget https://download.configserver.dev/csf.zip\n\n# Using curl (zip)\ncurl -O https://download.configserver.dev/csf.zip\n</code></pre> <p></p> <p>Decompress / unzip the downloaded archive file:</p> Root required for tar extraction <p>On a cPanel server, you must extract CSF as root when decompressing to <code>/usr/src/</code>. Otherwise will you get the error:</p> <ul> <li><code>tar: csf: Cannot mkdir: Permission denied</code></li> </ul> <p>You can also extract to <code>/tmp</code></p> <p></p>  .tgz .zip <pre><code>tar -xzf csf.tgz -C /usr/src/\n</code></pre> <pre><code>unzip csf.zip -d /usr/src/\n</code></pre> <p></p> <p>Run the CSF installation script:</p>  Command <pre><code>sudo sh /usr/src/csf/install.sh\n</code></pre> <p></p> <p>Follow any instructions on-screen. If prompted for any additional information, enter it. Once the wizard completes, you can confirm if CSF is installed and functioning by accessing your server via SSH, and running the CSF version command:</p>  Command Output <pre><code>sudo csf -v\n</code></pre> <pre><code>csf: v15.01 (cPanel)\n</code></pre> <p></p> <p>Confirm the status of <code>csf</code> by running:</p>  Command Output <pre><code>sudo systemctl status csf\n</code></pre> <pre><code>\u25cf csf.service - ConfigServer Security &amp; Firewall - csf\n    Loaded: loaded (/lib/systemd/system/csf.service; enabled; vendor preset: enabled)\n    Active: active (exited) since Mon 2025-09-15 23:45:04 UTC; 14 seconds ago\n  Main PID: 597 (code=exited, status=0/SUCCESS)\n        CPU: 0min 14.956s\n\nNotice: journal has been rotated since unit was started, output may be incomplete.\n</code></pre> <p></p> Testing Mode Disables LFD <p>If you have not yet disabled testing mode in the <code>csf.conf</code>, lfd will be unable to start. Performing this step is covered in the next Configuration chapter.</p> <p></p> <p>If you received the expected response, CSF has successfully installed. Next, log back into your WHM control panel at <code>https://domain.lan:2087</code> or <code>https://127.0.0.1:2087</code>. On the left-side WHM menu, navigate to:</p> <ul> <li>WHM \u00bb Home \u00bb Plugins \u00bb <code>ConfigServer Security &amp; Firewall</code> </li> </ul> WHM \u203a Plugins \u203a ConfigServer Security &amp; Firewall <p></p> <p>If you see ConfigServer Security &amp; Firewall within your WHM \u203a Plugins menu, this means that CSF has been successfully integrated and is ready to configure. You can skip the remaining steps on this page and continue to the Next Steps section. Detailed instructions on using CSF will be provided in the next chapter of this guide.</p> <p> </p> <p> </p>", "tags": ["install", "setup", "cpanel", "whm", "webmin", "vestacp", "cwp", "centos-web-panel", "directadmin", "interworx", "cyberpanel"]}, {"location": "install/install/#install-webmin", "title": "Install: Webmin", "text": "<p>Installing CSF with Webmin integration is straightforward. Simply install Webmin first, then install CSF, and finally add the CSF module to Webmin to complete the integration.</p> <p></p> <p>Log in as the <code>root</code> user via SSH.</p>  Using Password Using Private Key <pre><code>ssh -vvv root@XX.XX.XX.XX -p 22\n</code></pre> <pre><code>ssh -i /path/to/private_key -vvv root@XX.XX.XX.XX -p 22\n</code></pre> <p></p> <p>Ensure you have Webmin installed. If not, download the Webmin installer script:</p>  Command Output <pre><code>curl -o webmin-setup-repo.sh \\\n  https://raw.githubusercontent.com/webmin/webmin/master/webmin-setup-repo.sh\n</code></pre> <pre><code>  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                Dload  Upload   Total   Spent    Left  Speed\n100 17604  100 17604    0     0  59917      0 --:--:-- --:--:-- --:--:-- 60081\n</code></pre> <p></p> <p>Run the Webmin installer:</p>  Command Output <pre><code>sudo sh webmin-setup-repo.sh\n</code></pre> <pre><code>Setup Webmin releases repository? (y/N) y\n  Downloading Webmin developers key ..\n  .. done\n  Installing Webmin developers key ..\n  .. done\n  Setting up Webmin releases repository ..\n  .. done\n  Cleaning repository metadata ..\n  .. done\n  Downloading repository metadata ..\n  .. done\nWebmin and Usermin can be installed with:\n  apt-get install --install-recommends webmin usermin\n</code></pre> <p></p> <p>Do as instructed on-screen and run the command to install the required dependencies and the Webmin package. When prompted, press <code>Y</code>:</p>  Debian/Ubuntu (apt-get) CentOS/RHEL (yum/dnf) Output <pre><code>apt-get install --install-recommends webmin usermin\n</code></pre> <pre><code>sudo dnf install webmin\n</code></pre> <pre><code>The following NEW packages will be installed:\n  html2text libalgorithm-c3-perl libauthen-pam-perl libb-hooks-endofscope-perl libb-hooks-op-check-perl libclass-c3-perl libclass-c3-xs-perl\n  libclass-data-inheritable-perl libclass-inspector-perl libclass-method-modifiers-perl libclass-singleton-perl libclass-xsaccessor-perl\n  libcommon-sense-perl libdata-optlist-perl libdatetime-locale-perl libdatetime-perl libdatetime-timezone-perl libdbd-mysql-perl libdbi-perl\n  libdevel-callchecker-perl libdevel-caller-perl libdevel-lexalias-perl libdevel-stacktrace-perl libdynaloader-functions-perl\n  libencode-detect-perl libeval-closure-perl libexception-class-perl libfile-sharedir-perl libio-pty-perl libjson-xs-perl\n  libmodule-implementation-perl libmodule-runtime-perl libmro-compat-perl libnamespace-autoclean-perl libnamespace-clean-perl\n  libpackage-stash-perl libpackage-stash-xs-perl libpadwalker-perl libparams-classify-perl libparams-util-perl\n  libparams-validationcompiler-perl libqrencode4 libreadonly-perl libref-util-perl libref-util-xs-perl librole-tiny-perl libsocket6-perl\n  libspecio-perl libsub-exporter-perl libsub-exporter-progressive-perl libsub-identify-perl libsub-install-perl libsub-name-perl\n  libsub-quote-perl libtypes-serialiser-perl libvariable-magic-perl libxstring-perl qrencode usermin webmin\n0 upgraded, 60 newly installed, 0 to remove and 5 not upgraded.\nNeed to get 42.3 MB of archives.\nAfter this operation, 265 MB of additional disk space will be used.\n\nDo you want to continue? [Y/n]  Y\n\n[...]\nSetting up libspecio-perl (0.47-1) ...\nSetting up libb-hooks-endofscope-perl (0.25-1) ...\nSetting up libnamespace-clean-perl (0.27-1) ...\nSetting up libnamespace-autoclean-perl (0.29-1) ...\nSetting up libdatetime-locale-perl (1:1.33-1) ...\nSetting up libdatetime-timezone-perl (1:2.51-1+2021e) ...\nSetting up libdatetime-perl:amd64 (2:1.55-1build1) ...\nProcessing triggers for man-db (2.10.2-1) ...\nProcessing triggers for mailcap (3.70+nmu1ubuntu1) ...\nProcessing triggers for libc-bin (2.35-0ubuntu3.11) ...\n</code></pre> <p></p> <p>After installation is complete, open your browser and navigate to:</p> <ul> <li><code>https://127.0.0.1:10000/</code></li> </ul> <p></p> <p>You should be greeted with a Webmin authentication page. Test signing in to make sure you have root access. The username and password will be associated with your root account on your server.</p> Webmin Login Screen <p></p> <p>Put Webmin aside for a moment; we need to make sure that we don't have any existing firewalls that need disabled. If so, run the commands below:</p>  UFW Firewalld <p>Stop and disable <code>ufw</code></p> <pre><code>sudo systemctl stop ufw\nsudo systemctl disable ufw\n</code></pre> <p>Confirm <code>ufw</code> is disabled with:</p> <pre><code>sudo systemctl status ufw\n</code></pre> <p>Stop and disable <code>firewalld</code></p> <pre><code>sudo systemctl stop firewalld\nsudo systemctl disable firewalld\n</code></pre> <p>Confirm <code>firewalld</code> is disabled with:</p> <pre><code>sudo systemctl status firewalld\n</code></pre> <p></p> <p>We are ready to install CSF, which you should already have downloaded to your system. If not; download the latest version of CSF:</p>  .tgz .zip <pre><code># Using wget (tgz)\nwget https://download.configserver.dev/csf.tgz\n\n# Using curl (tgz)\ncurl -O https://download.configserver.dev/csf.tgz\n</code></pre> <pre><code># Using wget (zip)\nwget https://download.configserver.dev/csf.zip\n\n# Using curl (zip)\ncurl -O https://download.configserver.dev/csf.zip\n</code></pre> <p></p> <p>Decompress / unzip the downloaded archive file:</p>  .tgz .zip <pre><code>tar -xzf csf.tgz -C /tmp\n</code></pre> <pre><code>unzip csf.zip -d /tmp\n</code></pre> <p></p> <p>Run the CSF installation script:</p>  Option 1 Option 2 <p> Runs <code>install.sh</code>  uses <code>sh</code> shell  executable permission not required</p> <pre><code>sudo sh /tmp/csf/install.sh\n</code></pre> <p> Runs <code>install.sh</code>  uses shebang interpreter  requires executable <code>+x</code> permission</p> <pre><code>sudo chmod +x /tmp/csf/install.sh\nsudo /tmp/csf/install.sh\n</code></pre> <p></p> <p>Follow any instructions on-screen. If prompted for any additional information, enter it.</p> <p></p> <p>Log back into Webmin. Once in, navigate to Webmin Configuration \u203a Webmin Modules from the left-hand menu.</p> Webmin Configuration \u203a Webmin Modules <p></p> <p>A form will appear asking how you'd like to install the CSF module. Choose From Local File, then click Browse and select the file located at <code>/usr/local/csf/csfwebmin.tgz</code>.</p> Webmin Modules \u203a Select <code>/usr/local/csf/csfwebmin.tgz</code> <p></p> <p>Click the Install Module button at the bottom.</p> Webmin Modules \u203a Install Module <p></p> <p>After installation, Webmin will display a confirmation message indicating that CSF was successfully installed. To access it, go to the left-hand Webmin menu and navigate to:</p> <ul> <li>System \u203a ConfigServer Security &amp; Firewall</li> </ul> Webmin \u203a Install Module \u203a Success <p></p> <p>On the next page, you should see the following message:</p> Symlink Created <p>csf updated to symlink webmin module to /usr/local/csf/lib/webmin/csf/. Click here to continue</p> <p></p> <p>Click the text link and you'll be taken to the home screen of CSF.</p> Webmin \u203a CSF \u203a Homepage <p></p> <p>If the interface matches the screenshot above, the CSF integration with Webmin is complete.  </p> <p></p> <p>While CSF is in testing mode, several options on the Webmin home page will be hidden for users who have enabled the Authentic theme.  To unlock the full interface, edit <code>/etc/csf/csf.conf</code> and set <code>TESTING = \"0\"</code>.  </p> <p>Until testing mode is disabled, the Configuration section and its related buttons will not appear.</p> <ul> <li>Check Server Security</li> <li>Watch System Logs</li> <li>Search System Logs</li> <li>View Listening Ports</li> <li>Check for IPs in RBLs</li> <li>View Iptables Log</li> </ul> <p></p> Webmin \u203a CSF \u203a Testing Mode <p></p> <p>You can now proceed to the Next Steps or skip the rest of this section and begin our Configuration chapter to get things set up.</p> <p></p> Testing Mode Disables LFD <p>If you have not yet disabled testing mode in the <code>csf.conf</code>, lfd will be unable to start. Performing this step is covered in the next Configuration chapter.</p> <p> </p> <p> </p>", "tags": ["install", "setup", "cpanel", "whm", "webmin", "vestacp", "cwp", "centos-web-panel", "directadmin", "interworx", "cyberpanel"]}, {"location": "install/install/#install-directadmin", "title": "Install: DirectAdmin", "text": "<p>This part of the documentation is currently being written.</p> <p> </p> <p> </p>", "tags": ["install", "setup", "cpanel", "whm", "webmin", "vestacp", "cwp", "centos-web-panel", "directadmin", "interworx", "cyberpanel"]}, {"location": "install/install/#install-interworx", "title": "Install: InterWorx", "text": "<p>Installing CSF with InterWorx integration is simple. First we need to install InterWorx, then install CSF, and finally enable the CSF module within InterWorx to complete the integration.</p> <p></p> <p>Log in as the <code>root</code> user via SSH.</p>  Using Password Using Private Key <pre><code>ssh -vvv root@XX.XX.XX.XX -p 22\n</code></pre> <pre><code>ssh -i /path/to/private_key -vvv root@XX.XX.XX.XX -p 22\n</code></pre> <p></p> <p>Ensure you have InterWorx installed. If not, download the installer script:</p> Valid TLD / Host Required <p>Before installing InterWorx, you must set your server's hostname to a valid host.</p> <p></p>  Install (Option 1) Install (Option 2) Output <pre><code>sudo sh &lt;((curl -sL updates.interworx.com/interworx/8/install.sh))\n</code></pre> <pre><code>wget updates.interworx.com/interworx/8/install.sh\nsudo sh install.sh\n</code></pre> <pre><code>STATUS: Determining Linux distribution\nSTATUS: Checking network interface names\n\n-=-=-=-=-= Installing InterWorx-CP =-=-=-=-=-\n\nThis script will install InterWorx-CP on your system.\nPlease make sure that you have backed up any critical\ndata!\n\nThis script may be run multiple times without any\nproblems.  This is helpful if you find an error\nduring installation, you can safely ctrl-c out of\nthis script, fix the error and re-start the script.\n\nSTATUS: Checking Hostname\nThe hostname 'configserver.dev' is valid.\n\nDetails of this installation will be logged in iworx-install.log\n\nHOSTNAME   : configserver.dev\nTARGET     : CentOS Linux release 7.9.2009 (Core)\nPLATFORM   : GNU/Linux\nPROCESSOR  : x86_64\nRPM TARGET : rhe7x\nRPM DISTRO : cos7x\nRPM DIR    : /usr/src/redhat/RPMS\nSRPM DIR   : /usr/src/redhat/SRPMS\nSRPM HOST  : updates.interworx.com\nIWORX REPO : ga\nDEFAULT PHP: PHP 8.2\nMYSQL      : MARIADB 10.6\n</code></pre> <p></p> <p>While the installation is in progress, you\u2019ll need to have a valid license key which InterWorx setup wizard will ask for once you access the web control panel. InterWorx offers a 2 week free trial license key which you can apply for here</p> <p>At the end of the installation, you'll be provided with a link you must visit in order to activate InterWorx.</p>  Output <pre><code>-=-=-=-=-= Installation Complete! Next Step: License Activation! =-=-=-=-=-\n\nTo activate your license, go to\nhttps://your-ip:2443/nodeworx/\nor run: ~iworx/bin/goiworx.pex\nAlso, check out https://www.interworx.com for news, updates, and support!\n\n-=-=-=-=-= THANK YOU FOR USING INTERWORX! =-=-=-=-=-\n</code></pre> <p></p> <p>After installation is complete, open your browser and navigate to:</p> <ul> <li><code>https://your-ip:2443/nodeworx/</code></li> <li><code>https://127.0.0.1:2443/nodeworx/</code></li> </ul> <p></p> <p>You should be greeted with a InterWorx authentication page. Provide a valid e-mail address, password, and finally, provide your license key.</p> InterWorx \u203a Login Screen <p></p> <p>Once you input the information asked, InterWorx will also ask you to provide valid nameservers. For our docs, we will provide:</p> <ul> <li><code>ns1.configserver.dev</code></li> <li><code>ns2.configserver.dev</code></li> </ul> <p></p> <p>InterWorx should start the installation process. At this point, InterWorx will take anywhere around 5-10 minutes to complete.</p> <p></p> <p>Once installation is complete, navigate to the InterWorx dashboard or homepage.</p> <p>You\u2019ll be prompted to review and accept the End User License Agreement (EULA).</p> <p>Although it may seem lengthy, it\u2019s strongly recommended that you read it carefully to understand what permissions InterWorx requires and what terms you\u2019re agreeing to.</p> InterWorx \u203a End User License Agreement InterWorx: End User License Agreement <p>InterWorx End User License Agreement (EULA)</p> <p>This End User License Agreement, including the Order Form which by this reference is incorporated herein (this \u201cAgreement\u201d), is a binding agreement between InterWorx, LLC (\u201dLicensor\u201d) and the person or entity identified on the Order Form as the licensee of the Software (\u201dLicensee\u201d).</p> <p>LICENSOR PROVIDES THE SOFTWARE SOLELY ON THE TERMS AND CONDITIONS SET FORTH IN THIS AGREEMENT AND ON THE CONDITION THAT LICENSEE ACCEPTS AND COMPLIES WITH THEM. BY DOWNLOADING, INSTALLING, OBTAINING A LICENSE KEY, OR OTHERWISE ACCESSING OR USING THE SOFTWARE AND DOCUMENTATION, LICENSEE ACKNOWLEDGES THAT LICENSEE HAS READ THIS AGREEMENT, UNDERSTANDS THE AGREEMENT, AND THAT LICENSEE ACCEPTS AND AGREES TO BE BOUND BY ITS TERMS. IF LICENSEE DOES NOT AGREE TO THE TERMS OF THIS AGREEMENT, LICENSOR WILL NOT AND DOES NOT LICENSE THE SOFTWARE TO LICENSEE AND YOU MUST NOT USE THE SOFTWARE OR DOCUMENTATION.</p> <ol> <li>Definitions.</li> </ol> <p>For purposes of this Agreement, the following terms have the following meanings:   - \u201dDocumentation\u201d means user manuals, technical     manuals, and any other materials provided by     Licensor, in printed, electronic, or other form,     that describe the installation, operation, use,     or technical specifications of the Software.   - \u201dIntellectual Property Rights\u201d means any and all     registered and unregistered rights granted,     applied for, or otherwise now or hereafter in     existence under or related to any patent,     copyright, trademark, trade secret, database     protection, or other intellectual property     rights laws, and all similar or equivalent rights     or forms of protection, in any part of the world.   - \u201dLicensee\u201d has the meaning set forth in the preamble.   - \u201dLicense Fees\u201d means the license fees, including all     taxes thereon and set forth in the Order Form,     required to be paid by Licensee for the license     granted under this Agreement.   - \u201dLicensor\u201d has the meaning set forth in the preamble.   - \u201dOrder Form\u201d means the order form filled out and     submitted by or on behalf of Licensee, and accepted     by Licensor, for Licensee\u2019s purchase of the license     for the Software granted under this Agreement.   - \u201dPerson\u201d means an individual, corporation, partnership,     joint venture, limited liability company, governmental     authority, unincorporated organization, trust,     association, or other entity.   - \u201dSoftware\u201d means the software programs for which     Licensee is purchasing a license, as expressly set     forth in the Order Form.   - \u201dTerm\u201d has the meaning set forth in Section 11.   - \u201dThird Party\u201d means any Person other than Licensee or     Licensor.</p> <ol> <li>License Grant and Scope.</li> </ol> <p>Subject to and conditioned upon Licensee\u2019s payment of the License Fees and Licensee\u2019s strict compliance with all terms and conditions set forth in this Agreement, Licensor hereby grants to Licensee a nonexclusive, non-transferable, limited license during the Term to use the Software and Documentation, solely as set forth in this Section 2 and subject to all conditions and limitations set forth in Section 4 or elsewhere in this Agreement. This license grants Licensee the right to download and install in accordance with the Documentation one (1) copy of the Software on a single virtual device owned, leased, or otherwise controlled by Licensee, at a single time. If Licensee has multiple license keys for the Software, Licensee may install and use the Software only in accordance with the number of license keys Licensee has obtained.</p> <ol> <li>Third-Party Materials.</li> </ol> <p>The Software may include software, content, data, or other materials, including related documentation, that are owned by Persons other than Licensor and that are provided to Licensee on licensee terms that are in addition to and/or different from those contained in this Agreement (\u201dThird-Party Licenses\u201d). Licensee is bound by and shall comply with all Third-Party Licenses. Any breach by Licensee of any Third-Party License is also a breach of this Agreement.</p> <ol> <li>Use Restrictions.</li> </ol> <p>Licensee shall not directly or indirectly:   - (a) use (including make any copies of) the Software     or Documentation beyond the scope of the license     granted under Section 2;   - (b) unless expressly authorized by Licensor, modify,     translate, adapt, or otherwise create derivative     works or improvements, whether or not patentable, of     the Software or Documentation or any part thereof;   - \u00a9 combine the Software or any part thereof with,     or incorporate the Software or any part thereof in,     any other programs;   - (d) reverse engineer, disassemble, decompile, decode,     or otherwise attempt to derive or gain access to the     source code of the Software or any part thereof;   - (e) remove, delete, alter, or obscure any trademarks     or any copyright, trademark, patent, or other     intellectual property or proprietary rights notices     provided on or with the Software or Documentation,     including any copy thereof;   - (f) copy the Software or Documentation, in whole or     in part;   - (g) use the Software or Documentation in, or in     association with, the design, construction,     maintenance, or operation of any hazardous     environments or systems;   - (h) use the Software or Documentation in violation     of any law, regulation, or rule; or   - (i) use the Software or Documentation for purposes     of competitive analysis of the Software, the     development of a competing software product or service,     or any other purpose that is to the Licensor\u2019s     commercial disadvantage.</p> <ol> <li>Responsibility for Use of Software; Indemnification.</li> </ol> <p>Licensee is responsible and liable for all uses of the Software and Documentation through access thereto provided by Licensee, directly or indirectly. Specifically, and without limiting the generality of the foregoing, Licensee is responsible and liable for all actions and failures to take required actions with respect to the Software and Documentation by any other Person to whom Licensee may provide access to or use of the Software and/or Documentation, whether such access or use is permitted by or in violation of this Agreement. Further, Licensee shall indemnify and hold harmless Licensor, its officers, directors, agents, and employees from and against any and all demands, causes of action, losses, damages, fines, penalties, and claims, and all related costs and expenses (including reasonable attorneys\u2019 fees) (collectively referred to as \u201cLosses\u201d) arising out of the use of the Software in a manner inconsistent with the terms of this Agreement.</p> <ol> <li>Audit and Compliance Measures.</li> </ol> <p>During the Term and for three (3) years after the termination or expiration of this Agreement, Licensor may, upon written notice, audit Licensee\u2019s use of the Software to ensure Licensee\u2019s compliance with this Agreement. The Licensee shall fully cooperate with Licensor\u2019s personnel conducting such audits and provide all access requested by the Licensor to systems, equipment, and information, including machine IDs, serial numbers, and related information. If the audit determines that the Licensee\u2019s use of the Software exceeds or exceeded the use permitted by this Agreement then, in addition to any other rights and remedies Licensor may have, Licensee shall promptly pay to Licensor any underpayments in addition to the cost of the audit.</p> <ol> <li>Maintenance and Support.</li> </ol> <p>Licensee acknowledges that Licensor has no obligation to provide maintenance and support services, however, Licensor may provide patches, updates, upgrades, enhancements, modifications, or additions to the Software only if made publicly available by Licensor and if Licensee is not in breach of this Agreement. In addition, Licensor may provide such maintenance and support services separately as set forth in Licensee\u2019s Order Form and subject to the terms of this Agreement. Licensee acknowledges that Maintenance and support services do not include any new version or new release of the Software that Licensor may issue as a separate or new product, and Licensor may determine whether any issuance qualifies as a new version, new release, or update in its sole discretion.</p> <ol> <li> <p>Collection and Use of Information.</p> </li> <li> <p>(a) Licensee acknowledges that Licensor may,     directly or indirectly through the services     of Third Parties, and in accordance with     Licensor\u2019s Privacy Policy found at     https://www.interworx.com/company/privacy-policy/,     collect and store information regarding use of     the Software and about equipment on which the     Software is installed or through which it     otherwise is accessed and used, through:</p> <ul> <li>i. the provision of maintenance and support   services; and</li> <li>ii. audit and compliance measures as described   in Section 6.</li> </ul> </li> <li> <p>(b) Licensee agrees that the Licensor may use such     information for any purpose related to any use of     the Software by Licensee or on Licensee\u2019s equipment,     including but not limited to:</p> <ul> <li>i. improving the performance of the Software or   developing updates, upgrades, enhancements,   modifications, or additions to the Software; and</li> <li>ii. verifying Licensee\u2019s compliance with the terms   of this Agreement and enforcing the Licensor\u2019s   rights, including all Intellectual Property Rights   in and to the Software.</li> </ul> </li> <li> <p>Intellectual Property Rights.</p> </li> </ol> <p>Licensee acknowledges and agrees that the Software and Documentation are provided under license, and not sold, to Licensee. Licensee does not acquire any ownership interest in the Software or Documentation under this Agreement, or any other rights thereto, other than to use the same in accordance with the license granted and subject to all terms, conditions, and restrictions under this Agreement. Licensor reserves and shall retain its entire right, title, and interest in and to the Software and all Intellectual Property Rights arising out of or relating to the Software, except as expressly granted to the Licensee in this Agreement. Licensee shall safeguard all Software (including all copies thereof) from infringement, misappropriation, theft, misuse, or unauthorized access. Licensee shall promptly notify Licensor if Licensee becomes aware of any infringement of the Licensor\u2019s Intellectual Property Rights in the Software and fully cooperate with Licensor in any legal action taken by Licensor to enforce its Intellectual Property Rights.</p> <ol> <li>Payment.</li> </ol> <p>All License Fees and maintenance and support fees are payable in advance in the manner set forth in the Order Form and are non-refundable. In addition, should Licensee\u2019s use of the Software incur additional taxes or duties, whether national, local or otherwise and not otherwise reflected in the Order Form, Licensee shall reimburse Licensor for the amount of any such taxes or duties paid by Licensor and Licensee agrees that Licensor may charge any such reimbursable taxes to the payment instrument used by Licensee for payment under this Agreement Any renewal of the license or maintenance and support services hereunder shall not be effective until the fees for such renewal have been paid in full. Unless otherwise provided in the Order Form, License sales are final and payment for License Fees is not refundable.</p> <ol> <li>Term and Termination.</li> </ol> <p>This Agreement and the license granted hereunder shall remain in effect for the Term set forth on the Order Form. Licensor may terminate this Agreement, effective upon written notice to Licensee, if Licensee breaches this Agreement, or if Licensee ceases conducting business in the normal course, admits its insolvency, makes an assignment for the benefit of creditors, or becomes the subject of any judicial or administrative proceedings in bankruptcy, receivership or reorganization. Upon expiration or earlier termination of this Agreement, the license granted hereunder shall also terminate, and Licensee shall cease using and destroy all copies of the Software and Documentation. No expiration or termination shall affect Licensee\u2019s obligation to pay all Licensee Fees and maintenance and support fees, if applicable, that may have become due before such expiration or termination, or entitle Licensee to any refund.</p> <ol> <li> <p>Limited Warranty, Exclusive Remedy, and Disclaimer.</p> <ul> <li>(a) Licensor warrants that, for a period of   ninety (90) days following the purchase date   set forth on the Order Form, the Software will,   when installed properly and in accordance with   the terms of this Agreement, perform   substantially in accordance with the   Documentation. Licensor\u2019s sole liability and   Licensee\u2019s sole and exclusive remedy for   failure of this limited warranty is repair or   replacement (with the warranty continuing to   run from the initial date on the Order Form)   of the Software or a refund of the License Fees.   THE FOREGOING WARRANTY DOES NOT APPLY, AND   LICENSOR STRICTLY DISCLAIMS ALL WARRANTIES, TO   ANY THIRD-PARTY MATERIALS.</li> <li>(b) EXCEPT FOR THE LIMITED WARRANTY SET FORTH IN   SECTION 12(a), THE SOFTWARE AND DOCUMENTATION   ARE PROVIDED TO LICENSEE \u201cAS IS\u201d AND, TO THE   MAXIMUM EXTENT PERMITTED UNDER APPLICABLE LAW,   LICENSOR, ON ITS OWN BEHALF AND ON BEHALF OF ITS   AFFILIATES AND ITS AND THEIR RESPECTIVE LICENSORS   AND SERVICE PROVIDERS, EXPRESSLY DISCLAIMS ALL   WARRANTIES, WHETHER EXPRESS, IMPLIED, STATUTORY,   OR OTHERWISE, WITH RESPECT TO THE SOFTWARE AND   DOCUMENTATION, INCLUDING ALL IMPLIED WARRANTIES   OF MERCHANTABILITY, FITNESS FOR A PARTICULAR   PURPOSE, TITLE, AND NON-INFRINGEMENT, AND   WARRANTIES THAT MAY ARISE OUT OF COURSE OF   DEALING, COURSE OF PERFORMANCE, USAGE, OR TRADE   PRACTICE. WITHOUT LIMITATION TO THE FOREGOING,   THE LICENSOR PROVIDES NO WARRANTY OR UNDERTAKING,   AND MAKES NO REPRESENTATION OF ANY KIND THAT THE   LICENSED SOFTWARE WILL MEET THE LICENSEE\u2019S   REQUIREMENTS, ACHIEVE ANY INTENDED RESULTS, BE   COMPATIBLE, OR WORK WITH ANY OTHER SOFTWARE,   APPLICATIONS, SYSTEMS, OR SERVICES, OPERATE   WITHOUT INTERRUPTION, MEET ANY PERFORMANCE OR   RELIABILITY STANDARDS OR BE ERROR FREE, OR THAT   ANY ERRORS OR DEFECTS CAN OR WILL BE CORRECTED.</li> </ul> </li> <li> <p>Limitation of Liability.</p> </li> </ol> <p>TO THE FULLEST EXTENT PERMITTED UNDER APPLICABLE  LAW:     - (a) IN NO EVENT WILL LICENSOR OR ITS AFFILIATES,       OR ANY OF ITS OR THEIR RESPECTIVE LICENSORS OR       SERVICE PROVIDERS, BE LIABLE TO LICENSEE OR ANY       THIRD PARTY FOR ANY USE, INTERRUPTION, DELAY,       OR INABILITY TO USE THE SOFTWARE; LOST REVENUES       OR PROFITS; DELAYS, INTERRUPTION, OR LOSS OF       SERVICES, BUSINESS, OR GOODWILL; LOSS OR       CORRUPTION OF DATA; LOSS RESULTING FROM SYSTEM       OR SYSTEM SERVICE FAILURE, MALFUNCTION, OR       SHUTDOWN; FAILURE TO ACCURATELY TRANSFER, READ,       OR TRANSMIT INFORMATION; FAILURE TO UPDATE OR       PROVIDE CORRECT INFORMATION; SYSTEM       INCOMPATIBILITY OR PROVISION OF INCORRECT       COMPATIBILITY INFORMATION; OR BREACHES IN SYSTEM       SECURITY; OR FOR ANY CONSEQUENTIAL, INCIDENTAL,       INDIRECT, EXEMPLARY, SPECIAL, OR PUNITIVE DAMAGES,       WHETHER ARISING OUT OF OR IN CONNECTION WITH THIS       AGREEMENT, BREACH OF CONTRACT, TORT (INCLUDING       NEGLIGENCE), OR OTHERWISE, REGARDLESS OF WHETHER       SUCH DAMAGES WERE FORESEEABLE AND WHETHER OR NOT       THE LICENSOR WAS ADVISED OF THE POSSIBILITY OF       SUCH DAMAGES.     - (b) IN NO EVENT WILL LICENSOR\u2019S AND ITS AFFILIATES\u2019,       INCLUDING ANY OF ITS OR THEIR RESPECTIVE LICENSORS\u2019       AND SERVICE PROVIDERS\u2019, COLLECTIVE AGGREGATE       LIABILITY UNDER OR IN CONNECTION WITH THIS       AGREEMENTOR ITS SUBJECT MATTER, UNDER ANY LEGAL OR       EQUITABLE THEORY, INCLUDING BREACH OF CONTRACT,       TORT (INCLUDING NEGLIGENCE), STRICT LIABILITY, AND       OTHERWISE, EXCEED THE TOTAL AMOUNT PAID TO THE       LICENSOR PURSUANT TO THIS AGREEMENT FOR UP TO SIX (6)       MONTHS OF THE SPECIFIC SERVICES THAT IS THE SUBJECT       OF THE CLAIM.     - \u00a9 THE LIMITATIONS SET FORTH IN SECTION 13(a) AND       SECTION 13(b) SHALL APPLY EVEN IF THE LICENSEE\u2019S       REMEDIES UNDER THIS AGREEMENT FAIL OF THEIR       ESSENTIAL PURPOSE.</p> <ol> <li>Export Regulation.</li> </ol> <p>The Software and Documentation may be subject to US export control laws, including the Export Control Reform Act and its associated regulations. The Licensee shall not, directly or indirectly, export, re-export, or release the Software or Documentation to, or make the Software or Documentation accessible from, any jurisdiction or country to which export, re-export, or release is prohibited by law, rule, or regulation. The Licensee shall comply with all applicable federal laws, regulations, and rules, and complete all required undertakings (including obtaining any necessary export license or other governmental approval), prior to exporting, re-exporting, releasing, or otherwise making the Software or Documentation available outside the US.</p> <ol> <li>US Government Rights.</li> </ol> <p>The Software is commercial computer software, as such term is defined in 48 C.F.R. \u00a72.101. Accordingly, if the Licensee is the US Government or any contractor therefor, Licensee shall receive only those rights with respect to the Software and Documentation as are granted to all other end users under license, in accordance with (a) 48 C.F.R. \u00a7227.7201 through 48 C.F.R. \u00a7227.7204, with respect to the Department of Defense and their contractors, or (b) 48 C.F.R. \u00a712.212, with respect to all other US Government licensees and their contractors.</p> <ol> <li> <p>Miscellaneous.</p> <ul> <li>(a) This Agreement shall be governed by and   interpreted according to the laws of the State   of Michigan (without regard to its conflict of   law principles), and each party hereby consents   to the exclusive jurisdiction of the state or   federal courts in the State of Michigan to   adjudicate any dispute arising under or in   connection with this Agreement. Any such   dispute shall be brought before the courts with   jurisdiction over Oakland County, Michigan.   Licensor and Licensee hereby waive any objection   based on inconvenient forum.</li> <li>(b) Licensor will not be responsible or liable   to Licensee, or deemed in default or breach   hereunder by reason of any failure or delay in   the performance of its obligations hereunder   where such failure or delay is due to strikes,   labor disputes, civil disturbances, riot,   rebellion, invasion, epidemic, hostilities, war,   terrorist attack, embargo, natural disaster,   acts of God, flood, fire, sabotage, fluctuations   or non-availability of electrical power, heat,   light, air conditioning, or Licensee equipment,   loss and destruction of property, or any other   circumstances or causes beyond Licensor\u2019s   reasonable control.</li> <li>\u00a9 All notices, claims, and other communications   hereunder shall be in writing and shall be deemed   to have been given: (i) when delivered by hand   (with written confirmation of receipt); (ii) when   received by the addressee if sent by a nationally   recognized overnight courier (receipt requested);   (iii) on the date sent by facsimile, or email   (with confirmation of transmission) if sent   during normal business hours of the recipient,   and on the next business day if sent after normal   business hours of the recipient; or (iv) on the   third day after the date mailed, by certified or   registered mail, return receipt requested, postage   prepaid. Such communications must be sent to the   respective parties at the addresses set forth on   the Order Form (or to such other address as may be   designated by a party from time to time in   accordance with this Section 16\u00a9).</li> <li>(d) This Agreement, together with the Order Form,   and all other documents attached hereto or that   are incorporated by reference herein, constitutes   the sole and entire agreement between Licensee and   Licensor with respect to the subject matter   contained herein, and supersedes all prior and   contemporaneous understandings, agreements,   representations, and warranties, both written   and oral, with respect to such subject matter.</li> <li>(e) Licensee shall not assign or otherwise   transfer any of its rights, or delegate or   otherwise transfer any of its obligations or   performance, under this Agreement without   Licensor\u2019s prior written consent. No   delegation or other transfer will relieve   Licensee of any of its obligations or performance   under this Agreement. This Agreement is binding   upon and inures to the benefit of the parties   hereto and their respective permitted successors   and assigns.</li> <li>(f) This Agreement is for the sole benefit of the   parties hereto and their respective successors   and permitted assigns and nothing herein, express   or implied, is intended to or shall confer on any   other Person any legal or equitable right,   benefit, or remedy of any nature whatsoever under   or by reason of this Agreement.</li> <li>(g) Licensor may update, modify, or amend this   Agreement at any time and such update shall be   reflected on Licensor\u2019s website. Licensee\u2019s   continued use of the Software following any change   to the Agreement constitutes acceptance of the   Agreement.</li> <li>(h) If any term or provision of this Agreement is   invalid, illegal, or unenforceable in any   jurisdiction, such invalidity, illegality, or   unenforceability shall not affect any other term   or provision of this Agreement or invalidate or   render unenforceable such term or provision in any   other jurisdiction.</li> </ul> </li> </ol> <p></p> <p>Afterward, you'll be re-directed to the InterWorx dashboard.</p> InterWorx \u203a Dashboard <p></p> <p>Set InterWorx aside for a moment; we need to make sure that we don't have any existing firewalls that need disabled. If so, run the commands below:</p>  UFW Firewalld <p>Stop and disable <code>ufw</code></p> <pre><code>sudo systemctl stop ufw\nsudo systemctl disable ufw\n</code></pre> <p>Confirm <code>ufw</code> is disabled with:</p> <pre><code>sudo systemctl status ufw\n</code></pre> <p>Stop and disable <code>firewalld</code></p> <pre><code>sudo systemctl stop firewalld\nsudo systemctl disable firewalld\n</code></pre> <p>Confirm <code>firewalld</code> is disabled with:</p> <pre><code>sudo systemctl status firewalld\n</code></pre> <p></p> <p>We are ready to install CSF, which you should already have downloaded to your system. If not; download the latest version of CSF:</p>  .tgz .zip <pre><code># Using wget (tgz)\nwget https://download.configserver.dev/csf.tgz\n\n# Using curl (tgz)\ncurl -O https://download.configserver.dev/csf.tgz\n</code></pre> <pre><code># Using wget (zip)\nwget https://download.configserver.dev/csf.zip\n\n# Using curl (zip)\ncurl -O https://download.configserver.dev/csf.zip\n</code></pre> <p></p> <p>Decompress / unzip the downloaded archive file:</p>  .tgz .zip <pre><code>tar -xzf csf.tgz -C /tmp\n</code></pre> <pre><code>unzip csf.zip -d /tmp\n</code></pre> <p></p> <p>Run the CSF installation script:</p>  Option 1 Option 2 <p> Runs <code>install.sh</code>  uses <code>sh</code> shell  executable permission not required</p> <pre><code>sudo sh /tmp/csf/install.sh\n</code></pre> <p> Runs <code>install.sh</code>  uses shebang interpreter  requires executable <code>+x</code> permission</p> <pre><code>sudo chmod +x /tmp/csf/install.sh\nsudo /tmp/csf/install.sh\n</code></pre> <p></p> <p>Follow any instructions on-screen. If prompted for any additional information, enter it.</p> <p></p> <p>Log back into InterWorx. Once in, navigate to NodeWorx \u203a Plugins from the left-hand menu. You will be presented with a list of available plugins, scroll down and locate ConfigServer Security &amp; Firewall. Click the pencil to the left to edit the status.</p> InterWorx \u203a NodeWorx \u203a Plugins \u203a Edit ConfigServer <p></p> <p>On the right side, change the status of ConfigServer Security &amp; Firewall from <code>disabled</code> to <code>enabled</code> and press save.</p> InterWorx \u203a NodeWorx \u203a Plugins \u203a Change Status <p></p> <p>After enabling the plugin, go back to the InterWorx menu on the left, and navigate to</p> <ul> <li>ConfigServer Plugins \u203a Security and Firewall</li> </ul> InterWorx \u203a Menu \u203a CSF <p></p> <p>You should now see the CSF dashboard:</p> InterWorx \u203a ConfigServer Security &amp; Firewall \u203a Dashboard <p></p> <p>If the interface matches the screenshot above, the CSF integration with InterWorx is complete.  </p> <p>You can now proceed to the Next Steps or skip the rest of this section and begin our Configuration chapter to get things set up.</p> <p> </p> <p> </p>", "tags": ["install", "setup", "cpanel", "whm", "webmin", "vestacp", "cwp", "centos-web-panel", "directadmin", "interworx", "cyberpanel"]}, {"location": "install/install/#install-vestacp", "title": "Install: VestaCP", "text": "Danger: Security Vulnerabilities <p>As of 10/10/2025, there are over 20 known security vulnerabilities listed for VestaCP. Take these warnings serious in terms of your decision to use VestaCP on outdated distros such as CentOS 7, which reached EOL on June 30, 2024.</p> Bug: CSF Header Button <p>As of VestaCP v1.0, the application was migrated to React, which fundamentally changed how the web interface works. The UI is now compiled into a series of <code>.CSS</code> and <code>.JS</code> files, rather than using the older PHP/HTML templates.</p> <p>Because of this change, CSF does not currently appear in the top menu of VestaCP, even though the CSF page itself is still fully accessible at <code>https://192.168.0.16:5463/list/csf</code>.</p> <p>To restore the CSF menu link, the VestaCP developers would need to add a conditional menu item that detects when CSF is installed and ready to use. After they add this change to their source menu code, they can re-build the React .js file to push for public release.</p> <p>If you absolutely must have CSF in your main VestaCP top menu, follow the instructions below.</p> <p>Unfortunately, due to the lack of recent updates from the VestaCP team, this integration may never be corrected, and users will need to access CSF directly via its URL.</p> <p>We have however, provided instructions on how you can get CSF to appear in the top menu, but it involves you re-building VestaCP yourself. If you are interested in this patch; view the instructions below.</p> Note: Project Status Unknown <p>The current status of VestaCP is unknown. The developers announced a release of VestaCP 2.0 in 2024, however, no other information was given after that time.</p> <p>The repository has not been updated in over a year.</p> <p></p> <p>Vesta is an open-source hosting control panel designed to simplify server management tasks. It provides a clean and focused interface without unnecessary clutter, allowing users to efficiently manage their hosting environments. VestaCP supports various features, including:</p> <ul> <li>Web, DNS, and Mail Management: Easily manage domains, DNS records, and email accounts.</li> <li>Database Support: Create and manage MySQL and PostgreSQL databases.</li> <li>SSL Integration: Automatically generate SSL/TLS certificates with Let's Encrypt.</li> <li>Security Features: Configure firewalls and manage user access.</li> <li>Backup Solutions: Schedule and manage backups for your data.</li> </ul> <p>Vesta is licensed under the GPL v3 license, ensuring that it remains free and open for community contributions.</p> <p></p> Distro Supported Versions  RHEL / CentOS 5, 6, 7  Debian 7, 8, 9  Ubuntu 12.04 - 18.10 <p></p> <p>The installation of VestaCP is a bit different than our other instructions. We will need to generate a build command using their website, and then use that command to install VestaCP to your server.</p> <p></p> <p>Log in as the <code>root</code> user via SSH.</p>  Using Password Using Private Key <pre><code>ssh -vvv root@XX.XX.XX.XX -p 22\n</code></pre> <pre><code>ssh -i /path/to/private_key -vvv root@XX.XX.XX.XX -p 22\n</code></pre> <p></p> CentOS 7 Users <p>CentOS 7 has officially reached End of Life (EOL), and its default YUM repositories were moved from <code>mirror.centos.org</code> to <code>vault.centos.org</code>. Because of this change, new installations of CentOS 7 can no longer fetch or update packages until the repository URLs are updated.</p> <p>The commands below update your YUM repo configuration to point to the new CentOS Vault, allowing package installation and updates to work again.</p>  Command <pre><code>sed -i 's/mirror\\.centos\\.org/vault.centos.org/g' /etc/yum.repos.d/CentOS-*.repo\nsed -i 's/^#.*baseurl=http/baseurl=http/g' /etc/yum.repos.d/CentOS-*.repo\nsed -i 's/^mirrorlist=http/#mirrorlist=http/g' /etc/yum.repos.d/CentOS-*.repo\n\nsudo yum clean all\nsudo yum update -y\nsudo reboot\n</code></pre> <p></p> <p>Once you reboot, you should now be able to run <code>yum</code> commands once again to install or update packages.</p> <p></p> <p>Head over to their website so that you can generate an installation command that you will run in your shell:</p> <ul> <li>https://vestacp.com/install#install-configure</li> </ul> <p></p> <p>We did a very basic configuration:</p> <ul> <li> Web: <code>Apache</code></li> <li> FTP: <code>No</code></li> <li> Mail: <code>No</code></li> <li> DNS: <code>No</code></li> <li> Firewall: <code>Iptables</code></li> <li> Softaculous: <code>Yes</code></li> <li> Additional Repository: <code>Yes</code></li> <li> File System Quota: <code>No</code></li> <li> DB : <code>None</code></li> <li> Hostname: <code>panel.configserver.dev</code></li> <li> Email: <code>user@configserver.dev</code></li> <li> Port: <code>5463</code></li> <li> Password: <code>*********************************</code></li> </ul> <p></p> <p>Download the VestaCP installation script:</p>  Command <pre><code>curl -O https://vestacp.com/pub/vst-install.sh\n</code></pre> <p></p> <p>Next, we must use the command we generated earlier:</p> DANGER: Plain-text Passwords in Terminal Commands <p>Supplying passwords directly in plain-text commands is strongly discouraged. Unfortunately, this is how VestaCP is currently configured.</p> <p>To reduce the risk, it is recommended to set <code>HISTCONTROL</code> to <code>ignorespace</code> and then prefix your command with a Space. This prevents the command from being recorded in your shell history.</p> <p>The codeblock below includes this command, and starts with a space character.</p>  Command <pre><code>export HISTCONTROL=ignorespace\n\n bash vst-install.sh \\\n   --nginx no \\\n   --apache yes \\\n   --phpfpm no \\\n   --vsftpd no \\\n   --proftpd no \\\n   --exim no \\\n   --dovecot no \\\n   --spamassassin no \\\n   --clamav no \\\n   --named no \\\n   --iptables yes \\\n   --fail2ban no \\\n   --softaculous yes \\\n   --remi yes \\\n   --quota no \\\n   --mysql no \\\n   --postgresql no \\\n   --hostname panel.configserver.dev \\\n   --email user@email.com \\\n   --port 5463 \\\n   --password *********************************\n</code></pre> <p></p> <p>You will be given the following response in terminal:</p>  Output <pre><code>_|      _|  _|_|_|_|    _|_|_|  _|_|_|_|_|    _|_|\n_|      _|  _|        _|            _|      _|    _|\n_|      _|  _|_|_|      _|_|        _|      _|_|_|_|\n  _|  _|    _|              _|      _|      _|    _|\n    _|      _|_|_|_|  _|_|_|        _|      _|    _|\n\n                                  Vesta Control Panel\n\n\n\nThe following software will be installed on your system:\n  - Apache Web Server\n  - Softaculous Plugin\n  - Iptables Firewall\n\n\nWould you like to continue [y/n]: y\n</code></pre> <p></p> <p>The installation of VestaCP will take anywhere from 5 - 15 minutes depending on the specs of your server. Once the installation is complete, you'll see the following:</p>  Output <pre><code>_|      _|  _|_|_|_|    _|_|_|  _|_|_|_|_|    _|_|   \n_|      _|  _|        _|            _|      _|    _| \n_|      _|  _|_|_|      _|_|        _|      _|_|_|_| \n  _|  _|    _|              _|      _|      _|    _| \n    _|      _|_|_|_|  _|_|_|        _|      _|    _| \n\n\nCongratulations, you have just successfully installed Vesta Control Panel\n\n    https://192.168.0.16:5463\n    username: admin\n    password: *********************************\n\nWe hope that you enjoy your installation of Vesta. Please feel free to contact us anytime if you have any questions.\nThank you.\n\n--\nSincerely yours\nvestacp.com team\n</code></pre> <p></p> <p>At the end of the installation, you can now access the VestaCP dashboard by opening your browser and going to the URL:</p> <ul> <li><code>https://192.168.0.16:5463</code></li> </ul> <p></p> <p>You should be greeted with a VestaCP authentication page. Provide your system username and password:</p> VestaCP \u203a Login Screen <p></p> <p>Once you sign in with the system username and password you provided within the build command, you'll be taken to the VestaCP dashboard:</p> VestaCP \u203a Dashboard <p></p> <p>Set VestaCP aside for a moment; we need to make sure that we don't have any existing firewalls that need disabled. If so, run the commands below:</p>  UFW Firewalld <p>Stop and disable <code>ufw</code></p> <pre><code>sudo systemctl stop ufw\nsudo systemctl disable ufw\n</code></pre> <p>Confirm <code>ufw</code> is disabled with:</p> <pre><code>sudo systemctl status ufw\n</code></pre> <p>Stop and disable <code>firewalld</code></p> <pre><code>sudo systemctl stop firewalld\nsudo systemctl disable firewalld\n</code></pre> <p>Confirm <code>firewalld</code> is disabled with:</p> <pre><code>sudo systemctl status firewalld\n</code></pre> <p></p> <p>We are ready to install CSF, which you should already have downloaded to your system. If not; download the latest version of CSF:</p>  .tgz .zip <pre><code># Using wget (tgz)\nwget https://download.configserver.dev/csf.tgz\n\n# Using curl (tgz)\ncurl -O https://download.configserver.dev/csf.tgz\n</code></pre> <pre><code># Using wget (zip)\nwget https://download.configserver.dev/csf.zip\n\n# Using curl (zip)\ncurl -O https://download.configserver.dev/csf.zip\n</code></pre> <p></p> <p>Decompress / unzip the downloaded archive file:</p>  .tgz .zip <pre><code>tar -xzf csf.tgz -C /tmp\n</code></pre> <pre><code>unzip csf.zip -d /tmp\n</code></pre> <p></p> <p>Run the CSF installation script:</p>  Option 1 Option 2 <p> Runs <code>install.sh</code>  uses <code>sh</code> shell  executable permission not required</p> <pre><code>sudo sh /tmp/csf/install.sh\n</code></pre> <p> Runs <code>install.sh</code>  uses shebang interpreter  requires executable <code>+x</code> permission</p> <pre><code>sudo chmod +x /tmp/csf/install.sh\nsudo /tmp/csf/install.sh\n</code></pre> <p></p> <p>Follow any instructions on-screen. If prompted for any additional information, enter it.</p> <p></p> <p>Log back into VestaCP.  At this point, you're probably asking \"Where is the menu link to CSF?\". Here comes the bad news ...</p> VestaCP \u203a CSF <p></p> <p>Bug: VestaCP Header Fix</p> <p>CSF v15.02 introduced a fix which allows the VestaCP header to once again show on the CSF page. </p> <p>However, this does not address the VestaCP top nav menu not showing CSF.</p> <p>A fix for this has been provided as instructions below.</p> <p>As of VestaCP v1.0, the application was migrated to React, which fundamentally changes how the web interface works. The UI is now compiled into a series of <code>.CSS</code> and <code>.JS</code> files, rather than using the older PHP/HTML templates.</p> <p>Because of this change, CSF does not currently appear in the top menu of VestaCP, even though the CSF page itself is still fully accessible at <code>https://192.168.0.16:5463/list/csf</code>.</p> <p>To restore the CSF menu link, the VestaCP developers would need to add a conditional menu item that detects when CSF is installed and ready to use. </p> <p>Unfortunately, due to the lack of recent updates from the VestaCP team, this integration may never be corrected, and users will need to access CSF directly via its URL.</p> <ul> <li><code>https://192.168.0.16:5463/list/csf</code></li> </ul> <p></p> <p>By manually going to the link within VestaCP, you should see the following page:</p> VestaCP \u203a CSF <p></p> <p>If the interface matches the screenshot above, the CSF integration with VestaCP is complete.  </p> <p>You can now proceed to the Next Steps or skip the rest of this section and begin our Configuration chapter to get things set up.</p> <p> </p>", "tags": ["install", "setup", "cpanel", "whm", "webmin", "vestacp", "cwp", "centos-web-panel", "directadmin", "interworx", "cyberpanel"]}, {"location": "install/install/#add-csf-to-vestacp-menu", "title": "Add CSF to VestaCP Menu", "text": "<p>If you absolutely need CSF to appear in your VestaCP top nav menu, you're going to have to change the source file, re-build VestaCP, and replace your existing <code>index.html</code>, <code>.css</code> and <code>.js</code> files. We will provide very brief instructions.</p> <p></p> <p>If you already have VestaCP running on your server, then you should find everything in the folder:</p> <ul> <li><code>/usr/local/vesta/</code></li> </ul> <p></p> <p>If you need to clone the VestaCP repo to your server, run:</p>  Command <pre><code>sudo mkdir vestacp\ncd vestacp\ngit clone https://github.com/outroll/vesta.git .\n</code></pre> <p></p> <p>You should now have the full source to VestaCP on your server. We need to add a new menu item so that we can access CSF from the main VestaCP menu.</p> <p>Open the file <code>/usr/local/vesta/src/react/src/components/MainNav/Panel/Panel.jsx</code>, and then find / replace with the codeblocks below:</p>  Find Change To /usr/local/vesta/src/react/src/components/MainNav/Panel/Panel.jsx<pre><code>      {userName === 'admin' &amp;&amp; (&lt;&gt;\n        &lt;div className={className(\"/list/updates/\")}&gt;\n          &lt;Link to=\"/list/updates/\" onClick={event =&gt; handleState(\"/list/updates/\", event)} onKeyPress={event =&gt; event.preventDefault()}&gt;{i18n.Updates}&lt;/Link&gt;\n        &lt;/div&gt;\n        {session.FIREWALL_SYSTEM &amp;&amp; &lt;div className={className(\"/list/firewall/\")}&gt;\n          &lt;Link to=\"/list/firewall/\" onClick={event =&gt; handleState(\"/list/firewall/\", event)} onKeyPress={event =&gt; event.preventDefault()}&gt;{i18n.Firewall}&lt;/Link&gt;\n        &lt;/div&gt;}\n      &lt;/&gt;)}\n</code></pre> /usr/local/vesta/src/react/src/components/MainNav/Panel/Panel.jsx<pre><code>      {userName === 'admin' &amp;&amp; (&lt;&gt;\n        &lt;div className={className(\"/list/updates/\")}&gt;\n          &lt;Link to=\"/list/updates/\" onClick={event =&gt; handleState(\"/list/updates/\", event)} onKeyPress={event =&gt; event.preventDefault()}&gt;{i18n.Updates}&lt;/Link&gt;\n        &lt;/div&gt;\n        {session.FIREWALL_SYSTEM &amp;&amp; &lt;div className={className(\"/list/firewall/\")}&gt;\n          &lt;Link to=\"/list/firewall/\" onClick={event =&gt; handleState(\"/list/firewall/\", event)} onKeyPress={event =&gt; event.preventDefault()}&gt;{i18n.Firewall}&lt;/Link&gt;\n        &lt;/div&gt;}\n        &lt;div className={className(\"/list/csf/\")}&gt;\n          &lt;Link to=\"/list/csf/\" onClick={event =&gt; handleState(\"/list/csf/\", event)} onKeyPress={event =&gt; event.preventDefault()}&gt;CSF&lt;/Link&gt;\n        &lt;/div&gt;\n      &lt;/&gt;)}\n</code></pre> <p></p> <p>In the code above, we've added a new CSF button to the right of the Firewall button. Save the file and exit. Next, we need to install the packages required to re-build VestaCP. For this, you will need NodeJS installed. </p> <p>Once you have NodeJS installed, navigate to the <code>/usr/local/vesta/src/react</code> folder with the <code>package.json</code> file:</p>  Command <pre><code>cd /usr/local/vesta/src/react\n</code></pre> <p></p> <p>The folder <code>/usr/local/vesta/src/react</code> should contain the following structure:</p> <pre><code>\ud83d\udcc1 usr\n   \ud83d\udcc1 local\n      \ud83d\udcc1 vesta\n          \ud83d\udcc1 src\n              \ud83d\udcc1 react\n                \ud83d\udcc1 build\n                \ud83d\udcc1 public\n                \ud83d\udcc1 src\n                \ud83d\udcc4 jsconfig.json\n                \ud83d\udcc4 package.json\n                \ud83d\udcc4 package-lock.json\n                \ud83d\udcc4 README.md\n</code></pre> <p></p> <p>We need to install the NodeJS dependencies that will be used to re-build VestaCP:</p>  Command <pre><code>sudo npm install --legacy-peer-deps\n</code></pre> Must Use <code>--legacy-peer-deps</code> <p>You MUST append <code>--legacy-peer-deps</code> to the <code>npm install</code> command; otherwise you will get the error:</p>  Output <pre><code>npm ERR! code 1\nnpm ERR! path /usr/local/vesta/src/react/node_modules/node-sass\nnpm ERR! command failed\nnpm ERR! command sh -c -- node scripts/build.js\nnpm ERR! Building: /usr/bin/node /usr/local/vesta/src/react/node_modules/node-gyp/bin/node-gyp.js rebuild --verbose --libsass_ext= --libsass_cflags= --libsass_ldflags= --libsass_library=\nnpm ERR! gyp info it worked if it ends with ok\nnpm ERR! gyp verb cli [\nnpm ERR! gyp verb cli   '/usr/bin/node',\nnpm ERR! gyp verb cli   '/usr/local/vesta/src/react/node_modules/node-gyp/bin/node-gyp.js',\nnpm ERR! gyp verb cli   'rebuild',\nnpm ERR! gyp verb cli   '--verbose',\nnpm ERR! gyp verb cli   '--libsass_ext=',\nnpm ERR! gyp verb cli   '--libsass_cflags=',\nnpm ERR! gyp verb cli   '--libsass_ldflags=',\nnpm ERR! gyp verb cli   '--libsass_library='\nnpm ERR! gyp verb cli ]\nnpm ERR! gyp info using node-gyp@3.8.0\nnpm ERR! gyp info using node@16.20.2 | linux | x64\nnpm ERR! gyp verb command rebuild []\nnpm ERR! gyp verb command clean []\nnpm ERR! gyp verb clean removing \"build\" directory\nnpm ERR! gyp verb command configure []\nnpm ERR! gyp verb check python checking for Python executable \"/usr/bin/python3\" in the PATH\nnpm ERR! gyp verb `which` failed Error: not found: /usr/bin/python3\nnpm ERR! gyp verb `which` failed     at getNotFoundError (/usr/local/vesta/src/react/node_modules/which/which.js:13:12)\nnpm ERR! gyp verb `which` failed     at F (/usr/local/vesta/src/react/node_modules/which/which.js:68:19)\nnpm ERR! gyp verb `which` failed     at E (/usr/local/vesta/src/react/node_modules/which/which.js:80:29)\nnpm ERR! gyp verb `which` failed     at /usr/local/vesta/src/react/node_modules/which/which.js:89:16\nnpm ERR! gyp verb `which` failed     at /usr/local/vesta/src/react/node_modules/isexe/index.js:42:5\nnpm ERR! gyp verb `which` failed     at /usr/local/vesta/src/react/node_modules/isexe/mode.js:8:5\nnpm ERR! gyp verb `which` failed     at FSReqCallback.oncomplete (node:fs:202:21)\nnpm ERR! gyp verb `which` failed  /usr/bin/python3 Error: not found: /usr/bin/python3\nnpm ERR! gyp verb `which` failed     at getNotFoundError (/usr/local/vesta/src/react/node_modules/which/which.js:13:12)\nnpm ERR! gyp verb `which` failed     at F (/usr/local/vesta/src/react/node_modules/which/which.js:68:19)\nnpm ERR! gyp verb `which` failed     at E (/usr/local/vesta/src/react/node_modules/which/which.js:80:29)\nnpm ERR! gyp verb `which` failed     at /usr/local/vesta/src/react/node_modules/which/which.js:89:16\nnpm ERR! gyp verb `which` failed     at /usr/local/vesta/src/react/node_modules/isexe/index.js:42:5\nnpm ERR! gyp verb `which` failed     at /usr/local/vesta/src/react/node_modules/isexe/mode.js:8:5\nnpm ERR! gyp verb `which` failed     at FSReqCallback.oncomplete (node:fs:202:21) {\nnpm ERR! gyp verb `which` failed   code: 'ENOENT'\nnpm ERR! gyp verb `which` failed }\nnpm ERR! gyp ERR! configure error \nnpm ERR! gyp ERR! stack Error: Can't find Python executable \"/usr/bin/python3\", you can set the PYTHON env variable.\nnpm ERR! gyp ERR! stack     at PythonFinder.failNoPython (/usr/local/vesta/src/react/node_modules/node-gyp/lib/configure.js:484:19)\nnpm ERR! gyp ERR! stack     at PythonFinder.&lt;anonymous&gt; (/usr/local/vesta/src/react/node_modules/node-gyp/lib/configure.js:406:16)\nnpm ERR! gyp ERR! stack     at F (/usr/local/vesta/src/react/node_modules/which/which.js:68:16)\nnpm ERR! gyp ERR! stack     at E (/usr/local/vesta/src/react/node_modules/which/which.js:80:29)\nnpm ERR! gyp ERR! stack     at /usr/local/vesta/src/react/node_modules/which/which.js:89:16\nnpm ERR! gyp ERR! stack     at /usr/local/vesta/src/react/node_modules/isexe/index.js:42:5\nnpm ERR! gyp ERR! stack     at /usr/local/vesta/src/react/node_modules/isexe/mode.js:8:5\nnpm ERR! gyp ERR! stack     at FSReqCallback.oncomplete (node:fs:202:21)\nnpm ERR! gyp ERR! System Linux 3.10.0-1160.119.1.el7.x86_64\nnpm ERR! gyp ERR! command \"/usr/bin/node\" \"/usr/local/vesta/src/react/node_modules/node-gyp/bin/node-gyp.js\" \"rebuild\" \"--verbose\" \"--libsass_ext=\" \"--libsass_cflags=\" \"--libsass_ldflags=\" \"--libsass_library=\"\nnpm ERR! gyp ERR! cwd /usr/local/vesta/src/react/node_modules/node-sass\nnpm ERR! gyp ERR! node -v v16.20.2\nnpm ERR! gyp ERR! node-gyp -v v3.8.0\nnpm ERR! gyp ERR! not ok \nnpm ERR! Build failed with error code: 1\n\nnpm ERR! A complete log of this run can be found in:\nnpm ERR!     /root/.npm/_logs/2025-10-11T03_14_22_078Z-debug-0.log\n</code></pre> <p></p> <p>To fix the error, you must run the commands:</p> <pre><code>sudo npm uninstall node-sass\nsudo npm install sass --legacy-peer-deps\n</code></pre> <p></p> <p>Next, we need to run the react build command:</p>  Command <pre><code>sudo npm run build\n</code></pre> <p></p> <p>You will see a large number of warnings such as the following:</p>  Output <pre><code>Deprecation Warning [legacy-js-api]: The legacy JS API is deprecated and will be removed in Dart Sass 2.0.0.\nMore info: https://sass-lang.com/d/legacy-js-api\n\nDeprecation Warning [import]: Sass @import rules are deprecated and will be removed in Dart Sass 3.0.0.\nMore info and automated migrator: https://sass-lang.com/d/import\n\n  \u2577\n1 \u2502 @import 'src/utils/scss/variables';\n  \u2502         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  \u2575\n    stdin 1:9  root stylesheet\n\nDeprecation Warning [legacy-js-api]: The legacy JS API is deprecated and will be removed in Dart Sass 2.0.0.\nMore info: https://sass-lang.com/d/legacy-js-api\n\nDeprecation Warning [import]: Sass @import rules are deprecated and will be removed in Dart Sass 3.0.0.\nMore info and automated migrator: https://sass-lang.com/d/import\n\n./src/containers/Firewalls/Banlist/index.jsx\n  Line 50:6:  React Hook useEffect has missing dependencies: 'dispatch' and 'fetchData'. Either include them or remove the dependency array                                    react-hooks/exhaustive-deps\n  Line 60:6:  React Hook useEffect has missing dependencies: 'handleContentSelection' and 'handleFocusedElementShortcuts'. Either include them or remove the dependency array  react-hooks/exhaustive-deps\n</code></pre> <p></p> <p>You can ignore these warnings, they are only displaying because the packages for VestaCP are extremely outdated. What you are looking for when you finish building with the command above is the following output:</p>  Output <pre><code>File sizes after gzip:\n\n  303.56 KB  build/static/js/2.d216ae63.chunk.js\n  73.42 KB   build/static/js/main.37cff9da.chunk.js\n  24.99 KB   build/static/css/2.6c9f324a.chunk.css\n  13.71 KB   build/static/css/main.5bd9cb31.chunk.css\n  781 B      build/static/js/runtime-main.cb963cd4.js\n\nThe project was built assuming it is hosted at /.\nYou can control this with the homepage field in your package.json.\n\nThe build folder is ready to be deployed.\nYou may serve it with a static server:\n\n  npm install -g serve\n  serve -s build\n</code></pre> <p></p> <p>The build above should give you some new files located in <code>/usr/local/vesta/src/react/build/</code>. The ones you need are:</p> <ul> <li>\ud83d\udcc1 <code>/usr/local/vesta/src/react/build/static</code></li> <li>\ud83d\udcc4 <code>/usr/local/vesta/src/react/build/index.html</code></li> </ul> <p></p> <p>To replace the old VestaCP files with your new copies, run the following commands in order:</p>  Command <pre><code># backup your existing static folder\nsudo cp -rf /usr/local/vesta/web/static/ /usr/local/vesta/web/static.backup/\n\n# remove the old files\nsudo rm -rf /usr/local/vesta/web/static/css /usr/local/vesta/web/static/js /usr/local/vesta/web/static/index.html\n\n# copy the static folder\nsudo cp -rf /usr/local/vesta/src/react/build/static/ /usr/local/vesta/web/\n\n# copy the index.html\nsudo cp /usr/local/vesta/src/react/build/index.html /usr/local/vesta/web/static/\n</code></pre> <p></p> <p>Give VestCP's dashboard page a hard refresh:</p> Browser Hotkey Chrome F5 Edge F5 Firefox Ctrl+F5 Opera F5 Safari Cmd+Option+R <p></p> <p>You should now see CSF at the top-right in the VestCP navigation menu.</p> VestaCP \u203a Nav Menu <p></p> <p>While we'd love to have a much simplier solution, this is about as close to a solution as we will get unless the developers of VestaCP decide to release a fix.</p> <p> </p> <p> </p>", "tags": ["install", "setup", "cpanel", "whm", "webmin", "vestacp", "cwp", "centos-web-panel", "directadmin", "interworx", "cyberpanel"]}, {"location": "install/install/#install-cyberpanel", "title": "Install: Cyberpanel", "text": "Automatic Installation Discontinued <p>When the original developer of CSF announced their plans to stop support for CSF in August 2025, Cyberpanel made the decision to remove automatic integration for CSF from their suite.</p> <p>If you would like to see CSF re-added, reach out to Cyberpanel and let them know.</p> <p>Installing CSF with Cyberpanel integration is fairly straight-forward, but with a few notes. We need to download their official installation script under the <code>root</code> user, and then run the installation script.</p> <p>First, download the script:</p>  Command <pre><code>sudo wget -O - https://cyberpanel.net/install.sh &gt; install.sh\n</code></pre> <p></p> <p>There a few requirements to take note of when running the Cyberpanel installation script</p> <ol> <li>You must run <code>install.sh</code> as root; sudo is not enough.</li> <li>You are not allowed to run the installation script if you are within a DE (desktop environment) such as Gnome or KDE.<ul> <li>We're not sure of the reasoning behind this, but we'll play by the rules for our installation.</li> </ul> </li> </ol> <p>If you are currently within a desktop environment, you must go into the CLI. For this, we'll use:</p>  Command <pre><code>sudo systemctl isolate multi-user.target\n</code></pre> <p></p> <p>After you are in the CLI for your server, we'll login as root. If you accidentally log in as your normal user, you can simply <code>su</code> and then enter your root password.</p>  Command <pre><code>su\nsh install.sh\n</code></pre> <p></p> <p>This <code>install.sh</code> script will then download another script via curl named <code>cyberpanel.sh</code>. This script will download all of the required packages and install Cyberpanel.</p> <p>You will be asked a series of questions. Follow the instructions on-screen, and press Y or N depending on which packages you want installed.</p> <p>The entire installation process takes roughly 5 to 15 minutes. For this guide, we'll fast-forward to the final steps of installing Cyberpanel. One of the last things to print within your CLI will be credentials and the IP / port you'll use to access the Cyberpanel web interface.</p> <p>Write all of this down in a secure place.</p>  Output <pre><code>[INFO] WebAdmin console password regenerated\n[FUNCTION] Starting: Post_Install_Setup_Watchdog\n[FUNCTION] Starting: Post_Install_Tweak\n[INFO] Applying post-installation tweaks and configurations Admin password successfully changed!\n\nFinalizing...\n\nCleaning up...\n\n[INFO] Cleaning up temporary installation files\n[FUNCTION] Starting: Post_Install_Display_Final_Info\n[INFO] Preparing final installation information\n######################################################\n        CyberPanel Successfully Installed\n\n        Current Disk usage: 3/997GB (0%)\n\n        Current RAM usage: 655/63171MB (1.04%)\n\n        Installation time : 0 hrs 9 min 0 sec\n\n        Visit: https://0.0.0.0:8090\n        Panel username: admin\n        Panel password: XXXXXXXXXXXXXXXXX\n\n    Run cyberpanel help to get FAQ info\n    Run cyberpanel upgrade to upgrade it to latest version.\n    Run cyberpanel utility to access some handy tools.\n\n        Website: https://www.cyberpanel.net\n        Forums: https://forums.cyberpanel.net\n        Wikipage: https://cyberpanel.net/KnowledgeBase/\n        Docs: https://cyberpanel.net/docs/\n\n    Enjoy your accelerated Internet by\n    CyberPanel &amp; OpenLiteSpeed\n######################################################\n    Microsoft Azure detected...\n    This provider has a network-level firewall\n    Please make sure you have opened following port for both in/out:\n\n        TCP: 8090 for CyberPanel\n        TCP: 80, TCP: 443 and UDP: 443 for webserver\n        TCP: 21 and TCP: 40110-40210 for FTP\n        TCP: 25, TCP: 587, TCP: 465, TCP: 110, TCP: 143 and TCP: 993 for mail service\n        TCP: 53 and UDP: 53 for DNS service\n\n    Would you like to restart your server now? [y/N]:\n</code></pre> <p></p> <p></p> <p>After installation is complete, open your browser and navigate to:</p> <ul> <li><code>https://127.0.0.1:8090/</code></li> </ul> <p></p> <p>You should be greeted with a Cyberpanel authentication page. Provide the username and password you were given during setup.</p> Cyberpanel \u203a Login <p></p> <p>Once signed in, you'll be on the Cyberpanel Dashboard:</p> Cyberpanel \u203a Dashboard <p></p> <p>Set Cyberpanel aside for a moment; we need to make sure that we don't have any existing firewalls that need disabled. If so, run the commands below:</p>  UFW Firewalld <p>Stop and disable <code>ufw</code></p> <pre><code>sudo systemctl stop ufw\nsudo systemctl disable ufw\n</code></pre> <p>Confirm <code>ufw</code> is disabled with:</p> <pre><code>sudo systemctl status ufw\n</code></pre> <p>Stop and disable <code>firewalld</code></p> <pre><code>sudo systemctl stop firewalld\nsudo systemctl disable firewalld\n</code></pre> <p>Confirm <code>firewalld</code> is disabled with:</p> <pre><code>sudo systemctl status firewalld\n</code></pre> <p></p> <p>We are ready to install CSF, which you should already have downloaded to your system. If not; download the latest version of CSF:</p>  .tgz .zip <pre><code># Using wget (tgz)\nwget https://download.configserver.dev/csf.tgz\n\n# Using curl (tgz)\ncurl -O https://download.configserver.dev/csf.tgz\n</code></pre> <pre><code># Using wget (zip)\nwget https://download.configserver.dev/csf.zip\n\n# Using curl (zip)\ncurl -O https://download.configserver.dev/csf.zip\n</code></pre> <p></p> <p>Decompress / unzip the downloaded archive file:</p>  .tgz .zip <pre><code>tar -xzf csf.tgz -C /tmp\n</code></pre> <pre><code>unzip csf.zip -d /tmp\n</code></pre> <p></p> <p>Run the CSF installation script:</p>  Option 1 Option 2 <p> Runs <code>install.sh</code>  uses <code>sh</code> shell  executable permission not required</p> <pre><code>sudo sh /tmp/csf/install.sh\n</code></pre> <p> Runs <code>install.sh</code>  uses shebang interpreter  requires executable <code>+x</code> permission</p> <pre><code>sudo chmod +x /tmp/csf/install.sh\nsudo /tmp/csf/install.sh\n</code></pre> <p></p> <p>Follow any instructions on-screen. If prompted for any additional information, enter it.</p> <p></p> <p>Log back into Cyberpanel. Once in, navigate to Plugins \u203a Installed from the left-hand menu. You should see CSF in your plugin list:</p> Cyberpanel \u203a Plugins <p></p> <p>Next, on the left-side menu, navigate to Security \u203a CSF and you should see the following:</p> Cyberpanel \u203a Security \u203a CSF <p></p> <p>If the interface matches the screenshot above, the CSF integration with Cyberpanel is complete.  </p> <p>You can now proceed to the Next Steps or skip the rest of this section and begin our Configuration chapter to get things set up.</p> <p> </p> <p> </p>", "tags": ["install", "setup", "cpanel", "whm", "webmin", "vestacp", "cwp", "centos-web-panel", "directadmin", "interworx", "cyberpanel"]}, {"location": "install/install/#install-centos-web-panel", "title": "Install: CentOS Web Panel", "text": "Automatic Legacy Installation <p>CentOS Web Panel (CWP) automatically installs CSF as part of its base installation. However, as of October 10, 2025, CWP does not pull CSF from our official repository and instead installs the legacy v15.00 release.</p> <p>To get the most recent version from our repository, you\u2019ll need to perform a manual upgrade.</p> <p>Instructions for doing so are provided below.</p> <p>If you would like to see CSF's latest version supported, reach out to CentOS Web Panel and let them know.</p> <p>Installing CSF with CWP integration is fairly straight-forward, with a few things to note. When installing CWP, they automatically install a copy of CSF as a bundle to your server. However, after this repository took over development; you will need to perform a manual upgrade if you want to utilize the latest version.</p> <p>If this changes, we'll keep you updated.</p> <p></p> <p>Log in as the <code>root</code> user via SSH.</p>  Using Password Using Private Key <pre><code>ssh -vvv root@XX.XX.XX.XX -p 22\n</code></pre> <pre><code>ssh -i /path/to/private_key -vvv root@XX.XX.XX.XX -p 22\n</code></pre> <p></p> <p>Ensure you have CWP installed. If not, we need to prepare the server by performing some updates.</p>  CentOS 7 CentOS 8/Alma/Rocky <pre><code>sudo yum -y install wget\ncurl http://centos-webpanel.com/centos7_fix_repository|sudo sh\nsudo yum -y update\nreboot\n</code></pre> <pre><code>sudo yum install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm\nsudo dnf install wget -y\nsudo yum -y update\nreboot\n</code></pre> <p></p> <p>Once your server is back online, you can proceed with the installation of CWP:</p>  CentOS 7 CentOS 8/Alma/Rocky (recommended) CentOS 9/Alma 9/Rocky 9 (beta) <pre><code>cd /usr/local/src\nwget http://centos-webpanel.com/cwp-el7-latest\nsh cwp-el7-latest\n</code></pre> <pre><code>cd /usr/local/src\nwget http://centos-webpanel.com/cwp-el8-latest\nsh cwp-el8-latest\n</code></pre> <pre><code>cd /usr/local/src\nwget http://centos-webpanel.com/cwp-el9-latest\nsh cwp-el9-latest\n</code></pre> <p></p> <p>At the end of the installation, you can now access the CWP dashboard by opening your browser and going to the URL:</p> <ul> <li><code>https://127.0.0.1:2031</code></li> </ul> <p></p> <p>You should be greeted with the CWP authentication page. Provide a valid system username and password.</p> CWP \u203a Login Screen <p></p> <p>After signing in, you should be presented with the CWP dashboard:</p> CWP \u203a Dashboard <p></p> <p>When CWP is installed, it automatically includes CSF along with other essential packages required for proper functionality. However, at the time of writing, CWP does not bundle the latest version of CSF from this repository.  </p> <p>Instead, you will receive version <code>v15.00</code>, which is downloaded from the following external source:</p> <ul> <li>http://static.cdn-cwp.com/files/csf.tgz</li> </ul> <p></p> <p>If you wish to use the latest copy of CSF from our repository, you'll have to perform an update by downloading the latest copy of CSF from us, and installing it over-top of the original.</p> <p></p> <p>To do this, set aside CWP for a moment; we need to make sure that we don't have any existing firewalls that need disabled. If so, run the commands below:</p>  UFW Firewalld <p>Stop and disable <code>ufw</code></p> <pre><code>sudo systemctl stop ufw\nsudo systemctl disable ufw\n</code></pre> <p>Confirm <code>ufw</code> is disabled with:</p> <pre><code>sudo systemctl status ufw\n</code></pre> <p>Stop and disable <code>firewalld</code></p> <pre><code>sudo systemctl stop firewalld\nsudo systemctl disable firewalld\n</code></pre> <p>Confirm <code>firewalld</code> is disabled with:</p> <pre><code>sudo systemctl status firewalld\n</code></pre> <p></p> <p>We are ready to install or update CSF, which you should already have downloaded to your system. If not; download the latest version of CSF:</p>  .tgz .zip <pre><code># Using wget (tgz)\nwget https://download.configserver.dev/csf.tgz\n\n# Using curl (tgz)\ncurl -O https://download.configserver.dev/csf.tgz\n</code></pre> <pre><code># Using wget (zip)\nwget https://download.configserver.dev/csf.zip\n\n# Using curl (zip)\ncurl -O https://download.configserver.dev/csf.zip\n</code></pre> <p></p> <p>Decompress / unzip the downloaded archive file:</p>  .tgz .zip <pre><code>tar -xzf csf.tgz -C /tmp\n</code></pre> <pre><code>unzip csf.zip -d /tmp\n</code></pre> <p></p> <p>Run the CSF installation script:</p>  Option 1 Option 2 <p> Runs <code>install.sh</code>  uses <code>sh</code> shell  executable permission not required</p> <pre><code>sudo sh /tmp/csf/install.sh\n</code></pre> <p> Runs <code>install.sh</code>  uses shebang interpreter  requires executable <code>+x</code> permission</p> <pre><code>sudo chmod +x /tmp/csf/install.sh\nsudo /tmp/csf/install.sh\n</code></pre> <p></p> <p>Follow any instructions on-screen. If prompted for any additional information, enter it.</p> <p></p> <p>Log back into CWP. Once in, navigate to Security \u203a CSF Firewall from the left-hand menu.</p> CWP \u203a Security \u203a CSF Firewall <p></p> <p>If the interface matches the screenshot above, the CSF integration with CWP is complete.  </p> <p>You can now proceed to the Next Steps or skip the rest of this section and begin our Configuration chapter to get things set up.</p> <p> </p> <p> </p>", "tags": ["install", "setup", "cpanel", "whm", "webmin", "vestacp", "cwp", "centos-web-panel", "directadmin", "interworx", "cyberpanel"]}, {"location": "install/install/#installer-file-summary", "title": "Installer File Summary", "text": "<p>This section provides a list of the installer scripts included with CSF and what their role plays in the installation process. This is available within our docs for more advanced users who wish to understand the process.</p> <p>The installation process for CSF is handled through a main script that triggers several sub-installer scripts. You will run the <code>install.sh</code> script, which automatically detects your platform and then executes the appropriate sub-script.  </p> <p>Each sub-script follows the naming scheme <code>install.&lt;PLATFORM&gt;.sh</code>. We have provided a list of the files below:</p> File Requires Platform <code>install.sh</code> Main installer script, detects your platform and re-reroutes your installation request to the correct installer sub-script listed below <code>install.generic.sh</code> Baremetal <code>install.cpanel.sh</code> <code>/usr/local/cpanel/version</code> cPanel / WHM <code>install.cwp.sh</code> <code>/usr/local/cwpsrv</code> CentOS Web Panel (CWP) <code>install.cyberpanel.sh</code> <code>/usr/local/CyberCP</code> CyberPanel <code>install.directadmin.sh</code> <code>/usr/local/directadmin/directadmin</code> DirectAdmin <code>install.interworx.sh</code> <code>/usr/local/interworx</code> InterWorx <code>install.vesta.sh</code> <code>/usr/local/vesta</code> VestaCP <p></p>", "tags": ["install", "setup", "cpanel", "whm", "webmin", "vestacp", "cwp", "centos-web-panel", "directadmin", "interworx", "cyberpanel"]}, {"location": "install/install/#installsh", "title": "install.sh", "text": "<p>The <code>install.sh</code> script serves as a launcher that directs you to the appropriate installation script for your platform. It can be run on any system, automatically detects your environment, and executes the correct installer from the files listed above. Before running it, make sure the script is executable by running <code>chmod +x install.sh</code>. We\u2019ll cover this in the steps below.</p> <p></p>", "tags": ["install", "setup", "cpanel", "whm", "webmin", "vestacp", "cwp", "centos-web-panel", "directadmin", "interworx", "cyberpanel"]}, {"location": "install/install/#installgenericsh", "title": "install.generic.sh", "text": "<p>This is the generic bare-metal installer for CSF. You should use this script when installing CSF on a server that does not have WHM, cPanel, DirectAdmin, or other control panels installed. If you run <code>install.sh</code>  and it does not detect any supported control panels, it will automatically start <code>install.generic.sh</code> to begin the installation.</p> <p></p>", "tags": ["install", "setup", "cpanel", "whm", "webmin", "vestacp", "cwp", "centos-web-panel", "directadmin", "interworx", "cyberpanel"]}, {"location": "install/install/#installcpanelsh", "title": "install.cpanel.sh", "text": "<p>The <code>install.cpanel.sh</code> script is ran in order to integrate CSF with an existing cPanel/WHM installation. This file triggers if you run <code>install.sh</code>, which checks to see if your server has the file <code>/usr/local/cpanel/version</code>. </p> <p></p>", "tags": ["install", "setup", "cpanel", "whm", "webmin", "vestacp", "cwp", "centos-web-panel", "directadmin", "interworx", "cyberpanel"]}, {"location": "install/install/#installcwpsh", "title": "install.cwp.sh", "text": "<p>The <code>install.cwp.sh</code> script is ran in order to integrate CSF with an existing copy of CentOS Web Panel (CWP). This file triggers when you run <code>install.sh</code>, which checks to see if your server has the file <code>/usr/local/cwpsrv</code>.</p> <p></p>", "tags": ["install", "setup", "cpanel", "whm", "webmin", "vestacp", "cwp", "centos-web-panel", "directadmin", "interworx", "cyberpanel"]}, {"location": "install/install/#installcyberpanelsh", "title": "install.cyberpanel.sh", "text": "<p>The <code>install.cyberpanel.sh</code> script is ran in order to integrate CSF with an existing copy of Cyber Panel. This file triggers when you run <code>install.sh</code>, which checks to see if your server has the file <code>/usr/local/CyberCP</code>.</p> <p></p>", "tags": ["install", "setup", "cpanel", "whm", "webmin", "vestacp", "cwp", "centos-web-panel", "directadmin", "interworx", "cyberpanel"]}, {"location": "install/install/#installdirectadminsh", "title": "install.directadmin.sh", "text": "<p>The <code>install.directadmin.sh</code> script is ran in order to integrate CSF with an existing copy of DirectAdmin. This file triggers when you run <code>install.sh</code>, which checks to see if your server has the file <code>/usr/local/directadmin/directadmin</code>.</p> <p></p>", "tags": ["install", "setup", "cpanel", "whm", "webmin", "vestacp", "cwp", "centos-web-panel", "directadmin", "interworx", "cyberpanel"]}, {"location": "install/install/#installinterworxsh", "title": "install.interworx.sh", "text": "<p>The <code>install.interworx.sh</code> script is ran in order to integrate CSF with an existing copy of InterWorx. This file triggers when you run <code>install.sh</code>, which checks to see if your server has the file <code>/usr/local/interworx</code>.</p> <p></p>", "tags": ["install", "setup", "cpanel", "whm", "webmin", "vestacp", "cwp", "centos-web-panel", "directadmin", "interworx", "cyberpanel"]}, {"location": "install/install/#installvestash", "title": "install.vesta.sh", "text": "<p>The <code>install.vesta.sh</code> script is ran in order to integrate CSF with an existing copy of VestaCP. This file triggers when you run <code>install.sh</code>, which checks to see if your server has the file <code>/usr/local/vesta</code>.</p> <p></p> <p></p>", "tags": ["install", "setup", "cpanel", "whm", "webmin", "vestacp", "cwp", "centos-web-panel", "directadmin", "interworx", "cyberpanel"]}, {"location": "install/install/#next-steps", "title": "Next Steps", "text": "<p>Select what documentation you would like to proceed with next ...</p> <ul> <li> <p> Start System Services</p> <p>Starting CSF requires disabling testing mode and enabling the firewall so it runs normally.  </p> <p>This chapter explains how to start both CSF and LFD services and ensure they launch on boot.  </p> <p>You\u2019ll also find troubleshooting tips for common startup errors and how to fix them quickly.  </p> </li> <li> <p> Enable Web Interface</p> <p>The web interface lets you manage your firewall through a browser instead of a command line.  </p> <p>This chapter covers installation of dependencies, enabling the interface, and whitelisting your IP for security.  </p> </li> </ul> <p></p> <p></p>", "tags": ["install", "setup", "cpanel", "whm", "webmin", "vestacp", "cwp", "centos-web-panel", "directadmin", "interworx", "cyberpanel"]}, {"location": "install/services/", "title": "Install \u203a Start Services", "text": "", "tags": ["install", "setup", "service", "systemctl"]}, {"location": "install/services/#start-services", "title": "Start Services", "text": "<p>After you have installed CSF, we can now start the services required for CSF and LFD to run properly. This section covers the basics of getting the services up and running. However, it does not go into detailed configurations.</p> <p> </p>", "tags": ["install", "setup", "service", "systemctl"]}, {"location": "install/services/#disable-testing-mode", "title": "Disable Testing Mode", "text": "<p>Testing mode is a feature built into CSF and LFD which does the following when TESTING is enabled:</p> <ul> <li>Allows safe configuration of CSF without enforcing firewall rules or banning IPs.</li> <li>Reads configuration files like <code>/etc/ssh/sshd_config</code> to detect service ports. Detected ports (SSH, IPv6, TCP/UDP) are added to CSF config variables such as <code>TCP_IN</code>, <code>TCP6_IN</code>, <code>UDP_IN</code> in <code>/etc/csf/csf.conf</code>.</li> <li>LFD does not run as a daemon.</li> <li>Adds a cron job to periodically reload CSF rules for testing, but no actual blocking occurs.</li> <li>IPs in <code>csf.allow</code> and <code>csf.deny</code> are processed for testing but not enforced.</li> <li>Displays currently listening ports to sysadmin; helps safely configure CSF before enabling enforcement.</li> </ul> Testing Mode Disables LFD <p>If you plan to utilize our <code>LFD</code> service; you MUST disable <code>TESTING MODE</code>.</p> <p></p> <p>Out of box, CSF enables <code>TESTING MODE</code>. If this mode is enabled, the LFD daemon service will not start.  To disable testing mode, we need to open <code>/etc/csf/csf.conf</code> and locate the following:</p> /etc/csf/csf.conf<pre><code># ##############################################################################\n#   Initial Settings\n# ##############################################################################\n#   Testing flag - enables a CRON job that clears iptables incase of\n#   configuration problems when you start csf. This should be enabled until you\n#   are sure that the firewall works - i.e. incase you get locked out of your\n#   server! Then do remember to set it to 0 and restart csf when you're sure\n#   everything is OK. Stopping csf will remove the line from /etc/crontab\n#   \n#   lfd will not start while this is enabled\n# #\nTESTING = \"1\"\n</code></pre> <p></p> <p>Flip the value of <code>TESTING</code> from <code>1</code> to <code>0</code>:</p>  Find Change To /etc/csf/csf.conf<pre><code>TESTING = \"1\"\n</code></pre> /etc/csf/csf.conf<pre><code>TESTING = \"0\"\n</code></pre> <p></p> <p>If you already skipped ahead and started CSF up, you'll need to perform a restart of the services with the command:</p>  Command <pre><code>sudo csf -ra\n</code></pre> <p></p> <p>After disabling <code>TESTING</code> mode, you can now start the services up. Proceed to the section Enable &amp; Disable CSF.</p> <p> </p> <p> </p>", "tags": ["install", "setup", "service", "systemctl"]}, {"location": "install/services/#enable-and-disable-csf", "title": "Enable and Disable CSF", "text": "<p>CSF and LFD can be set to <code>enabled</code> or <code>disabled</code>. Once you complete this section and enable csf, you can then confirm that CSF and LFD are running.</p> <p></p> <code>enable</code> <p> Enable csf and lfd if previously disabled</p> <pre><code>sudo csf --enable\n</code></pre> <code>disable</code> <p> Disable csf and lfd completely</p> <pre><code>sudo csf --disable\n</code></pre> <p> </p> <p> </p>", "tags": ["install", "setup", "service", "systemctl"]}, {"location": "install/services/#csf-service", "title": "CSF Service", "text": "<p>This section outlines how to ensure the CSF service is operating correctly. First, let's start up the CSF service:</p>  Command <pre><code>sudo systemctl start csf\nsudo csf -ra\n</code></pre> <p></p> <p>Check the current status of CSF by running the command:</p>  Command Output <pre><code>sudo systemctl status csf\n</code></pre> <pre><code>\u25cf csf.service - ConfigServer Security &amp; Firewall - csf\n    Loaded: loaded (/lib/systemd/system/csf.service; enabled; vendor preset: enabled)\n    Active: active (exited) since Mon 2025-09-15 23:45:04 UTC; 14 seconds ago\n  Main PID: 597 (code=exited, status=0/SUCCESS)\n        CPU: 0min 14.956s\n\nNotice: journal has been rotated since unit was started, output may be incomplete.\n</code></pre> <p></p> <p>If you notice that CSF is not running or has the status <code>inactive (dead)</code> like the following:</p>  Command Output <pre><code>sudo systemctl status csf\n</code></pre> <pre><code>\u25cb csf.service - ConfigServer Security &amp; Firewall - csf\n    Loaded: loaded (/usr/lib/systemd/system/csf.service; enabled; preset: enabled)\n    Active: inactive (dead)\n</code></pre> <p></p> <p>We must enable the services to ensure they are running. Execute the commands below in your terminal:</p>  Command <pre><code>sudo systemctl start csf\nsudo csf -ra\n</code></pre> <p></p> <p>Confirm that the service is up and running:</p>  Command Output <pre><code>sudo systemctl status csf\n</code></pre> <pre><code>\u25cf csf.service - ConfigServer Security &amp; Firewall - csf\n    Loaded: loaded (/usr/lib/systemd/system/csf.service; enabled; preset: enabled)\n    Active: active (exited) since Sun 2025-09-21 01:35:45 UTC; 4s ago\n    Process: 449564 ExecStart=/usr/sbin/csf --initup (code=exited, status=0/SUCCESS)\n  Main PID: 449564 (code=exited, status=0/SUCCESS)\n        CPU: 621ms\n</code></pre> <p></p> <p>After you have confirmed that the CSF service is running, we need to ensure that the LFD is also operating normally.</p> <p> </p> <p> </p>", "tags": ["install", "setup", "service", "systemctl"]}, {"location": "install/services/#lfd-service", "title": "LFD Service", "text": "<p>This section outlines how to ensure the LFD service is operating correctly. First, let's start up the LFD service:</p>  Command <pre><code>sudo systemctl start lfd\nsudo csf -ra\n</code></pre> <p></p> <p>Check the current status of LFD by running the command:</p>  Command Output <pre><code>sudo systemctl status lfd\n</code></pre> <pre><code>\u25cf lfd.service - ConfigServer Security &amp; Firewall - lfd\n    Loaded: loaded (/usr/lib/systemd/system/lfd.service; enabled; preset: enabled)\n    Active: active (running) since Sun 2025-09-21 01:11:21 UTC; 1min 17s ago\n    Process: 335736 ExecStart=/usr/sbin/lfd (code=exited, status=0/SUCCESS)\n  Main PID: 335770 (lfd - sleeping)\n      Tasks: 1 (limit: 4546)\n    Memory: 38.8M (peak: 55.0M)\n        CPU: 4.375s\n    CGroup: /system.slice/lfd.service\n            \u2514\u2500335770 \"lfd - sleeping\"\n</code></pre> <p></p> <p>If you see the status <code>failed</code> like the following example, this could be for any number of reasons. We will review below:</p>  Output <pre><code>\u00d7 lfd.service - ConfigServer Security &amp; Firewall - lfd\n    Loaded: loaded (/usr/lib/systemd/system/lfd.service; enabled; preset: enabled)\n    Active: failed (Result: signal) since Sun 2025-09-21 01:52:34 UTC; 20min ago\n    Process: 115504 ExecStart=/usr/sbin/lfd (code=killed, signal=KILL)\n        CPU: 186ms\n</code></pre> <p></p> <p>Ensure CSF and LFD are both enabled:</p>  Command <pre><code>sudo csf -e\n</code></pre> <p></p> <p>Another option to check the reason for the failure is to read out the lfd logs located at <code>/var/log/lfd.log</code>:</p>  Command Output <pre><code>sudo tail -n 50 /var/log/lfd.log\n</code></pre> <pre><code>Sep 21 01:44:34 server lfd[99819]: *Error* lfd will not run with TESTING enabled in /etc/csf/csf.conf, at line 98\nSep 21 01:44:34 server lfd[99819]: daemon stopped\nSep 21 01:47:24 server lfd[105308]: *Error* lfd will not run with TESTING enabled in /etc/csf/csf.conf, at line 98\nSep 21 01:47:24 server lfd[105308]: daemon stopped\nSep 21 01:47:56 server lfd[101396]: *Error* lfd will not run with TESTING enabled in /etc/csf/csf.conf, at line 98\nSep 21 01:47:56 server lfd[101396]: daemon stopped\nSep 21 01:50:39 server lfd[111685]: *Error* lfd will not run with TESTING enabled in /etc/csf/csf.conf, at line 98\nSep 21 01:50:39 server lfd[111685]: daemon stopped\nSep 21 01:52:07 server lfd[114496]: *Error* lfd will not run with TESTING enabled in /etc/csf/csf.conf, at line 98\nSep 21 01:52:07 server lfd[114496]: daemon stopped\nSep 21 01:52:34 server lfd[115504]: *Error* lfd will not run with TESTING enabled in /etc/csf/csf.conf, at line 98\nSep 21 01:52:34 server lfd[115504]: daemon stopped\nSep 21 01:55:17 server lfd[120584]: *Error* lfd will not run with TESTING enabled in /etc/csf/csf.conf, at line 98\nSep 21 01:55:17 server lfd[120584]: daemon stopped\n</code></pre> <p></p> <p>As our logs above show, it is complaining that <code>TESTIN</code> mode is enabled. You must ensure this mode is disabled before you will be able to enable the lfd service. Check that <code>TESTING = \"0\"</code> is set in your <code>/etc/csf/csf.conf</code>. Flip the value of <code>TESTING</code> from <code>1</code> to <code>0</code>:</p>  Find Change To /etc/csf/csf.conf<pre><code>TESTING = \"1\"\n</code></pre> /etc/csf/csf.conf<pre><code>TESTING = \"0\"\n</code></pre> <p></p> <p>Attempt to start LFD again:</p>  Command <pre><code>sudo systemctl start lfd\nsudo csf -ra\n</code></pre> <p></p> <p>You should now be able to confirm that LFD is running:</p>  Command Output <pre><code>sudo systemctl status lfd\n</code></pre> <pre><code>\u25cf lfd.service - ConfigServer Security &amp; Firewall - lfd\n    Loaded: loaded (/usr/lib/systemd/system/lfd.service; enabled; preset: enabled)\n    Active: active (running) since Sun 2025-09-21 01:44:00 UTC; 53min ago\n    Process: 335736 ExecStart=/usr/sbin/lfd (code=exited, status=0/SUCCESS)\n  Main PID: 335770 (lfd - sleeping)\n      Tasks: 1 (limit: 4546)\n    Memory: 39.2M (peak: 63.3M)\n        CPU: 15.090s\n    CGroup: /system.slice/lfd.service\n            \u2514\u2500335770 \"lfd - sleeping\"\n</code></pre> <p> </p> <p> </p>", "tags": ["install", "setup", "service", "systemctl"]}, {"location": "install/services/#troubleshooting", "title": "Troubleshooting", "text": "<p>Refer to the following troubleshooting tips if you have issues with installing and starting CSF or the LFD daemon.</p> <p></p>", "tags": ["install", "setup", "service", "systemctl"]}, {"location": "install/services/#lfdservice-will-not-start-inactive-dead", "title": "lfd.service will not start (inactive (dead))", "text": "<p>First, let's ensure <code>TESTING</code> mode is disabled. Run the following <code>tail</code> command to look at the lfd logs located in <code>/var/log/lfd.log</code>:</p>  Command Output <pre><code>sudo tail -n 50 /var/log/lfd.log\n</code></pre> <pre><code>Sep 21 01:44:34 server lfd[99819]: *Error* lfd will not run with TESTING enabled in /etc/csf/csf.conf, at line 98\nSep 21 01:44:34 server lfd[99819]: daemon stopped\nSep 21 01:47:24 server lfd[105308]: *Error* lfd will not run with TESTING enabled in /etc/csf/csf.conf, at line 98\nSep 21 01:47:24 server lfd[105308]: daemon stopped\nSep 21 01:47:56 server lfd[101396]: *Error* lfd will not run with TESTING enabled in /etc/csf/csf.conf, at line 98\nSep 21 01:47:56 server lfd[101396]: daemon stopped\nSep 21 01:50:39 server lfd[111685]: *Error* lfd will not run with TESTING enabled in /etc/csf/csf.conf, at line 98\nSep 21 01:50:39 server lfd[111685]: daemon stopped\nSep 21 01:52:07 server lfd[114496]: *Error* lfd will not run with TESTING enabled in /etc/csf/csf.conf, at line 98\nSep 21 01:52:07 server lfd[114496]: daemon stopped\nSep 21 01:52:34 server lfd[115504]: *Error* lfd will not run with TESTING enabled in /etc/csf/csf.conf, at line 98\nSep 21 01:52:34 server lfd[115504]: daemon stopped\nSep 21 01:55:17 server lfd[120584]: *Error* lfd will not run with TESTING enabled in /etc/csf/csf.conf, at line 98\nSep 21 01:55:17 server lfd[120584]: daemon stopped\n</code></pre> <p></p> <p>If you see the above logs, this means that <code>TESTING</code> mode is enabled. In order for the LFD daemon to start, you must disable testing mode. Open <code>/etc/csf/csf.conf</code> and change the following:</p>  Find Change To /etc/csf/csf.conf<pre><code>TESTING = \"1\"\n</code></pre> /etc/csf/csf.conf<pre><code>TESTING = \"0\"\n</code></pre> <p></p> <p>You can also try to run LFD with <code>strace</code>:</p>  Command Output <pre><code>sudo strace -f /usr/sbin/lfd --check\n</code></pre> <pre><code>rt_sigaction(SIGRT_25, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\nrt_sigaction(SIGRT_26, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\nrt_sigaction(SIGRT_27, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\nrt_sigaction(SIGRT_28, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\nrt_sigaction(SIGRT_29, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\nrt_sigaction(SIGRT_30, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\nrt_sigaction(SIGRT_31, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\nrt_sigaction(SIGRT_32, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\nrt_sigaction(SIGABRT, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\nrt_sigaction(SIGCHLD, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\nrt_sigaction(SIGIO, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\nexit_group(0)                           = ?\n+++ exited with 0 +++\n</code></pre> <p></p> <p>Sometimes <code>strace</code> will give you hints as to what went wrong. In the example above, lfd is exiting with <code>error code 0</code>, which means \u201csuccess / no error\u201d. The program is choosing to shut itself down and telling the OS \u201cI finished cleanly.\u201d. This tells us that it's not due to something failing. </p> <p>When a daemon exits cleanly (exit code 0), you usually have to look inside lfd's own logs, not just systemd\u2019s.</p> <p>In our example above, we clearly see in the <code>/var/log/lfd.log</code> file that it was due to us having <code>TESTING</code> enabled.</p> <p></p> <p>Another option for checking failure reasons is to run the following command:</p>  Command <pre><code>sudo dmesg -T | tail -n 20\n</code></pre> <p></p> <p>You can also check <code>journalctl</code> for any errors:</p>  Command <pre><code>sudo journalctl -xeu lfd.service\n</code></pre> <p></p> <p>All of the listed methods above will help you narrow down exactly why CSF or LFD are not starting properly.</p> <p></p> <p></p>", "tags": ["install", "setup", "service", "systemctl"]}, {"location": "install/services/#next-steps", "title": "Next Steps", "text": "<p>Select what documentation you would like to proceed with next ...</p> <ul> <li> <p> Enable Web Interface</p> <p>The web interface lets you manage your firewall through a browser instead of a command line.  </p> <p>This chapter covers installation of dependencies, enabling the interface, and whitelisting your IP for security.  </p> <p>You\u2019ll also learn how to access the interface safely and protect it from unauthorized users.  </p> </li> <li> <p> Usage Introduction</p> <p>If you don\u2019t plan to set up Traefik or Authentik with the CSF web interface,  you can skip ahead to the Usage section. </p> <p>The next chapter covers CSF\u2019s core features, basic configuration, available commands, folder structure, and everything you need to get started.</p> <p>You will be taken on a more detailed dive of how CSF can benefit you and what options you have for securing your server.</p> </li> </ul> <p></p> <p></p>", "tags": ["install", "setup", "service", "systemctl"]}, {"location": "install/tests/", "title": "Install \u203a Diagnostic Tests", "text": "", "tags": ["install", "setup", "tests", "diagnostics"]}, {"location": "install/tests/#diagnostic-tests", "title": "Diagnostic Tests", "text": "<p>ConfigServer Security &amp; Firewall includes a few diagnostic tests which you can run and will output the current status of your CSF installation, including whether or not it is operating normally.</p> <p> </p>", "tags": ["install", "setup", "tests", "diagnostics"]}, {"location": "install/tests/#csftestpl", "title": "csftest.pl", "text": "<p>The <code>csftest.pl</code> script is a diagnostic tool included with CSF. Its primary purpose is to check whether your server environment is compatible with CSF and LFD (Login Failure Daemon) before and after installation. When you run <code>csftest.pl</code>, it performs a series of tests to verify:</p> <ul> <li>That required Perl modules are installed and available</li> <li>That essential system commands and binaries (such as iptables, ip6tables, and others) can be found and executed</li> <li>That your operating system and kernel support the necessary firewall features</li> <li>That no conflicting firewall rules or services prevent CSF from running correctly</li> </ul> <p></p> <p>If any issues are detected, the script will report them so you can fix missing dependencies or adjust your system configuration. Running this script is a recommended step before installing CSF to your server, as it ensures that your server is properly prepared for firewall deployment.</p> <p></p> <p>To run these tests; ensure you have the package <code>perl</code> installed on your system as explained in the previous step Dependencies. You also need to have CSF extracted to your server. After these are complete, run the tests:</p> <pre><code>sudo perl csf/csftest.pl\n</code></pre> Running Tests After Install <p>You can also run the tests again at any time with the command:</p> <pre><code>sudo perl /usr/local/csf/bin/csftest.pl\n</code></pre> <p></p> <p>When the tests run; you should see the following:</p> <pre><code>Testing ip_tables/iptable_filter...OK\nTesting ipt_LOG...OK\nTesting ipt_multiport/xt_multiport...OK\nTesting ipt_REJECT...OK\nTesting ipt_state/xt_state...OK\nTesting ipt_limit/xt_limit...OK\nTesting ipt_recent...OK\nTesting xt_connlimit...OK\nTesting ipt_owner/xt_owner...OK\nTesting iptable_nat/ipt_REDIRECT...OK\nTesting iptable_nat/ipt_DNAT...OK\n\nRESULT: csf should function on this server\n</code></pre> <p> If the tests failed, proceed to the next step Troubleshooting to see if your error is listed and consult it for a possible fix.</p> <p> If the tests succeed, proceed to the next part of the guide:</p> <p></p> <p>Select what documentation you would like to proceed with next ...</p> <ul> <li> <p> Install (Generic)</p> <p>Choose this step if you wish to install CSF using the generic installer. This is good for users who are installing CSF on a bare metal machine with no existing control panels such as cPanel, DirectAdmin, etc.</p> </li> <li> <p> Install (cPanel)</p> <p>Choose this step if you wish to install CSF on a server which already has cPanel and WHM installed. This will allow CSF to be integrated into WHM and will be listed under WHM's Plugins category.</p> </li> </ul> <p></p> <p></p>", "tags": ["install", "setup", "tests", "diagnostics"]}, {"location": "install/tests/#troubleshooting", "title": "Troubleshooting", "text": "<p>If you received any errors during the process of running <code>csftest.pl</code>, review the list of possible errors and solutions below:</p> <p></p>", "tags": ["install", "setup", "tests", "diagnostics"]}, {"location": "install/tests/#unknown-option-dport-csf-requires-legacy-iptables", "title": "unknown option --dport: (CSF requires legacy iptables)", "text": "<p>If you see this error during the CSF tests, your system is using the nftables backend for iptables. CSF requires the legacy iptables backend. Check the current setting with:</p> <pre><code>sudo update-alternatives --display iptables\n</code></pre> <p></p> <p>If you see <code>link currently points to /usr/sbin/iptables-nft</code>, you need to change this over to <code>/usr/sbin/iptables-legacy</code>. Two methods are listed below for doing this, pick one:</p> <p></p>  Method 1 Method 2 <p>To switch over to <code>/usr/sbin/iptables-legacy</code>, run the command:</p> <pre><code>sudo update-alternatives --config iptables\n</code></pre> <p></p> <p>You will see the following:</p> <pre><code>There are 2 choices for the alternative iptables (providing /usr/sbin/iptables).\n\n  Selection    Path                       Priority   Status\n------------------------------------------------------------\n* 0            /usr/sbin/iptables-nft      20        auto mode\n  1            /usr/sbin/iptables-legacy   10        manual mode\n  2            /usr/sbin/iptables-nft      20        manual mode\n</code></pre> <p></p> <p>There may be an asterisk next to <code>selection</code> 0, you need to press 1 and press Enter to switch over to <code>/usr/sbin/iptables-legacy</code>. Then repeat these steps for IPv6</p> <pre><code>sudo update-alternatives --config ip6tables\n</code></pre> <p></p> <p>Along with ipv4 and ipv6, there are two other tables you can switch, which are <code>arptables</code> and <code>ebtables</code>. </p> arptables &amp; ebtables <ul> <li><code>arptables</code>: Works on Layer 2 (link layer), specifically for the ARP protocol.<ul> <li>Lets you control ARP traffic (who can send ARP requests/replies, block spoofing, etc.).</li> <li>Example: prevent ARP spoofing in a local network.</li> </ul> </li> <li><code>ebtables</code>: Works on Ethernet bridge frames (Layer 2).<ul> <li>Lets you filter traffic based on MAC addresses, Ethernet types, or VLAN tags before IP-level filtering happens.</li> <li>Used when the system is acting as a bridge or switch.</li> </ul> </li> </ul> <p></p> <p>If you need to switch the other options over to legacy, those commands are:</p> <pre><code>sudo update-alternatives --config arptables\nsudo update-alternatives --config ebtables\n</code></pre> <p>To switch over to <code>/usr/sbin/iptables-legacy</code>, run the commands listed below:</p>  Debian/Ubuntu (apt-get) CentOS/RHEL (yum/dnf) Error: Not registered; Not setting <p>On newer systems (Debian 11+, Ubuntu 20.04+, RHEL 8+), <code>ebtables</code> and <code>arptables</code> are often completely replaced by nftables, so there isn\u2019t always a legacy version available. This means that you may not have any binaries installed for these two types and could receive the following error if you attempt to change <code>ebtables</code> and <code>arptables</code>:</p> <pre><code>update-alternatives: error: alternative /usr/sbin/ebtables-legacy for ebtables not registered; not setting\nupdate-alternatives: error: alternative /usr/sbin/arptables-legacy for arptables not registered; not setting\n</code></pre> <p>If you receive the error(s) above; simply skip setting <code>ebtables</code> and <code>arptables</code>. Only focus on switching <code>iptables</code> and <code>ip6tables</code> over to <code>iptables-legacy</code></p> <pre><code>sudo update-alternatives --set iptables /usr/sbin/iptables-legacy\nsudo update-alternatives --set ip6tables /usr/sbin/ip6tables-legacy\nsudo update-alternatives --set arptables /usr/sbin/arptables-legacy\nsudo update-alternatives --set ebtables /usr/sbin/ebtables-legacy\n</code></pre> <pre><code>sudo alternatives --config iptables\nsudo alternatives --config ip6tables\nsudo alternatives --config arptables\nsudo alternatives --config ebtables\n</code></pre> <p></p> <p>You\u2019ll be presented with a numbered list of installed binaries (usually nftables and legacy). You need to type the number corresponding to the legacy version so that <code>iptables-legacy</code> becomes the default.</p> <pre><code>There are 2 choices for the alternative iptables (providing /usr/sbin/iptables).\n\n  Selection    Path                       Priority   Status\n------------------------------------------------------------\n* 0            /usr/sbin/iptables-nft      20        auto mode\n  1            /usr/sbin/iptables-legacy   10        manual mode\n  2            /usr/sbin/iptables-nft      20        manual mode\n\nEnter to keep the current selection[+], or type selection number: 1\n</code></pre> <p></p> <p>Confirm your changes by running the command:</p> <pre><code>iptables -V\n</code></pre> <p></p> <p>Which should return:</p> <pre><code>$ iptables -V\niptables v1.8.7 (legacy)\n</code></pre> <p></p> <p>You can also run:</p> <pre><code>sudo update-alternatives --display iptables\n</code></pre> <p></p> <p>Which should output:</p> <pre><code>iptables - manual mode\nlink currently points to /usr/sbin/iptables-legacy\n</code></pre> <p></p> <p>You can always switch back to <code>iptables-nft</code> by running:</p> <pre><code>sudo update-alternatives --set iptables /usr/sbin/iptables-nft\n</code></pre> <p></p> <p></p>", "tags": ["install", "setup", "tests", "diagnostics"]}, {"location": "install/tests/#next-steps", "title": "Next Steps", "text": "<p>Select what documentation you would like to proceed with next ...</p> <ul> <li> <p> Install (Generic)</p> <p>Choose this step if you wish to install CSF using the generic installer. This is good for users who are installing CSF on a bare metal machine with no existing control panels such as cPanel, DirectAdmin, etc.</p> </li> <li> <p> Install (cPanel)</p> <p>Choose this step if you wish to install CSF on a server which already has cPanel and WHM installed. This will allow CSF to be integrated into WHM and will be listed under WHM's Plugins category.</p> </li> </ul>", "tags": ["install", "setup", "tests", "diagnostics"]}, {"location": "install/traefik/", "title": "Usage \u203a Traefik Integration", "text": "", "tags": ["usage", "configure", "integration", "traefik"]}, {"location": "install/traefik/#traefik-integration", "title": "Traefik Integration", "text": "<p>This section of the guide covers setting up CSF with Traefik as a reverse proxy. It explains your options for using a public domain or a private unofficial pseudo-domain such as <code>.local</code>/<code>.lan</code> which is accessible only to you. We\u2019ll also provide resources for generating and managing your own SSL certificates.</p> <p></p> <p></p>", "tags": ["usage", "configure", "integration", "traefik"]}, {"location": "install/traefik/#what-is-traefik", "title": "What is Traefik?", "text": "<p>Traefik is a modern reverse proxy and load balancer that makes it easier to manage how traffic flows to your applications and services. Instead of exposing each service directly to the internet, Traefik acts as a gateway, routing requests securely and efficiently to the correct destination. This setup is especially useful for servers running multiple web-based tools or dashboards, since Traefik helps organize and protect all of them under one entry point.</p> <p>One of the biggest advantages of Traefik is its support for middleware. Middleware are modular features you can \u201cattach\u201d to your routes. For example, you can use IP whitelisting middleware to ensure only trusted addresses can access your CSF web interface. You could also add geo-blocking rules to limit access based on country, or integrate with external identity providers like Authentik to require secure authentication before anyone can reach your firewall web interface / dashboard.</p> <p>With Traefik handling these protections, you don\u2019t need to open sensitive ports directly to the outside world. Instead, Traefik listens on your chosen ports (like 80 or 443) and enforces the security rules you define before traffic ever reaches your applications. This layered approach not only reduces your attack surface, but also gives you fine-grained control over who can connect, from where, and under what conditions.</p> <p></p> <p></p>", "tags": ["usage", "configure", "integration", "traefik"]}, {"location": "install/traefik/#domain-name", "title": "Domain Name", "text": "<p>Before you begin, you\u2019ll need to decide how you want to access Traefik and CSF from your browser. There are three main options:</p> <ol> <li> <p>Use the server\u2019s IP address    Access services directly by memorizing and entering their IP addresses.  </p> </li> <li> <p>Purchase a valid domain name    Register a real TLD (e.g., <code>.com</code>, <code>.org</code>, <code>.net</code>, <code>.io</code>) for public access.  </p> </li> <li> <p>Use a local domain    Configure a <code>.local</code> or <code>.lan</code> domain for internal access only.    \u26a0\ufe0f These domains cannot be reached from outside your local network.</p> </li> </ol> <p>The main reason for choosing how you will access Traefik will determine how you generate the correct SSL certificate. SSL certificates allow you to securely access Traefik and the CSF web interface over the <code>https</code> protocol. Without a valid certificate, you would be limited to using the insecure <code>http</code> protocol.</p> <p>We will outline the differences in the options below:</p> <p> </p>", "tags": ["usage", "configure", "integration", "traefik"]}, {"location": "install/traefik/#purchase-domain", "title": "Purchase Domain", "text": "<p>This option involves you buying your own TLD / domain name from a valid domain regisrar online.</p> <p></p>", "tags": ["usage", "configure", "integration", "traefik"]}, {"location": "install/traefik/#how-to-obtain", "title": "How To Obtain", "text": "<p>If you plan to go the route of purchasing a valid TLD / domain, you can find a relatively cheap domain through registrars online. We've listed a few recommendations, but you can pick whichever company you want to go with:</p> Our Recommendation <p>We make no money from this recommendation, and there is no affiliate link included.  </p> <p>That said, we personally recommend Porkbun as a reliable domain registrar. They offer competitive pricing and include free WHOIS privacy with any domain purchase.  </p> <p>We have interacted with their support in the past and have been impressed with their professionalism. Of course, you are free to choose whichever registrar you prefer. We only recommend them because we have been an actual customer for over six years, and have never had a negative experience.</p> <p>Plus, the comedy on their website is fun to read.</p> <ul> <li>Porkbun</li> <li>Cloudflare</li> <li>NameSilo</li> </ul> <p>Once you get your domain purchased, you'll need to set up the domain name to point to your server. You could also decide to set up your domain name to run through Cloudflare (optional).</p> <p> </p>", "tags": ["usage", "configure", "integration", "traefik"]}, {"location": "install/traefik/#ssl-certificate", "title": "SSL Certificate", "text": "<p>Generating an SSL certificate for a purchased domain is extremely simple, and you have a few options:</p> <ol> <li>Create a Cloudflare account, link your domain with Cloudflare, and get a free SSL certificate</li> <li>Your purchased domain name may include a free 1-year SSL certificate (check with your domain registrar).</li> <li>When you set up your domain to run with Traefik, there are settings which allow you to have Traefik automatically generate an SSL certificate free of charge through Let's Encrypt.</li> <li>Generate a free SSL certificate using certbot</li> </ol> <p> </p>", "tags": ["usage", "configure", "integration", "traefik"]}, {"location": "install/traefik/#setup", "title": "Setup", "text": "<p>After you have purchased a valid TLD, you will need to associate that domain with the IP address or nameservers that are assigned to your server where Traefik and CSF will be hosted. There are a multitude of tutorials online about configuring your domain, so we won't go into great detail. The process however, is simple.</p> <p>We do recommend setting your domain up with Cloudflare. This allows you to configure your domain name with your server, and also receive free services such as DNS management, SSL certificates, firewall rules, and DDoS protection. No extra cost.</p> <p> </p>", "tags": ["usage", "configure", "integration", "traefik"]}, {"location": "install/traefik/#local-domain", "title": "Local Domain", "text": "<p>This option allows you to use a free local domain such as <code>.lan</code> or <code>.local</code> to generate a self-signed certificate and access services such as CSF and Traefik, however, on a local network only.</p> <p></p>", "tags": ["usage", "configure", "integration", "traefik"]}, {"location": "install/traefik/#how-to-obtain_1", "title": "How To Obtain", "text": "<p>If you decide not to purchase a domain, another option is to configure your server so it can be accessed through a local domain (such as <code>.lan</code> or <code>.local</code>).  </p> <ul> <li><code>.local</code> is an officially reserved special-use domain name defined in RFC 6762.   It is typically used with Multicast DNS (mDNS) and is only accessible within your local network.  </li> <li><code>.lan</code> (and similar names like <code>.home</code> or <code>.internal</code>) are unofficial pseudo-domains.   They are commonly used for private networks but are not recognized or reserved by ICANN.  </li> </ul> <p>Unlike a registered domain (e.g., <code>.com</code>, <code>.net</code>, <code>.org</code>), a local domain:</p> <ul> <li>Will not resolve on the public internet.</li> <li>Can only be accessed within your own LAN.</li> <li>May cause conflicts if the pseudo-domain is ever assigned as a real TLD in the future.</li> </ul> <p>This setup works well if you only need access to CSF and Traefik on your internal network. However, if you need external access from an outside network, you\u2019ll need to purchase a domain.</p> <p> </p>", "tags": ["usage", "configure", "integration", "traefik"]}, {"location": "install/traefik/#ssl-certificate_1", "title": "SSL Certificate", "text": "<p>Obtaining an SSL certificate for a local domain involves more work. You have the following options:</p> <ol> <li>Self-generate your own SSL certificate using an app such as OpenSSL<ul> <li> Windows</li> <li> Linux</li> </ul> </li> <li>Find an SSL Certificate authority which allows you to generate certificates for a public IP address.<ul> <li>Let's Encrypt announced that IP based SSL certificates would be available in Q4 of 2025</li> </ul> </li> <li>Use an online self-signed certificate generator instead of OpenSSL.<ul> <li>One example: https://www.devglan.com/online-tools/generate-self-signed-cert</li> </ul> </li> <li>Traefik also provides quick documentation on how to generate your own self-signed certificate; follow that tutorial here</li> </ol> <p> </p>", "tags": ["usage", "configure", "integration", "traefik"]}, {"location": "install/traefik/#setup_1", "title": "Setup", "text": "<p>If you have decide to go with a <code>.local</code> or <code>.lan</code> self-hosted domain, you will need to tell your network / computers what domain you want to use, and where the domain / subdomains should go when you type it into your browser.</p> <p>To configure local domain access, you\u2019ll need to edit your operating system\u2019s hosts file. This ensures that when you type a local domain into your browser, your computer redirects it to the IP address of your Traefik Docker container.  </p> <p>Before you can do this, make sure Traefik is installed and running so you know which IP address has been assigned to the container. Once you have the container\u2019s IP, open your OS hosts file and create entries like the following examples. For ours, Traefik is assigned the docker ip <code>172.18.0.2</code>:</p>  C:\\Windows\\system32\\drivers\\etc\\hosts /etc/hosts <pre><code>172.18.0.2 myserver.local\n172.18.0.2 traefik.myserver.local\n::1 myserver.local localhost\n</code></pre> <pre><code>172.18.0.2 myserver.local\n172.18.0.2 traefik.myserver.local\n::1 myserver.local localhost\n</code></pre> <p></p> <p>The host file changes above means that any time you go to <code>myserver.local</code> in your browser, the local domain will automatically try to establish a connection with your Traefik container via the IP <code>172.18.0.2</code>.</p> <p> </p>", "tags": ["usage", "configure", "integration", "traefik"]}, {"location": "install/traefik/#setup-traefik", "title": "Setup Traefik", "text": "<p>Now that we have all of the domain information out of the way, we can now install Traefik Reverse Proxy on your server. Traefik allows you to install their software on a few different platforms:</p> <ol> <li>Binary Distribution</li> <li>Docker</li> <li>Docker Swarm</li> <li>Kubernetes</li> </ol> <p></p> <p>We are not going to provide detailed instructions on installing Traefik since that is outside the scope of this documentation, but there are many tutorials online, and we have linked several above next to each installation option.</p> <p>If you opted to use a local domain that you did not purchase, you will need to generate a self-signed certificate and install it in Traefik. This allows you to access your server securely over <code>https</code> rather than the insecure <code>http</code> protocol.  </p> <p>For guidance on generating a self-signed SSL certificate, refer to Traefik\u2019s documentation creating a self-signed certificate.</p> <p> </p>", "tags": ["usage", "configure", "integration", "traefik"]}, {"location": "install/traefik/#setup-traefik-with-csf", "title": "Setup Traefik with CSF", "text": "<p>By this point in the guide, you should have:</p> <ul> <li>A registered domain or a local/LAN domain name</li> <li>A Let's Encrypt or self-signed SSL certificate</li> <li>A running installation of Traefik Reverse Proxy</li> <li>An installed copy of ConfigServer Security &amp; Firewall (CSF)</li> </ul> <p></p> <p>Next, we\u2019ll configure CSF so it can be accessed through Traefik.  </p> <p>Open <code>/etc/csf/csf.conf</code> and update the <code>UI_IP</code> setting. This defines the IP address that the CSF web interface will bind to.  By default, the value is empty, which means CSF\u2019s web interface binds to all IPs on the server.</p> <p>When setting <code>UI_IP</code>, we will use the IP address of our docker network, which is formatted as <code>::ffff:172.17.0.1</code>. This is an IPv6-mapped IPv4 address which consists of:</p> Value Description <code>::</code> shorthand for \u201call zeros\u201d in IPv6. <code>ffff:</code> a marker that indicates the address is an IPv4-mapped address <code>172.17.0.1</code> the actual IPv4 address being represented (in this case, the Docker bridge gateway) <p>In short, <code>::ffff:172.17.0.1</code> is just another way of writing the IPv4 address <code>172.17.0.1</code>, but inside the IPv6 address space.  </p> <pre><code>UI_IP = \"::ffff:172.17.0.1\"\n</code></pre> <p>The above change will ensure that your CSF web interface is not accessible via your public IP address. We're going to allow access to it through our docker network and domain name.</p> <p> </p> <p>Next, we need to edit the Traefik config files to add a few things:</p> <ul> <li>Middleware</li> <li>Routers</li> <li>Entrypoints</li> <li>Services</li> </ul> <p></p> <p>We will also define Middleware, which adds an extra layer of security to the CSF web interface.  Users must pass through this middleware before they can successfully access the CSf web interface.</p> What Is Middleware? <p>Middleware allow you to adjust or filter requests before they reach your service, or to modify responses before they are sent back to the client.  </p> <p>Traefik provides a wide range of middleware: some modify requests or headers, others handle redirections, add authentication, apply access controls, and more.  </p> <p>Adding middleware for Traefik is completely optional. The middleware listed below offer additional security to help ensure that nobody can access your CSF web interface.</p> <ul> <li><code>authentik:</code> middleware requires that you have Authentik installed on your server. If you do not wish to use this app for authentication, you can skip implementing this.</li> <li><code>geoblock:</code> middleware requires that you install the Traefik plugin Geoblock before it will function properly.</li> <li><code>whitelist:</code> middleware is built into Traefik and does not require any additional plugins. It works out-of-the-box.</li> </ul> <p></p> <p> Full Traefik documentation for middleware can be found here.</p> <p></p> <p>In the two code block tabs below, we give the code that you should add to two important Traefik config files:</p> <ul> <li><code>dynamic.yml</code>: Traefik's dynamic configuration file</li> <li><code>traefik.yml</code>: Traefik's static configuration file</li> </ul> <p></p> dynamic.yml (Traefik Dynamic File) traefik.yml (Traefik Static File) <p>The code contained within this codeblock should go inside your Traefik dynamic file, usually named <code>dynamic.yml</code>.</p> <pre><code># #\n#   Protocol \u203a http\n# #\n\nhttp:\n\n    # #\n    #   http \u203a Middleware\n    # #\n\n    middlewares:\n\n        # #\n        #   Middleware \u203a Http redirect\n        #   Redirect http to https\n        # #\n\n        https-redirect:\n            redirectScheme:\n                scheme: \"https\"\n                permanent: true\n\n        # #\n        #   Middleware \u203a Authentik\n        # #\n\n        authentik:\n            forwardauth:\n                address: http://authentik-server:9000/outpost.goauthentik.io/auth/traefik\n                trustForwardHeader: true\n                authResponseHeaders:\n                    - X-authentik-username\n                    - X-authentik-groups\n                    - X-authentik-email\n                    - X-authentik-name\n                    - X-authentik-uid\n                    - X-authentik-jwt\n                    - X-authentik-meta-jwks\n                    - X-authentik-meta-outpost\n                    - X-authentik-meta-provider\n                    - X-authentik-meta-app\n                    - X-authentik-meta-version\n\n        # #\n        #   Middleware \u203a Geoblock\n        # #\n\n        geoblock:\n            plugin:\n                GeoBlock:\n                    allowLocalRequests: \"true\"\n                    allowUnknownCountries: \"false\"\n                    blackListMode: \"false\"\n                    api: https://get.geojs.io/v1/ip/country/{ip}\n                    ipGeolocationHttpHeaderField: \"Cf-Ipcountry\"\n                    xForwardedFor: \"X-Forwarded-For\"\n                    apiTimeoutMs: \"150\"\n                    cacheSize: \"15\"\n                    addCountryHeader: \"true\"\n                    forceMonthlyUpdate: \"true\"\n                    logAllowedRequests: \"true\"\n                    logApiRequests: \"true\"\n                    logLocalRequests: \"true\"\n                    silentStartUp: \"false\"\n                    unknownCountryApiResponse: nil\n                    countries:\n                        - US\n\n        # #\n        #   Middleware \u203a IP White/Allow List\n        # #\n\n        whitelist:\n            ipAllowList:\n                sourceRange:\n                    - \"127.0.0.0/8\"\n                ipStrategy:\n                    excludedIPs:\n                        # Cloudflare IP List\n                        # These will be ignored and the next IP in line will be checked\n                        - 173.245.48.0/20\n                        - 103.21.244.0/22\n                        - 103.22.200.0/22\n                        - 103.31.4.0/22\n                        - 141.101.64.0/18\n                        - 108.162.192.0/18\n                        - 190.93.240.0/20\n                        - 188.114.96.0/20\n                        - 197.234.240.0/22\n                        - 198.41.128.0/17\n                        - 162.158.0.0/15\n                        - 104.16.0.0/13\n                        - 104.24.0.0/14\n                        - 172.64.0.0/13\n                        - 131.0.72.0/22\n                        - 2400:cb00::/32\n                        - 2606:4700::/32\n                        - 2803:f800::/32\n                        - 2405:b500::/32\n                        - 2405:8100::/32\n                        - 2a06:98c0::/29\n                        - 2c0f:f248::/32\n\n    # #\n    #   http \u203a Routers\n    # #\n\n    routers:\n        csf-http:\n            service: \"csf\"\n            rule: \"Host(`csf.domain.com`)\" # (1)!\n            entryPoints:\n                - \"http\" # (2)!\n            middlewares:\n                - https-redirect@file # (3)!\n\n        csf-https:\n            service: \"csf\"\n            rule: \"Host(`csf.domain.com`)\" # (4)!\n            entryPoints:\n                - \"https\" # (5)!\n            middlewares:\n                - authentik@file # (6)!\n                - whitelist@file # (7)!\n                - geoblock@file # (8)!\n            tls:\n                certResolver: cloudflare # (9)!\n                domains:\n                    - main: \"domain.com\"\n                      sans:\n                          - \"*.domain.com\"\n\n    # #\n    #   http \u203a Services\n    # #\n\n    services:\n        csf:\n            loadBalancer:\n                servers:\n                    - url: \"https://172.17.0.1:1025/\" # (10)!\n</code></pre> <ol> <li> The <code>subdomain.domain.ext</code> you will use to access the      CSF web interface over the insecure <code>http</code> protocol. Required</li> <li> Defines the Traefik entrypoint that this Docker      container will use for the insecure <code>http</code> protocol routed through <code>csf-http</code>.      This entrypoint is defined in the Traefik <code>traefik.yml</code> static file. Traefik entrypoints docs Required</li> <li> This middleware ensures that any connections made over      the insecure <code>http</code> protocol to the router <code>csf-http</code> are automatically redirected to the secure <code>https</code> (SSL) protocol     router <code>csf-https</code>.      This middleware is defined in the Traefik <code>dynamic.yml</code> dynamic file. Required</li> <li> The <code>subdomain.domain.ext</code> you will use to access the CSF      web interface over the secure <code>https</code> protocol. Required</li> <li> Defines the Traefik entrypoint that this Docker      container will use for the secure <code>https</code> protocol.     This entrypoint is defined in the Traefik <code>traefik.yml</code> static file. Traefik entrypoints docs Required</li> <li> Specifies the middleware <code>Authentik</code> when a user attempts      to access the CSF web interface over the secure <code>https</code> protocol. With this middleware, the user must authenticate through <code>Authentik</code> before proceeding and gaining access to      the web interface. This middleware is defined in the Traefik <code>dynamic.yml</code> dynamic file. Traefik middleware <code>Authentik</code> docs Optional</li> <li> Specifies the middleware <code>IP Whitelist</code> when a user      attempts to access the CSF web interface over the secure <code>https</code> protocol. With this middleware, only users connecting from whitelisted IP addresses are allowed to access the web interface. This middleware is defined in the Traefik <code>dynamic.yml</code> dynamic file. Traefik middleware <code>IPAllowList</code> docs Optional</li> <li> Specifies the middleware <code>Geo-block</code> when a user      attempts to access the CSF web interface over the secure <code>https</code> protocol. With this middleware, users from blacklisted geographical locations are denied access to the web interface. This middleware is defined in the Traefik <code>dynamic.yml</code> dynamic file. Traefik middleware <code>Geoblock Plugin</code> docs Optional</li> <li> If you purchased a domain name, you can configure which     certificate resolver you generate SSL certificate from.      view <code>certResolver</code> docs Optional</li> <li> This line defines the Traefik <code>service</code> / <code>loadbalancer</code> rules.      <code>ip</code> is the IP address assigned to your Traefik container through your Docker network. In our example, Traefik is assigned to      <code>172.17.0.1</code>. You can also use the Traefik container name instead of the IP. <code>port</code> should be set to the port assigned to the ConfigServer Firewall web interface. This is defined by the <code>UI_PORT</code>      setting in <code>/etc/csf/csf.conf</code>. In our example, we use <code>1025</code>. view <code>loadbalancer</code> docs Required</li> </ol> <p>After adding the above lines to your Traefik <code>dynamic.yml</code>, you will also need to update the Traefik static configuration file, usually named <code>traefik.yml</code>.  </p> <p>The static file defines key settings such as the file provider, the entrypoints used to access your web service, and any plugins that Traefik should load.</p> <p>The code contained within this codeblock should go inside your Traefik static file, usually named <code>traefik.yml</code>.</p> <pre><code># #\n#   Global\n# #\n\nglobal:\n    checkNewVersion: false\n    sendAnonymousUsage: false\n\n# #\n#   Logs\n#   \n#   filePath must match volume mounted in docker-compose.yml\n# #\n\nlog:\n    level: DEBUG\n    format: \"common\"\n\n# #\n#   Access Logs\n#   \n#   filePath must match volume mounted in docker-compose.yml\n# #\n\naccessLog:\n    filePath: \"/var/log/traefik/access.log\"\n\n# #\n#   Api\n# #\n\napi:\n    dashboard: true\n    insecure: true\n    debug: true\n\n# #\n#   Entry Points\n# #\n\nentryPoints:\n\n    # #\n    #   Port \u203a HTTP\n    #   \n    #   *trustedIps     : List of Cloudflare Trusted IP's above for HTTPS requests\n    # #\n\n    http:\n        address: :80\n        forwardedHeaders:\n            trustedIPs: &amp;trustedIps\n                # Cloudlare Public IP List &gt; Start &gt; for HTTP requests, remove this if you don't use it; https://cloudflare.com/de-de/ips/\n                - 103.21.244.0/22\n                - 103.22.200.0/22\n                - 103.31.4.0/22\n                - 104.16.0.0/13\n                - 104.24.0.0/14\n                - 108.162.192.0/18\n                - 131.0.72.0/22\n                - 141.101.64.0/18\n                - 162.158.0.0/15\n                - 172.64.0.0/13\n                - 173.245.48.0/20\n                - 188.114.96.0/20\n                - 190.93.240.0/20\n                - 197.234.240.0/22\n                - 198.41.128.0/17\n                - 2400:cb00::/32\n                - 2606:4700::/32\n                - 2803:f800::/32\n                - 2405:b500::/32\n                - 2405:8100::/32\n                - 2a06:98c0::/29\n                - 2c0f:f248::/32\n        http:\n            redirections:\n                entryPoint:\n                    to: https\n                    scheme: https\n\n    # #\n    #   Port \u203a HTTPS\n    #   \n    #   *trustedIps     : List of Cloudflare Trusted IP's above for HTTPS requests\n    # #\n\n    https:\n        address: :443\n        http3: {}\n        forwardedHeaders:\n            trustedIPs: *trustedIps\n        transport:\n            keepAliveMaxRequests: 0\n            keepAliveMaxTime: 0s\n            lifeCycle:\n              requestAcceptGraceTimeout: 0\n              graceTimeOut: 120s\n            respondingTimeouts:\n              readTimeout: 0\n              writeTimeout: 0\n              idleTimeout: 0\n\n# #\n#   Plugins\n# #\n\nexperimental:\n    plugins:\n        GeoBlock:\n            moduleName: \"github.com/PascalMinder/geoblock\"\n            version: \"v0.2.8\"\n\n# #\n#   Providers\n#   \n#   file:\n#       filename: must match volume mounted in docker-compose.yml\n#   \n#   docker:\n#       exposedByDefault = true\n#       all docker-compose.yml files will automatically create a new traefik provider. \n#   \n#       this means if you are using file provider in dynamic file, each container \n#       will show up twice. x1 @docker and x1 @file\n#   \n#       if exposedByDefault = false, you must manually add `trafik.enable=true` to each container in the docker-compose.yml\n# #\n\nproviders:\n    docker:\n        endpoint: \"unix:///var/run/docker.sock\"\n        exposedByDefault: false\n        network: traefik\n        watch: true\n    file:\n        filename: \"/etc/traefik/dynamic.yml\"\n        watch: true\n</code></pre> <p></p> <p>In the code block above, we attached multiple Traefik middlewares <code>routers</code>:  </p> <ul> <li>IP AllowList<ul> <li>Restrict access to the CSF web interface by whitelisted IP addresses.</li> <li>This middleware is included in Traefik; no additional plugins require being downloaded.</li> </ul> </li> <li>Authentik Middleware<ul> <li>Require authentication through Authentik before allowing access.  </li> </ul> </li> <li>Geoblocking<ul> <li>Restrict access based on Geographical location</li> </ul> </li> </ul> <p></p> <p></p>", "tags": ["usage", "configure", "integration", "traefik"]}, {"location": "install/traefik/#restart-traefik", "title": "Restart Traefik", "text": "<p>Once you configure these changes in Traefik, you can restart your Traefik docker container. The command for that depends on how you set up the container. If you used <code>docker-compose.yml</code>, you can cd into the folder with the <code>docker-compose.yml</code> file and then execute:</p> <pre><code>docker compose down &amp;&amp; docker compose up -d\n</code></pre> <p></p> <p></p>", "tags": ["usage", "configure", "integration", "traefik"]}, {"location": "install/traefik/#allow-traefik-container-ip", "title": "Allow Traefik Container IP", "text": "<p>The last step in allowing CSF's web interface to pass through Traefik is to add the IP address assigned to your Traefik container to CSF's allow file <code>/etc/csf/csf.allow</code>.  </p>  /etc/csf/csf.allow <pre><code>172.18.0.2      # Traefik container IP\n</code></pre> <p></p> <p>You MUST do this, otherwise when you attempt to access the CSF admin interface, you will get the browser error:</p> <pre><code>Gateway Timeout\n</code></pre> <p></p> <p></p>", "tags": ["usage", "configure", "integration", "traefik"]}, {"location": "install/traefik/#conclusion", "title": "Conclusion", "text": "<p>If you do all of the steps above, you should now be able to access the CSF web interface through your browser, with the added protection of Traefik. This will allow you to access the web interface from other locations, implement middleware such as IP whitelisting, and not expose the CSF web interface port to the world. You should NOT be allowing any connection to access the web interface, even if they don't have the username and password to sign in.</p> <p></p> <p></p>", "tags": ["usage", "configure", "integration", "traefik"]}, {"location": "install/traefik/#next-steps", "title": "Next Steps", "text": "<p>Select what documentation you would like to proceed with next ...</p> <ul> <li> <p> Authentik Integration</p> <p>Enhance the security of CSF by placing it behind the Authentik identity  provider using a forward proxy. </p> <p>This ensures that all traffic to the CSF web interface passes through Authentik,  giving you centralized control over authentication and access.</p> <p>With this setup, CSF is protected by modern authentication methods such as passwords, two-factor authentication (2FA), or passkeys.</p> </li> <li> <p> Geographical IP Block Integration</p> <p>Configure geographical restrictions in CSF to whitelist or blacklist specific regions from accessing your server.</p> <p>This chapter covers enabling the GeoIP blocklist feature using third-party services such as MaxMind (requires an API key), db-ip, ipdeny, or iptoasn.</p> <p>These services allow you to control access based on location while keeping your server secure.</p> </li> </ul> <p> </p>", "tags": ["usage", "configure", "integration", "traefik"]}, {"location": "install/uninstall/", "title": "Install \u203a Uninstall CSF", "text": "", "tags": ["uninstall"]}, {"location": "install/uninstall/#uninstall-csf", "title": "Uninstall CSF", "text": "<p>This section of the guide explains how to uninstall ConfigServer Firewall and the LFD daemon from your server entirely.</p> <p></p> <p></p>", "tags": ["uninstall"]}, {"location": "install/uninstall/#uninstall", "title": "Uninstall", "text": "If you have decided that you'd like to part ways with CSF, uninstalling the application is extremely easy as it only requires you to run the uninstall script. Pick one of the two options listed below: <p> Runs <code>uninstall.sh</code>  uses shebang interpreter  requires executable <code>+x</code> permission</p> <p> Runs <code>uninstall.sh</code>  uses <code>sh</code> shell  executable permission not required</p> <p></p> Dependencies &amp; packages not removed <p>Running the CSF uninstaller will not remove extra dependencies such as <code>perl</code>, <code>ipset</code>, or <code>gd-library</code>. You must uninstall these yourself.</p> <p></p>  Option 1 Option 2 <pre><code># set executable permission\nsudo chmod +x /etc/csf/uninstall.sh\n\n# run uninstall script\n/etc/csf/uninstall.sh\n</code></pre> <pre><code># run uninstall script\nsh /etc/csf/uninstall.sh\n</code></pre> <p></p> <p>This will perform a series of actions including:</p> <ul> <li> Stop and unregister the services <code>csf.service</code> and <code>lfd.service</code></li> <li> Delete the service files within <code>/usr/lib/systemd/system/</code></li> <li> Reload the systemctl daemon</li> <li> Delete binaries stored in <code>/usr/sbin/</code></li> <li> Delete main folder <code>/etc/csf</code></li> <li> Delete pre and post scripts from <code>/usr/local/csf</code> and <code>/usr/local/include/csf</code></li> <li> Delete temp allow/ban lists from <code>/var/lib/csf</code></li> <li> Delete man pages from <code>/usr/local/man/</code></li> <li> Delete initialzation scripts in <code>/sbin/chkconfig</code> and <code>/etc/init.d/</code></li> <li> Delete logs stored in <code>/etc/logrotate.d/</code></li> <li> Delete WHM / cPanel integration scripts from <code>/usr/local/cpanel/whostmgr/</code> and <code>/usr/local/cpanel/Cpanel/</code></li> <li> Delete Interworx integration scripts from <code>/usr/local/interworx/plugins/</code></li> <li> Delete CWP integration scripts from <code>/usr/local/cwpsrv/</code></li> <li> Delete CyberPanel integration scripts from <code>/usr/local/CyberCP/</code> and <code>/home/cyberpanel/plugins</code></li> <li> Delete VestaCP integration scripts from <code>/usr/local/vesta</code></li> <li> Delete DirectAdmin integration scripts from <code>/usr/local/directadmin/data/admin/services.status</code></li> <li> Delete crons registered in <code>/etc/cron.d/</code></li> </ul> <p></p> <p></p>", "tags": ["uninstall"]}, {"location": "install/uninstall/#clean-iptables", "title": "Clean Iptables", "text": "<p>Uninstalling CSF does not clean up your existing iptables. These rulles will still sit in iptables until you do one of two things:</p> <ol> <li>Restart your server</li> <li>Manually wipe your iptables</li> </ol> <p></p> <p>If you would like to clean your iptables and remove any existing firewall rules from your server, you can run the following commands in order:</p> <pre><code>sudo iptables -F\nsudo iptables -X\nsudo iptables -t nat -F\nsudo iptables -t nat -X\nsudo iptables -t mangle -F\nsudo iptables -t mangle -X\n</code></pre> <p></p> <p>An optional step is to verify that your iptables chains are not restricting incoming or outgoing connections. You can modify the state of your chains using the commands below.</p> Danger! This will leave your server exposed <p>Setting all three primary iptable chains to <code>ACCEPT</code> will remove all firewall protection from your server. Only do this if you fully understand the risks and truly intend to leave your server unprotected.</p> <p>Even if you\u2019ve removed CSF from your system, you still have the option of using iptables as a standalone firewall.  </p> <pre><code>sudo iptables -P INPUT ACCEPT\nsudo iptables -P FORWARD ACCEPT\nsudo iptables -P OUTPUT ACCEPT\n</code></pre> <p></p> <p>You can now confirm if your iptables are empty and your chains have the default policy <code>ACCEPT</code>:</p> <pre><code>sudo iptables -L -n -v\n</code></pre> <p></p> <p>You should see the following:</p> <pre><code>Chain INPUT (policy ACCEPT 0 packets, 0 bytes)\n pkts bytes target     prot opt in     out     source               destination         \n\nChain FORWARD (policy ACCEPT 0 packets, 6508 bytes)\n pkts bytes target     prot opt in     out     source               destination         \n\nChain OUTPUT (policy ACCEPT 0 packets, 0 bytes)\n pkts bytes target     prot opt in     out     source               destination  \n</code></pre> <p></p> <p>No IP addresses should be listed under each chain, and you should see <code>policy: ACCEPT</code> to the right of each chain name.</p> <p></p> <p></p>", "tags": ["uninstall"]}, {"location": "install/uninstall/#docker-users", "title": "Docker Users", "text": "<p>If you are running docker on your server and you remove CSF; you may notice that your docker containers are no longer accessible. You may also receive errors in your terminal if you attempt to start up or shut down any of your containers, such as the following:</p> <pre><code>docker: Error response from daemon: driver failed programming\n   external connectivity on endpoint portainer1 (XXX):\n   (iptables failed: iptables --wait -t filter -A DOCKER ! -i docker0 -o docker0 -p tcp -d 172.17.0.2 --dport 9000 -j ACCEPT:\n   iptables: No chain/target/match by that name.\n</code></pre> <p></p> To correct these errors, ensure you complete the steps: <ul> <li>Clean Iptables</li> <li>Restart Service</li> </ul> <p></p>", "tags": ["uninstall"]}, {"location": "install/uninstall/#restart-service", "title": "Restart Service", "text": "<p>After you have completed all other steps, simply give your docker service a restart.</p>  Command <pre><code>sudo systemctl restart docker\n</code></pre> <p> </p>", "tags": ["uninstall"]}, {"location": "install/webui/", "title": "Install \u203a Enable CSF Web Interface", "text": "", "tags": ["install", "setup"]}, {"location": "install/webui/#enable-web-interface", "title": "Enable Web Interface", "text": "<p>ConfigServer Firewall provides an optional web-based interface that lets you manage CSF from your browser. With it, you can configure settings, and blacklist or whitelist IPs without using commands or editing configuration files manually. If you choose not to enable the interface, all management must be done directly through the CSF config files, or by running commands through your shell.</p> <p></p> <p></p>", "tags": ["install", "setup"]}, {"location": "install/webui/#setup", "title": "Setup", "text": "<p>This section covers the initial setup of the CSF web interface with only the essential requirements. Follow these steps to get the web interface up and running quickly.</p> <p></p>", "tags": ["install", "setup"]}, {"location": "install/webui/#step-1-install-perl-modules", "title": "Step 1: Install Perl Modules", "text": "<p>CSF's web interface requires several Perl modules. If you followed our dependencies guide, these modules may already be installed. If not, run one of the commands below on your server.</p> <p></p>", "tags": ["install", "setup"]}, {"location": "install/webui/#installation-options", "title": "Installation Options", "text": "<p>You only need to choose one of the methods below. We provide multiple options for your convenience:</p> <ul> <li> Debian/Ubuntu \u203a using <code>apt-get</code></li> <li> CentOS/RHEL \u203a using <code>yum</code> or <code>dnf</code></li> <li> Perl CPAN \u203a using the stock <code>cpan</code> client</li> <li> Perl CPANM \u203a using <code>cpanm</code> (recommended for faster, non-interactive installs)</li> </ul> <p></p>", "tags": ["install", "setup"]}, {"location": "install/webui/#dependency-levels", "title": "Dependency Levels", "text": "<p>Each installation method below provides two options:</p> <code>Full Dependencies</code> <p>Installs all modules required to run every aspect of CSF.</p> <code>Minimum Dependencies</code> <p>Installs only the core modules needed for the web interface to function.</p> <p></p>  Debian/Ubuntu (apt-get) CentOS/RHEL (yum/dnf) Perl (CPAN) Perl (CPANMINUS) <pre><code># #\n#   Full Dependencies\n# #\n\nsudo apt-get update &amp;&amp; sudo apt-get install -y \\\n  dnsutils \\\n  ipset \\\n  libcrypt-ssleay-perl \\\n  libgd-graph-perl \\\n  libio-socket-inet6-perl \\\n  libio-socket-ssl-perl \\\n  libjson-perl \\\n  liblwp-protocol-https-perl \\\n  libnet-libidn-perl \\\n  libnet-ssleay-perl \\\n  libsocket6-perl \\\n  libtime-hires-perl \\\n  libwww-perl \\\n  perl \\\n  sendmail \\\n  wget\n\n# #\n#   Minimum Dependencies\n# #\n\nsudo apt-get update &amp;&amp; sudo apt-get install -y \\\n  ipset \\\n  libcrypt-ssleay-perl \\\n  libio-socket-inet6-perl \\\n  libio-socket-ssl-perl \\\n  libnet-libidn-perl \\\n  libsocket6-perl \\\n  perl \\\n  wget\n</code></pre> <pre><code># #\n#   Full Dependencies\n# #\n\nsudo yum makecache &amp;&amp; sudo yum install -y \\\n  bind-utils \\\n  ipset \\\n  net-tools \\\n  perl \\\n  perl-Crypt-SSLeay \\\n  perl-GDGraph \\\n  perl-IO-Socket-INET6 \\\n  perl-IO-Socket-SSL.noarch \\\n  perl-JSON \\\n  perl-libwww-perl \\\n  perl-LWP-Protocol-https.noarch \\\n  perl-Math-BigInt \\\n  perl-Net-LibIDN2 \\\n  perl-Net-SSLeay \\\n  perl-Socket \\\n  perl-Socket6 \\\n  perl-Time-HiRes \\\n  sendmail \\\n  wget\n\n# #\n#   Minimum Dependencies\n# #\n\nsudo yum makecache &amp;&amp; sudo yum install -y \\\n  ipset \\\n  perl \\\n  perl-IO-Socket-INET6 \\\n  perl-IO-Socket-SSL.noarch \\\n  perl-libwww-perl \\\n  perl-Net-LibIDN2 \\\n  perl-Net-SSLeay \\\n  perl-Socket6 \\\n  wget\n</code></pre> <pre><code># #\n#   Debian/Ubuntu\n# #\n\nsudo apt-get update &amp;&amp; sudo apt-get install -y perl build-essential\n\n# #\n#   CentOS/RHEL\n# #\n\nsudo yum makecache &amp;&amp; sudo yum groupinstall 'Development Tools' &amp;&amp; sudo yum install -y perl cpan\n\n# #\n#   Full Dependencies\n# #\n\nsudo cpan -i \\\n  Crypt::SSLeay \\\n  Digest::MD5 \\\n  Digest::SHA \\\n  Email::Valid \\\n  GD::Graph \\\n  IO::Socket::INET6 \\\n  IO::Socket::SSL \\\n  JSON \\\n  LWP \\\n  LWP::Protocol::https \\\n  LWP::UserAgent \\\n  Net::LibIDN \\\n  Net::SSLeay \\\n  Socket \\\n  Socket6 \\\n  Time::HiRes\n\n# #\n#   Minimum Dependencies\n# #\n\nsudo cpan -i \\\n  IO::Socket::INET6 \\\n  IO::Socket::SSL \\\n  Net::LibIDN \\\n  Net::SSLeay \\\n  Socket6\n</code></pre> <pre><code># #\n#   Debian/Ubuntu\n# #\n\nsudo apt-get update &amp;&amp; sudo apt-get install -y perl cpanminus\n\n# #\n#   CentOS/RHEL\n# #\n\nsudo yum makecache &amp;&amp; sudo yum install -y perl perl-App-cpanminus\n\n# #\n#   Full Dependencies\n# #\n\nsudo cpanm \\\n  IO::Socket::SSL \\\n  IO::Socket::INET6 \\\n  Socket6 \\\n  Net::LibIDN \\\n  LWP \\\n  LWP::Protocol::https \\\n  LWP::UserAgent \\\n  JSON \\\n  Net::SSLeay \\\n  Crypt::SSLeay \\\n  Digest::MD5 \\\n  Digest::SHA \\\n  Email::Valid \\\n  GD::Graph \\\n  Time::HiRes \\\n  Socket\n\n# #\n#   Minimum Dependencies\n# #\n\nsudo cpanm \\\n  IO::Socket::SSL \\\n  Net::SSLeay \\\n  Net::LibIDN \\\n  IO::Socket::INET6 \\\n  Socket6\n</code></pre> <p> </p>", "tags": ["install", "setup"]}, {"location": "install/webui/#step-2-enable-web-ui", "title": "Step 2: Enable Web UI", "text": "<p>To enable CSF web interface, edit the file <code>/etc/csf/csf.conf</code> in a text editor:</p> <pre><code>sudo nano /etc/csf/csf.conf\n</code></pre> <p></p> <p>We need to update the following values. Click  to see information about each setting.</p> /etc/csf/csf.conf<pre><code># #\n#   1 to enable, 0 to disable web ui \n# #\n\nUI = \"1\" # (1)!\n\n# #\n#   Set port for web UI. The default port is 6666, but\n#   I change this to 1025 to easy access. Default port create some issue\n#   with popular chrome and firefox browser (in my case) \n# #\n\nUI_PORT = \"1025\" # (2)!\n\n# #\n#   Leave blank to bind to all IP addresses on the server \n# #\n\nUI_IP = \"\" # (3)!\n\n# #\n#   Set username for authentication \n# #\n\nUI_USER = \"admin\" # (4)!\n\n# #\n#   Set a strong password for authentication \n# #\n\nUI_PASS = \"admin\" # (5)!\n</code></pre> <ol> <li> Defines if the CSF web interface is enabled or not. Will be     accessible via your web browser.     Required Values: <code>0</code>, <code>1</code></li> <li> Defines the port to assign for the CSF web interface.     This should be set to a value of <code>1023</code> or higher.     Required Values: <code>&gt; 1023</code></li> <li> Defines the IP address to bind to the CSF web interface.     If you plan to route this through Traefik, you should set this to your docker subnet such as <code>::ffff:172.17.0.1</code>.     Leave blank if you want to bind to all IP addresses on server. Required Values: <code>blank</code>, <code>::IPv6:IPv4</code></li> <li> Defines the username that will be required in order to     sign into the CSF web interface. This should be alphabetic or numerical characters.     Required Values: <code>A-Z,a-z,0-9</code></li> <li> Defines the password that will be required in order to     sign into the CSF web interface. This should alphabetic, numerical, or special characters.     Required Values: <code>A-Z,a-z,0-9,!@#$%^&amp;*()-_=+</code></li> </ol> <p></p> <p>Save and exit. Then open the file <code>/etc/csf/ui/ui.allow</code> and add your client IP to allow access to the CSF web interface. Ensure you only add one IP address per line:</p>  /etc/csf/ui/ui.allow Command <p>This is an example of how your <code>ui.allow</code> file should look.</p> <pre><code>127.0.0.1           # localhost\n10.10.0.6           # example LAN ip\n40.159.100.6        # example WAN ip\n</code></pre> <p>If you want to add a new IP without having to open <code>ui.allow</code>, run the following:</p> <pre><code>echo \"YOUR_PUBLIC_IP_ADDRESS\" | sudo tee -a /etc/csf/ui/ui.allow\n</code></pre> <p></p> <p>If you opt to define an IP address to CSF by setting <code>UI_IP</code>, you must ensure you whitelist the gateway address in your <code>/etc/csf/ui/ui.allow</code></p>  /etc/csf/csf.conf /etc/csf/ui/ui.allow <pre><code># #\n#   Leave blank to bind to all IP addresses on the server \n# #\n\nUI_IP = \"::ffff:172.17.0.1\"\n</code></pre> <pre><code>172.17.0.1          # CSF assigned IP\n</code></pre> <p></p> <p>The CSF web interface works under the <code>lfd daemon</code> LFD. We need to restart the LFD on your system using the command:</p> <pre><code>sudo service lfd restart\n</code></pre> <p></p> <p>In order to gain access to the online admin panel; you must ensure LFD and CSF are running. You can check by running the commands:</p> <pre><code>sudo service lfd status\n</code></pre> <p></p> <p>You should see the following:</p> <pre><code>\u25cf lfd.service - ConfigServer Security &amp; Firewall - lfd\n     Loaded: loaded (/lib/systemd/system/lfd.service; enabled; preset: enabled)\n     Active: active (running) since Mon 2025-19-21 11:59:38 UTC; 1s ago\n    Process: 46393 ExecStart=/usr/sbin/lfd (code=exited, status=0/SUCCESS)\n   Main PID: 46407 (lfd - sleeping)\n      Tasks: 8 (limit: 4613)\n     Memory: 121.7M\n        CPU: 2.180s\n     CGroup: /system.slice/lfd.service\n</code></pre> <p></p> <p>Next, confirm CSF service is also running:</p> <pre><code>sudo service csf status\n</code></pre> <p></p> <p>Check the output for any errors; which there should be none.</p> <pre><code>\u25cf csf.service - ConfigServer Security &amp; Firewall - csf\n     Loaded: loaded (/lib/systemd/system/csf.service; enabled; preset: enabled)\n     Active: active (exited) since Mon 2024-08-05 12:04:09 UTC; 1s ago\n    Process: 46916 ExecStart=/usr/sbin/csf --initup (code=exited, status=0/SUCCESS)\n   Main PID: 46916 (code=exited, status=0/SUCCESS)\n        CPU: 12.692s\n</code></pre> <p></p> <p>If you see the following error; you must install <code>ipset</code> on your system:</p> <pre><code>csf[46313]: open3: exec of /sbin/ipset flush failed: No such file or directory at /usr/sbin/csf line 5650.\n</code></pre> <p></p>  Debian/Ubuntu (apt-get) CentOS/RHEL (yum/dnf) <pre><code>sudo apt-get update \nsudo apt-get install -y ipset\n</code></pre> <pre><code>sudo yum makecache\nsudo yum install -y ipset\n</code></pre> <p></p> <p>Alternatively, you can restart <code>CSF</code> and <code>LFD</code> at the same time by running:</p> <pre><code>sudo csf -ra\n</code></pre> <p> </p>", "tags": ["install", "setup"]}, {"location": "install/webui/#step-3-access-web-ui", "title": "Step 3: Access Web UI", "text": "<p>Access the CSF interface in your browser with the specified IP and port. For these docs; we used port <code>1025</code>. </p> <pre><code>https://127.0.0.1:1025\n</code></pre> <p></p> Default Web Interface Username &amp; Password <p>You cannot keep the web interface username and password defaulted to <code>admin</code>; you will get an error that the credentials must be changed within <code>/etc/csf/csf.conf</code>.</p> <p>Ggo back to the <code>/etc/csf/csf.conf</code> set <code>UI_USER</code> and <code>UI_PASS</code> to something else.</p> <p></p> CSF Login Interface <p></p> <p>After successful login, you should see the following:</p> CSF Main Dashboard <p></p> <p>If you try to access the CSF web interface in your browser and you get an error similar to the following:</p> <pre><code>Secure Connection Failed\n\nAn error occurred during a connection to 172.17.0.1:1025. PR_CONNECT_RESET_ERROR\n\nError code: PR_CONNECT_RESET_ERROR\n\n    The page you are trying to view cannot be shown because the authenticity of the received data could not be verified.\n    Please contact the website owners to inform them of this problem.\n</code></pre> <p></p> <p>Open your lfd logs at <code>/var/logs/lfd.log</code> and see if any messages state that you attempted to access the web interface, but were denied access. The message will be similar to the following:</p> <pre><code>Oct  2 02:55:38 configserver lfd[42635]: UI: Access attempt from an IP not in /etc/csf/ui/ui.allow - denied [127.0.0.1]\n</code></pre> <p></p> <p>An error like above means that you have not whitelisted the correct IP in your <code>/etc/csf/ui/ui.allow</code> file. You must whitelist the correct IP before you'll be able to access the web interface.</p> <p></p> <p>We will cover how to actually use the CSF web interface in another section. As of right now you should at least be able to access the web interface by going to <code>http://127.0.0.1:1025</code> in your browser. Or whatever IP and port you assigned within the <code>/etc/csf/csf.conf</code>.</p> <p></p> <p></p>", "tags": ["install", "setup"]}, {"location": "install/webui/#conclusion", "title": "Conclusion", "text": "<p>By this point in the guide, you should have:</p> <ul> <li>CSF installed and functioning</li> <li>Access to the CSF web interface via an IP and port</li> </ul> <p>The next section will show you how to put the CSF web interface behind third-party apps such as Traefik Reverse Proxy and secure it with Authentik.  </p> <p>These steps are optional. They enhance the security of your web interface and help prevent unauthorized access, but you do not need to perform them to continue using CSF.</p> <p></p> <p></p>", "tags": ["install", "setup"]}, {"location": "install/webui/#next-steps", "title": "Next Steps", "text": "<p>Select what documentation you would like to proceed with next ...</p> <ul> <li> <p> Docker Integration</p> <p>This section explains how to run CSF and Docker together in the same  environment. By using CSF\u2019s integrated Docker mode and the included  Docker scripts, you can strengthen your server\u2019s security while  running your containers safely within a controlled setup.</p> <p>We\u2019ve provided a detailed set of instructions along with troubleshooting  guidance to help you resolve any issues that may arise during setup.</p> </li> <li> <p>Traefik Proxy Traefik Integration</p> <p>Protect your CSF installation by placing it behind a Traefik Reverse Proxy.</p> <p>This setup lets you filter and control traffic to the CSF web interface using Traefik\u2019s middleware, all with the added bonus that you do not need to expose or open the ports to your server.</p> <p>With middleware, you can whitelist your own IP for secure access and enforce geographic restrictions to allow or block traffic from specific countries.</p> </li> <li> <p> Authentik Integration</p> <p>Enhance the security of CSF by placing it behind the Authentik identity  provider using a forward proxy. </p> <p>This ensures that all traffic to the CSF web interface passes through Authentik,  giving you centralized control over authentication and access.</p> <p>With this setup, CSF is protected by modern authentication methods such as passwords, two-factor authentication (2FA), or passkeys.</p> </li> <li> <p> Usage Introduction</p> <p>If you don\u2019t plan to set up Traefik or Authentik with the CSF web interface,  you can skip ahead to the Usage section. </p> <p>The next chapter covers CSF\u2019s core features, basic configuration, available commands, folder structure, and everything you need to get started.</p> <p>You will be taken on a more detailed dive of how CSF can benefit you and what options you have for securing your server.</p> </li> </ul> <p> </p>", "tags": ["install", "setup"]}, {"location": "patcher/configure/", "title": "Patcher: Configure", "text": "", "tags": ["install", "patch"]}, {"location": "patcher/configure/#configure-patches", "title": "Configure Patches", "text": "<p>Before you run the downloaded patcher; there are several files you must open and edit. Do not run the patcher yet.</p> <p></p>", "tags": ["install", "patch"]}, {"location": "patcher/configure/#docker", "title": "Docker", "text": "<p>The Docker patch has a few settings that must be modified. To change these settings, open the file:</p> <pre><code>sudo nano /patch/docker.sh\n</code></pre> <p></p> <p>Find the following settings:</p> <pre><code># #\n\napp_dir_this_a=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" &amp;&gt; /dev/null &amp;&amp; pwd )\"     # current script full path\napp_dir_this_b=\"${PWD}\"                                                             # current script full path (alternative)\napp_file_this=$(basename \"$0\")                                                      # docker.sh (with ext)\napp_file_bin=\"${app_file_this%.*}\"                                                  # docker (without ext)\napp_pid=$BASHPID                                                                    # app pid\napp_title=\"ConfigServer Firewall - Docker Patch\"                                    # app title; displayed with --version\napp_about=\"Sets up your firewall rules to work with Docker and Traefik. \\n\"\\\n\"     This script requires that you have iptables installed on your system. \\n\"\\\n\"     The required packages will be installed if you do not have them.\"             # app about; displayed with --version\napp_ver=(\"14\" \"24\" \"0\")                                                             # current script version\n\n# #\n#   define &gt; configs\n</code></pre> <p></p> <p>The settings are outlined below:</p> Setting Description <code>DOCKER_INT</code> main docker network interface <code>CSF_FILE_ALLOW</code> Path to your <code>csf.allow</code> file <code>CSF_COMMENT</code> comment added to each new whitelisted docker ip <code>DEBUG_ENABLED</code> debugging / better logs <code>IP_CONTAINERS</code> list of ip address blocks you will be using for your docker setup. these blocks will be whitelisted through ConfigServer Firewall <p></p>", "tags": ["install", "patch"]}, {"location": "patcher/configure/#settings", "title": "Settings", "text": "<p>Each individual setting with a detailed description</p> <p></p>", "tags": ["install", "patch"]}, {"location": "patcher/configure/#docker_int", "title": "DOCKER_INT", "text": "<p>2.0.0 <code>docker0</code> </p> <p>The main docker visual bridge network name; this is usually <code>docker0</code>, however, it can be changed. You can find a list of these by running the command</p> <pre><code>ip link show\n</code></pre> Output <pre><code>4: docker0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc noqueue state DOWN mode DEFAULT group default \n    link/ether 01:af:fd:1a:a1:2f ard ff:ff:ff:ff:ff:ff\n</code></pre> <p> </p>", "tags": ["install", "patch"]}, {"location": "patcher/configure/#csf_file_allow", "title": "CSF_FILE_ALLOW", "text": "<p>2.0.0 <code>/etc/csf/csf.allow</code> </p> <p>The full path to your ConfigServer's <code>csf.allow</code> file. Each time an IP from one of your docker containers is detected, the IP will be whitelisted in ConfigServer Firewall.</p> docker.sh <pre><code>CSF_FILE_ALLOW=\"/etc/csf/csf.allow\"\n</code></pre> <p> </p>", "tags": ["install", "patch"]}, {"location": "patcher/configure/#csf_comment", "title": "CSF_COMMENT", "text": "<p>2.0.0 <code>Docker container whitelist</code> </p> <p>This is the comment that will be appended to each IP that is added to your ConfigServer's <code>allow.csf</code> whitelist file.</p> docker.shcsf.allow <pre><code>CSF_COMMENT=\"Docker container whitelist\"\n</code></pre> <pre><code>172.18.0.21 # Docker container whitelist - Fri Jun 7 11:43:00 2024\n172.18.0.12 # Docker container whitelist - Fri Jun 7 11:43:01 2024\n172.18.0.11 # Docker container whitelist - Fri Jun 7 11:43:01 2024\n</code></pre> <p> </p>", "tags": ["install", "patch"]}, {"location": "patcher/configure/#debug_enabled", "title": "DEBUG_ENABLED", "text": "<p>2.0.0 <code>false</code> </p> <p>If set <code>true</code>, additional information will be printed to terminal when the user executes <code>sudo csf -ra</code></p> docker.sh <pre><code>DEBUG_ENABLED=\"false\"\n</code></pre> <p> </p>", "tags": ["install", "patch"]}, {"location": "patcher/configure/#ip_containers", "title": "IP_CONTAINERS", "text": "<p>2.0.0 <code>172.17.0.0/16</code> </p> <p>A list of IP blocks that you use within docker for container assignment.</p> docker.sh <pre><code>IP_CONTAINERS=(\n    '172.17.0.0/16'\n)\n</code></pre> <p></p> <p></p>", "tags": ["install", "patch"]}, {"location": "patcher/configure/#openvpn", "title": "OpenVPN", "text": "<p>The OpenVPN patch has a few settings that must be modified. To change these settings, open the file:</p> <pre><code>sudo nano /patch/openvpn.sh\n</code></pre> <p></p> <p>Find the following settings:</p> <pre><code>ETH_ADAPTER=$(ip route | grep default | sed -e \"s/^.*dev.//\" -e \"s/.proto.*//\")\nTUN_ADAPTER=$(ip -br l | awk '$1 ~ \"^tun[0-9]\" { print $1}')\nIP_PUBLIC=$(curl -s ipinfo.io/ip)\nDEBUG_ENABLED=\"false\"\n\n# #\n#   list &gt; vpn ips\n#\n#   this is the IP pool assigned to a user who connects to your vpn server\n# #\n\nIP_POOL=(\n    '10.8.0.0/24'\n)\n</code></pre> <p></p> <p>The settings are outlined below:</p> Setting Description <code>ETH_ADAPTER</code> name of primary network adapter <code>TUN_ADAPTER</code> name of OpenVPN tunnel adapter <code>IP_PUBLIC</code> public IP to your server <code>DEBUG_ENABLED</code> debugging / better logs <code>IP_POOL</code> list of subnets assigned to your OpenVPN server <p></p>", "tags": ["install", "patch"]}, {"location": "patcher/configure/#settings_1", "title": "Settings", "text": "<p>Each individual setting with a detailed description</p> <p></p>", "tags": ["install", "patch"]}, {"location": "patcher/configure/#eth_adapter", "title": "ETH_ADAPTER", "text": "<p>2.0.0 <code>$(ip route | grep default | sed -e \"s/^.*dev.//\" -e \"s/.proto.*//\")</code> </p> <p>The name of your primary server network adapter. This is usually <code>eth*</code>, <code>enp*</code>, etc.</p> openvpn.sh <pre><code>ETH_ADAPTER=$(ip route | grep default | sed -e \"s/^.*dev.//\" -e \"s/.proto.*//\")\n</code></pre> <p></p> <p>The default value attempts to auto-detect your network adapter name, however, you can specify the name manually:</p> openvpn.sh <pre><code>ETH_ADAPTER=\"eth0\"\n</code></pre> <p></p> <p>You can usually find your main network adapter with the command:</p> TerminalOutput <pre><code>ifconfig\n</code></pre> <pre><code>eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500\n        inet XX.XX.XX.XX  netmask 255.255.248.0  broadcast XX.XX.XX.XX\n        inet6 ea24::a1bd:ef15:15a5:aae  prefixlen 64  scopeid 0x20&lt;link&gt;\n        ether 01:15:72:15:2a:ab  txqueuelen 1000  (Ethernet)\n        RX packets 101924006  bytes 383095603887 (383.0 GB)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 100519601  bytes 134852355384 (134.8 GB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\nlo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536\n        inet 127.0.0.1  netmask 255.0.0.0\n        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;\n        loop  txqueuelen 1000  (Local Loopback)\n        RX packets 7741770  bytes 2099091655 (2.0 GB)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 7741770  bytes 2099091655 (2.0 GB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n</code></pre> <p> </p>", "tags": ["install", "patch"]}, {"location": "patcher/configure/#tun_adapter", "title": "TUN_ADAPTER", "text": "<p>2.0.0 <code>$(ip -br l | awk '$1 ~ \"^tun[0-9]\" { print $1}')</code> </p> <p>The name of the primary OpenVPN tunnel adapter name. This is usually <code>tun*</code>.</p> openvpn.sh <pre><code>TUN_ADAPTER=$(ip -br l | awk '$1 ~ \"^tun[0-9]\" { print $1}')\n</code></pre> <p></p> <p>The default value attempts to auto-detect your tunnel adapter name, however, you can specify the tunnel name manually:</p> openvpn.sh <pre><code>TUN_ADAPTER=\"tun0\"\n</code></pre> <p></p> <p>You can usually find your main network adapter with the command:</p> TerminalOutput <pre><code>ifconfig\n</code></pre> <pre><code>tun0: flags=4305&lt;UP,POINTOPOINT,RUNNING,NOARP,MULTICAST&gt;  mtu 1500\n        inet 10.8.0.1  netmask 255.255.255.0  destination 10.8.0.1\n        inet6 fe80::d70f:d8a8:32ab:1292  prefixlen 64  scopeid 0x20&lt;link&gt;\n        unspec 00-00-00-00-00-00-00-00-00-00-00-00-00-00-00-00  txqueuelen 500  (UNSPEC)\n        RX packets 620722  bytes 134501334 (134.5 MB)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 1449168  bytes 1756905789 (1.7 GB)\n        TX errors 0  dropped 37128 overruns 0  carrier 0  collisions 0\n</code></pre> <p> </p>", "tags": ["install", "patch"]}, {"location": "patcher/configure/#ip_public", "title": "IP_PUBLIC", "text": "<p>2.0.0 <code>$(curl -s ipinfo.io/ip)</code> </p> <p>The public IP address of your server.</p> openvpn.sh <pre><code>IP_PUBLIC=$(curl -s ipinfo.io/ip)\n</code></pre> <p></p> <p>The default value attempts to auto-detect your public IP address, however, you can specify the ip manually:</p> openvpn.sh <pre><code>IP_PUBLIC=\"204.22.36.22\"\n</code></pre> <p></p> <p>There are a few ways that you can obtain your server's public IP address:</p> Method 1Method 2Method 3 <pre><code>wget -q -O - ipinfo.io/ip\n\n# 204.22.36.22\n</code></pre> <pre><code>sudo apt-get install lynx -y\nlynx -source ipinfo.io/ip\n\n# 204.22.36.22\n</code></pre> <pre><code>curl ipinfo.io/ip\n\n# 204.22.36.22\n</code></pre> <p> </p>", "tags": ["install", "patch"]}, {"location": "patcher/configure/#debug_enabled_1", "title": "DEBUG_ENABLED", "text": "<p>2.0.0 <code>false</code> </p> <p>If set <code>true</code>, additional information will be printed to terminal when the patch is ran.</p> docker.sh <pre><code>DEBUG_ENABLED=\"false\"\n</code></pre> <p> </p>", "tags": ["install", "patch"]}, {"location": "patcher/configure/#ip_pool", "title": "IP_POOL", "text": "<p>2.0.0 <code>10.8.0.0/24</code> </p> <p>A list of subnets assigned to your OpenVPN server.</p> docker.sh <pre><code>IP_POOL=(\n    '10.8.0.0/24'\n)\n</code></pre> <p> </p> <p></p>", "tags": ["install", "patch"]}, {"location": "patcher/download/", "title": "Patcher: Download", "text": "", "tags": ["install", "patch"]}, {"location": "patcher/download/#download-patches", "title": "Download Patches", "text": "<p>After you have installed CSF, ConfigServer WebUI, and enabled both lfd and csf services; it's now time to run the patcher. The patcher will check your current configuration, and add a series of iptable rules so that apps like Docker and OpenVPN can communicate with the outside world and users can access your services.</p> <p></p>", "tags": ["install", "patch"]}, {"location": "patcher/download/#about", "title": "About", "text": "<p>The patcher includes several patches:</p> <code>Docker</code> <p>Allows for you to restart CSF without having to restart your docker containers. Scans every container you have set up in docker and adds a whitelist firewall rule. Automatically enables CSF Docker Mode.</p> <code>OpenVPN</code> <p>Allows VPN clients to connect to your OpenVPN server without being blocked by the CSF firewall.</p> <p></p> <p></p>", "tags": ["install", "patch"]}, {"location": "patcher/download/#download", "title": "Download", "text": "<p>Within your server, change to whatever directory where you want to download the patcher:</p> <pre><code>cd $HOME/Documents\n</code></pre> <p></p> <p>Next, ensure you have the package <code>git</code> installed so that we can use it to fetch the patch:</p> <pre><code>sudo apt-get install git\n</code></pre> <p></p> <p>Clone the patch repo:</p> <pre><code>git clone https://github.com/Aetherinox/csf-firewall.git\n</code></pre> <p></p> <p>Finally, set new permissions on the patcher's <code>install.sh</code> file by running the command:</p> <pre><code>sudo chmod +x /patch/install.sh\n</code></pre> <p></p> <p>The patcher is now on your system and ready to run. However, before we run the patcher; there are a few things that need to be configured. Do not run the patch yet. </p> <p>Proceed to the Configure section.</p> <p></p> <p></p>", "tags": ["install", "patch"]}, {"location": "patcher/download/#next-steps", "title": "Next Steps", "text": "Next: How to configure the patcher Instructions for configuring the patches included ../configure/ ../configure/", "tags": ["install", "patch"]}, {"location": "usage/blocklists/", "title": "Usage \u203a Blocklists", "text": "", "tags": ["usage", "configure", "blocklists"]}, {"location": "usage/blocklists/#blocklists", "title": "Blocklists", "text": "<p>This section outlines the purpose of CSF\u2019s blocklist and how it helps server administrators control which IP addresses are allowed to access the server while rejecting unwanted connection attempts.</p> <p></p> <p></p>", "tags": ["usage", "configure", "blocklists"]}, {"location": "usage/blocklists/#about-blocklists", "title": "About Blocklists", "text": "<p>A blocklist is a collection of IP addresses or entire networks (CIDRs) that you don\u2019t want accessing your server. When an IP on the blocklist attempts to connect, CSF blocks the request, helping to protect your system from unwanted or malicious traffic.</p> <p>Blocklists are powerful because they let you deny connections from known bad actors automatically. This includes IPs flagged for brute-force attacks, spam, port scanning, or other suspicious activity. Instead of manually adding rules for each offender, CSF can apply a list of rules that you maintain or import from external sources.</p> <p>Many blocklists are published and maintained by security organizations that track malicious activity worldwide. By subscribing to these maintained blocklists, you can keep your server automatically protected from known threats without the need for constant manual intervention.</p> <p>There are numerous popular choices for maintained blocklists such as:</p> <ul> <li>Official CSF Repository</li> <li>Spamhaus</li> <li>DShield</li> <li>TOR Exit Nodes</li> <li>BOGON</li> <li>Project Honey Pot</li> <li>C.I. Army Malicious IP List</li> <li>BruteForceBlocker</li> <li>MaxMind GeoIP Anonymous Proxies</li> <li>Blocklist.de</li> <li>Stop Forum Spam</li> <li>GreenSnow Hack List</li> </ul> <p></p> <p></p>", "tags": ["usage", "configure", "blocklists"]}, {"location": "usage/blocklists/#location", "title": "Location", "text": "<p>To view or edit your current blocklists, open the file <code>/etc/csf/csf.blocklists</code>. An explaination of how the blocklist file works will be given in the sections below.</p> <p></p> <p></p>", "tags": ["usage", "configure", "blocklists"]}, {"location": "usage/blocklists/#how-blocklists-work", "title": "How Blocklists Work", "text": "<p>CSF supports two different methods for handling blocklists, and the choice depends on how large your lists are and how much efficiency you need.  </p> <p></p>", "tags": ["usage", "configure", "blocklists"]}, {"location": "usage/blocklists/#ipsets-disabled", "title": "<code>IPSETs Disabled</code>", "text": "<p>Blocklists are processed line-by-line, and each entry becomes its own rule in iptables. This option should be selected if you plan to have very small lists that do not contain more than a few thousand entries.</p> <ul> <li> Pros: Simple, no extra dependencies, works out of box.</li> <li> Cons: Becomes slow and inefficient with large blocklists.</li> </ul> <p></p>", "tags": ["usage", "configure", "blocklists"]}, {"location": "usage/blocklists/#ipsets-enabled", "title": "<code>IPSETs Enabled</code>", "text": "<p>Blocklists are imported into kernel-managed sets, allowing CSF to check connections against a single set rather than thousands of rules.  This option is acceptable if your blocklists contain thousands or more of IP addresses to block.</p> <ul> <li> Pros: Extremely efficient and scalable, can handle very large lists.</li> <li> Cons: Extra package dependency <code>ipset</code> must be installed.</li> </ul> <p></p> <p>If you wish to utilize option  and enable IPSET, please review our documentation regarding the installation and configuration of IPSET on your server.</p> <p></p> <ul> <li> <p> Introduction to IPSETs</p> <p>Improve firewall efficiency in CSF by enabling IPSET integration to manage large blocklists.  </p> <p>This chapter covers installing the IPSET package and configuring CSF to use it for handling blocklists.  </p> <p>Using IPSET allows CSF to group IP addresses into sets, reducing the number of iptables rules and improving overall performance.</p> </li> </ul> <p></p> <p></p>", "tags": ["usage", "configure", "blocklists"]}, {"location": "usage/blocklists/#configure-blocklists", "title": "Configure Blocklists", "text": "<p>Subscribed blocklists can be managed by opening the file <code>/etc/csf/csf.blocklists</code>.</p> <p>By default, every list is commented out with a <code>#</code> symbol at the beginning of the line. Leave the line commented if you do not wish to use that blocklist. To enable a blocklist, simply remove the <code>#</code> and save the file.</p> Uncomment the blocklists you want ... <p>Out of box, all blocklists are commented with the character <code>#</code> at the front of every line. To use a blocklist, remove the command character <code>#</code> and save the file.</p> /etc/csf/csf.blocklists<pre><code># #\n#   @blocklist              Official CSF Blocklists\n#   @details:               https://aetherinox.github.io/csf-firewall/usage/blocklists/#official-blocklists\n#                           https://aetherinox.github.io/csf-firewall/advanced/services/blocklist.configserver\n#   \n#   The official CSF blocklists contain a large number of IPs which range from various \n#   different services, including AbuseIPDB (100% confidency).\n#   \n#   You can also use our blocklist service:\n#       http://blocklist.configserver.dev/master.ipset\n#       http://blocklist.configserver.dev/highrisk.ipset\n#   \n#   We offer many others, but these two are the primary ones.\n#   \n#   Requires you to edit /etc/csf/csf.conf setting:\n#       LF_IPSET_MAXELEM = \"4000000\"\n# #\n\n#   CSF_MASTER|43200|0|http://blocklist.configserver.dev/master.ipset\n#   CSF_HIGHRISK|43200|0|http://blocklist.configserver.dev/highrisk.ipset\n\n# #\n#   @blocklist              Spamhaus Don't Route Or Peer List (DROP)\n#   @details:               http://spamhaus.org/drop\n# #\n\n#   SPAMDROP|86400|0|http://www.spamhaus.org/drop/drop.txt\n\n# #\n#   @blocklist              Spamhaus IPv6 Don't Route Or Peer List (DROPv6)\n#   @details:               http://spamhaus.org/drop\n# #\n\n#   SPAMDROPV6|86400|0|https://www.spamhaus.org/drop/dropv6.txt\n\n# #\n#   @blocklist              Spamhaus Extended DROP List (EDROP)\n#   @details:               http://spamhaus.org/drop\n# #\n\n#   SPAMEDROP|86400|0|http://www.spamhaus.org/drop/edrop.txt\n\n# #\n#   @blocklist              DShield.org Recommended Block List\n#   @details:               https://dshield.org\n# #\n\n#   DSHIELD|86400|0|https://www.dshield.org/block.txt\n\n# #\n#   @blocklist              TOR Exit Nodes List\n#   @details:               https://trac.torproject.org/projects/tor/wiki/doc/TorDNSExitList\n#   @notes                  Set URLGET in csf.conf to use LWP as this list\n#                           uses an SSL connection\n# #\n\n#   TOR|86400|0|https://check.torproject.org/cgi-bin/TorBulkExitList.py?ip=1.2.3.4\n\n# #\n#   @blocklist              BOGON list\n#   @details:               http://team-cymru.org/Services/Bogons\n# #\n\n#   BOGON|86400|0|http://www.cymru.com/Documents/bogon-bn-agg.txt\n\n# #\n#   @blocklist              Project Honey Pot Directory of Dictionary Attacker IPs\n#   @details:               http://projecthoneypot.org\n# #\n\n#   HONEYPOT|86400|0|https://www.projecthoneypot.org/list_of_ips.php?t=d&amp;rss=1\n\n# #\n#   @blocklist              C.I. Army Malicious IP List\n#   @details:               https://ciarmy.com\n# #\n\n#   CIARMY|86400|0|http://www.ciarmy.com/list/ci-badguys.txt\n\n# #\n#   @blocklist              BruteForceBlocker IP List\n#   @details:               http://danger.rulez.sk/index.php/bruteforceblocker\n# #\n\n#   BFB|86400|0|http://danger.rulez.sk/projects/bruteforceblocker/blist.php\n\n# #\n#   @blocklist              MaxMind GeoIP Anonymous Proxies\n#   @details:               https://maxmind.com/en/anonymous_proxies\n#   @notes:                 Set URLGET in csf.conf to use LWP as this list\n#                           uses an SSL connection\n#   \n#   This first list only retrieves the IP addresses added in the last hour\n# #\n\n#   MAXMIND|86400|0|https://www.maxmind.com/en/anonymous_proxies\n\n# #\n#   @blocklist              Blocklist.de\n#   @details:               https://blocklist.de\n#   @notes:                 Set URLGET in csf.conf to use LWP as this list\n#                           uses an SSL connection\n#   \n#   This first list only retrieves the IP addresses added in the last hour\n# #\n\n#   BDE|3600|0|https://api.blocklist.de/getlast.php?time=3600\n\n# #\n#   This second list retrieves all the IP addresses added in the last 48 hours\n#   and is usually a very large list (over 10000 entries), so be sure that you\n#   have the resources available to use it\n# #\n\n#   BDEALL|86400|0|http://lists.blocklist.de/lists/all.txt\n\n# #\n#   @blocklist              Stop Forum Spam\n#   @details:               http://stopforumspam.com/downloads\n#   @notes:                 Many of the lists available contain a vast number of\n#                           IP addresses so special care needs to be made when\n#                           selecting from their lists\n# #\n\n#   STOPFORUMSPAM|86400|0|http://www.stopforumspam.com/downloads/listed_ip_1.zip\n\n# #\n#   @blocklist              Stop Forum Spam IPv6\n#   @details:               http://stopforumspam.com/downloads\n#   @notes:                 Many of the lists available contain a vast number of\n#                           IP addresses so special care needs to be made when\n#                           selecting from their lists\n# #\n\n#   STOPFORUMSPAMV6|86400|0|http://www.stopforumspam.com/downloads/listed_ip_1_ipv6.zip\n\n# #\n#   @blocklist              GreenSnow Hack List\n#   @details:               https://greensnow.co\n# #\n\n#   GREENSNOW|86400|0|https://blocklist.greensnow.co/greensnow.txt\n</code></pre> <p></p> <p>We will use the first blocklist in the example above to explain the format. </p> /etc/csf/csf.blocklists<pre><code># #\n#   Example Blocklists\n#   NAME   | INTERVAL | MAX_IPS | BLOCKLIST_URL\n# #\n\nSPAMDROP      |   86400   |    0    |  https://spamhaus.org/drop/drop.txt\nCSF_HIGHRISK  |   43200   |    0    |  https://raw.githubusercontent.com/Aetherinox/csf-firewall/main/blocklists/highrisk.ipset\nDSHIELD       |   86400   |    0    |  https://dshield.org/block.txt\n----------------------------------------------------------------------------------------------------------------------------------\n    ^NAME^     ^INTERVAL^  ^MAX_IPS^              ^BLOCKLIST_URL^              \n</code></pre> <code>NAME</code> <p>List name with all uppercase alphabetic characters with no spaces and a maximum of 25 characters - this will be used as the iptables chain name</p> <code>INTERVAL</code> <p>Refresh interval to download the list, must be a minimum of 3600 seconds (an hour).</p> <ul> <li>43200: 12 hours</li> <li>86400: 24 hours</li> </ul> <code>MAX_IPS</code> <p>This is the maximum number of IP addresses to use from the list, a value of <code>0</code> means all IPs (see note below).     If you add an ipset with 50,000 IPs, and you set this value to 20,000; then you will only block the first 20,000.</p> <code>URL</code> <p>The URL to download the ipset from</p> <p></p> <p></p>", "tags": ["usage", "configure", "blocklists"]}, {"location": "usage/blocklists/#official-blocklists", "title": "Official Blocklists", "text": "<p>While there are many blocklists available on the internet \u2014 including repositories on GitHub \u2014 CSF also provides official blocklists maintained directly in our repository. These lists are curated, updated regularly, and designed to minimize false positives while providing protection against common threats.</p> <p></p> <p>These lists are refreshed approximately every <code>6 hours</code> to ensure up-to-date protection. They include IP addresses flagged for abusive behavior such as:</p> <ul> <li>SSH brute-forcing  </li> <li>Port scanning  </li> <li>DDoS attacks  </li> <li>IoT exploitation  </li> <li>Phishing attempts  </li> </ul> <p></p> <p>For most users, the <code>master.ipset</code> and <code>highrisk.ipset</code> lists are sufficient. They contain large collections of high-confidence IPs (100% confidence level) to reduce the chance of false positives.</p> <p>In addition to the primary lists, the CSF repository also offers specialized blocklists for categories like privacy, spam, and geographic restrictions. These allow you to further tailor your firewall rules, such as blocking traffic from specific countries.</p> <p></p> <p>The primary blocklists can be added to your <code>/etc/csf/csf.blocklists</code> file. Open the blocklist file and add the following:</p> <pre><code># #\n#   @blocklist              Official CSF Blocklists\n#   @details:               https://aetherinox.github.io/csf-firewall/usage/blocklists/#official-blocklists\n#                           https://aetherinox.github.io/csf-firewall/advanced/services/blocklist.configserver\n#   \n#   The official CSF blocklists contain a large number of IPs which range from various \n#   different services, including AbuseIPDB (100% confidency).\n#   \n#   You can also use our blocklist service:\n#       http://blocklist.configserver.dev/master.ipset\n#       http://blocklist.configserver.dev/highrisk.ipset\n#   \n#   We offer many others, but these two are the primary ones.\n#   \n#   Requires you to edit /etc/csf/csf.conf setting:\n#       LF_IPSET_MAXELEM = \"4000000\"\n# #\n\nCSF_MASTER   | 43200 | 0      | http://blocklist.configserver.dev/master.ipset\nCSF_HIGHRISK | 43200 | 0      | http://blocklist.configserver.dev/highrisk.ipset\n</code></pre> <p></p> Master blocklist without IPSET enabled can cause server instability &amp; increased memory usage <p>The official <code>master.ipset</code> blocklist contains millions of IP addresses. </p> <p>We strongly recommend enabling IPSET before using this list. Without IPSET, CSF will create a separate iptables rule for every IP, which can drastically increase memory usage and slow down firewall operations.</p> <p>Using this list without IPSET may lead to performance issues or even system instability on servers with limited resources.</p> <p></p> <p>The blocklists you added from above should give you the entire collection for each main blocklist. All that is needed is to restart CSF to ensure that the blocklists take affect:</p>  Command <pre><code>sudo csf -ra\n</code></pre> <p></p> <p>When CSF restarts, these blocklists will be loaded into CSF, and if someone from one of the IP addresses in these lists attempt to connect to your server in any way, they'll be timed out and unable to communicate with your server. You can confirm that these blocklists are loaded by running the command:</p>  Command Output <pre><code>sudo ipset --list -n\n</code></pre> <pre><code>chain_DENY\nchain_6_DENY\nchain_ALLOW\nchain_6_ALLOW\nbl_CSF_HIGHRISK\nbl_6_CSF_HIGHRISK\nbl_CSF_MASTER\nbl_6_CSF_MASTER\n</code></pre> <p></p> <p>In the <code>Output</code> tab above, you are looking for the following to show up in your list:</p> Blocklist List Name Protocol Version Description Master <code>bl_CSF_MASTER</code> IPv4 List of all IPv4 addresses to restrict Master <code>bl_6_CSF_MASTER</code> IPv6 List of all IPv6 addresses to restrict High Risk <code>bl_CSF_HIGHRISK</code> IPv4 List of all IPv4 addresses to restrict High Risk <code>bl_6_CSF_HIGHRISK</code> IPv6 List of all IPv6 addresses to restrict <p></p> <p>To view a list of all IP addresses within a specific blocklist, run the command:</p>  Command Output <pre><code>sudo ipset --list bl_CSF_HIGHRISK\n</code></pre> <pre><code>Name: bl_CSF_HIGHRISK\nType: hash:net\nRevision: 7\nHeader: family inet hashsize 1024 maxelem 4000000 bucketsize 12 initval 0x5f263e28\nSize in memory: 24024\nReferences: 1\nNumber of entries: 630\nMembers:\nXX.XX.XX.XXX\nXX.XX.XX.XXX\n[ ... ]\n</code></pre> <p></p> <p>Now that you have our official blocklists loaded within your <code>/etc/csf/csf.blocklists</code>, we need to ensure that the setting <code>LF_IPSET_MAXELEM</code> is set to the proper value, otherwise, not all of the blocked IP addresses we provide will be loaded. That is explained in the section below.</p> Official master blocklist requires increased <code>LF_IPSET_MAXELEM</code> <p>If you decide to use our official blocklist <code>master.ipset</code>, you must increase the value of the setting <code>LF_IPSET_MAXELEM</code> in <code>/etc/csf/csf.conf</code> to at least <code>4000000</code>.</p> <p>Instructions for doing this are available in the next section Increase Max Limit</p> <p></p> <p></p>", "tags": ["usage", "configure", "blocklists"]}, {"location": "usage/blocklists/#increase-max-limit", "title": "Increase Max Limit", "text": "<p>By default, CSF places a cap on the number of IP addresses that can be loaded into a single IPSET. This is controlled by the setting <code>LF_IPSET_MAXELEM</code> inside your CSF configuration file <code>/etc/csf/csf.conf</code>.  </p> <p>Out of the box, this value is set to 65536 (around sixty-five thousand IPs). That means if a blocklist tries to load more than that, the extra entries will be ignored \u2014 even if you set the blocklist <code>MAX_IPS</code> value to <code>0</code> (unlimited) or a number greater than 65536.</p> <p>For servers that rely on multiple large blocklists, this default limit is often too low. To raise the maximum number of IPs that can be stored inside a set, you\u2019ll need to increase the <code>LF_IPSET_MAXELEM</code> value.</p>  Find Change To /etc/csf/csf.conf<pre><code>LF_IPSET_MAXELEM = \"65536\"\n</code></pre> /etc/csf/csf.conf<pre><code>LF_IPSET_MAXELEM = \"4000000\"\n</code></pre> <p></p> <p>Once you have the setting changed in your CSF config, give CSF a restart:</p>  Command <pre><code>sudo csf -ra\n</code></pre> <p></p> <p>After the new setting has been applied, you can go back to your blocklists within the file <code>/etc/csf/csf.blocklists</code> and increase the limit as needed:</p>  Find Change To <p>The blocklist below is has the <code>MAX_IPS</code> set to <code>65536</code>, which is very low for this blocklist. This one contains about 2 million blocked IP addresses. With the below setting, we will only be able to load 65,536 out of those 2,000,000 IP addresses.</p> /etc/csf/csf.blocklists<pre><code>CSF_HIGHRISK|43200|65536|https://raw.githubusercontent.com/Aetherinox/csf-firewall/main/blocklists/highrisk.ipset\n</code></pre> <p>We changed the <code>MAX_IP</code> value from the default <code>65536</code> to <code>0</code> for unlimited. Since this particular blocklist only gives us about 2 million blocked IP addresses, and we've set our <code>LF_IPSET_MAXELEM</code> to 4 million.</p> /etc/csf/csf.blocklists<pre><code>CSF_HIGHRISK|43200|0|https://raw.githubusercontent.com/Aetherinox/csf-firewall/main/blocklists/highrisk.ipset\n</code></pre> <p></p> <p>If you are using our Official Blocklists, you can confirm the increased limit by running the command:</p>  Command Output <pre><code>sudo ipset --list bl_CSF_HIGHRISK\n</code></pre> <pre><code>Name: bl_CSF_HIGHRISK\nType: hash:net\nRevision: 7\nHeader: family inet hashsize 1024 maxelem 4000000 bucketsize 12 initval 0x5f263e28\nSize in memory: 24024\nReferences: 1\nNumber of entries: 630\nMembers:\nXX.XX.XX.XXX\nXX.XX.XX.XXX\n[ ... ]\n</code></pre> <p></p> <p>You will see the new max limit value listed next <code>maxelem</code>.</p> <pre><code>Header: family inet hashsize 1024 maxelem 4000000 bucketsize 12 initval 0x5f263e28\n</code></pre> <p></p> <p></p>", "tags": ["usage", "configure", "blocklists"]}, {"location": "usage/blocklists/#next-steps", "title": "Next Steps", "text": "<p>Select what documentation you would like to proceed with next ...</p> <ul> <li> <p> Geographical IP Block Integration</p> <p>Configure geographical restrictions in CSF to whitelist or blacklist specific regions from accessing your server.</p> <p>This chapter covers enabling the GeoIP blocklist feature using third-party services such as MaxMind (requires an API key), db-ip, ipdeny, or iptoasn.</p> <p>These services allow you to control access based on location while keeping your server secure.</p> </li> </ul> <p></p> <p></p>", "tags": ["usage", "configure", "blocklists"]}, {"location": "usage/configuration/", "title": "Usage \u203a Configuration", "text": "", "tags": ["usage", "configure"]}, {"location": "usage/configuration/#usage-configuration", "title": "Usage \u203a Configuration", "text": "<p>This section introduces the main CSF configuration file, which controls how CSF operates and determines which features are active on your server.</p> <p></p> <p></p>", "tags": ["usage", "configure"]}, {"location": "usage/configuration/#location", "title": "Location", "text": "<p>The main configuration file for CSF is located in <code>/etc/csf/csf.conf</code>. You can use your preferred text editor to modify the file, such as nano or vim:</p>  Command <pre><code>sudo nano /etc/csf/csf.conf\n</code></pre> <p></p> <p></p>", "tags": ["usage", "configure"]}, {"location": "usage/configuration/#essential-config-properties", "title": "Essential Config Properties", "text": "<p>This section outlines some of the most important settings that you may want to review. Each one is listed below:</p> <p></p>", "tags": ["usage", "configure"]}, {"location": "usage/configuration/#testing", "title": "TESTING", "text": "<p> <code>.conf</code> /etc/csf/csf.conf <code>1</code></p> <p></p> <p>Testing mode is a feature built into CSF and LFD which does the following when enabled:</p> <ul> <li>Allows safe configuration of CSF without enforcing firewall rules or banning IPs.</li> <li>Reads configuration files like <code>/etc/ssh/sshd_config</code> to detect service ports. Detected ports (SSH, IPv6, TCP/UDP) are added to CSF config variables such as <code>TCP_IN</code>, <code>TCP6_IN</code>, <code>UDP_IN</code> in <code>/etc/csf/csf.conf</code>.</li> <li>LFD does not run as a daemon.</li> <li>Adds a cron job to periodically reload CSF rules for testing, but no actual blocking occurs.</li> <li>IPs in <code>csf.allow</code> and <code>csf.deny</code> are processed for testing but not enforced.</li> <li>Displays currently listening ports to sysadmin; helps safely configure CSF before enabling enforcement.</li> </ul> <pre><code># #\n#   Testing flag - enables a CRON job that clears iptables incase of\n#   configuration problems when you start csf. This should be enabled until you\n#   are sure that the firewall works - i.e. incase you get locked out of your\n#   server! Then do remember to set it to 0 and restart csf when you're sure\n#   everything is OK. Stopping csf will remove the line from /etc/crontab\n#   \n#   lfd will not start while this is enabled\n# #\n\nTESTING = \"0\"\n</code></pre> <p> </p>", "tags": ["usage", "configure"]}, {"location": "usage/configuration/#tcp_in-tcp_out", "title": "TCP_IN, TCP_OUTSamba Users", "text": "<p> <code>.conf</code> /etc/csf/csf.conf <code>22,53,80,110,143,443,465,587,993,995</code></p> <p></p> <p>Define the allowed incoming and outgoing TCP ports, respectively. Add or remove ports as required, separated by commas.</p>  Config Common Ports Notes <pre><code># Allow incoming TCP ports\nTCP_IN = \"22,53,80,110,143,443,465,587,993,995\"\n\n# Allow outgoing TCP ports\nTCP_OUT = \"22,53,80,110,143,443,465,587,993,995\"\n</code></pre> <p>The following are a list of the most common ports that you may find useful allowing traffic through.</p> Port Description 20 FTP data transfer (active mode) 21 FTP control/commands 22 SSH / SFTP (secure shell and file transfer) 25 SMTP (sending email between mail servers) 53 DNS (Domain Name System queries) 80 HTTP (web traffic, insecure) 110 POP3 (downloading emails, insecure) 113 Ident / AUTH (rarely used identification service) 139 Samba (legacy) (SMB over NetBIOS) 143 IMAP (retrieving/syncing emails, insecure) 443 HTTPS (secure web traffic) 445 Samba (modern - preferred) (SMB over TCP) 465 SMTP over SSL (secure sending of emails) 587 SMTP submission (secure client-to-server email sending) 853 DNS over TLS (secure DNS queries) 993 IMAP over SSL (secure email retrieval) 995 POP3 over SSL (secure email download) <p></p><p></p> <p>You must have the following <code>TCP</code> ports unblocked:</p> <pre><code>TCP_IN = \"445,139\"\nTCP_OUT = \"445,139\"\n</code></pre> <p></p> <p>You must have the following <code>UDP</code> ports unblocked:</p> <pre><code>UDP_IN = \"137,138,445\"\nUDP_OUT = \"137,138,445\"\n</code></pre> <p> </p>", "tags": ["usage", "configure"]}, {"location": "usage/configuration/#udp_in-udp_out", "title": "UDP_IN, UDP_OUTSamba Users", "text": "<p> <code>.conf</code> /etc/csf/csf.conf <code>20,21,53,853,80,443</code></p> <p></p> <p>Define the allowed incoming and outgoing UDP ports, respectively. Add or remove ports as required, separated by commas.</p>  Config Common Ports Notes <pre><code># Allow incoming UDP ports\nUDP_IN = \"20,21,53,853,80,443\"\n\n# Allow outgoing UDP ports\n# To allow outgoing traceroute add 33434:33523 to this list \nUDP_OUT = \"20,21,53,853,113,123\"\n</code></pre> <p>The following are a list of the most common ports that you may find useful allowing traffic through.</p> Port Description 20 FTP data transfer (rarely UDP, mostly TCP) 21 FTP control/commands (rarely UDP, mostly TCP) 53 DNS queries (UDP is standard; TCP fallback for large responses) 80 HTTP (UDP not standard; TCP is primary) 113 Ident / AUTH (rarely used) 123 NTP (Network Time Protocol) 443 HTTPS (UDP can be used with QUIC protocol) 853 DNS over TLS (UDP fallback possible) 67 DHCP server (receives client requests) 68 DHCP client (receives server responses) 137 Samba / NetBIOS Name Service (NBNS) 138 Samba / NetBIOS Datagram Service (NBDS) 161 SNMP (Simple Network Management Protocol) 162 SNMP traps (from agents to manager) 500 IKE (IPsec key exchange) 514 Syslog (UDP logging) 1900 SSDP (Simple Service Discovery Protocol, used in UPnP) 4500 IPsec NAT traversal 33434\u201333523 Traceroute / ICMP UDP probe ports <p></p><p></p> <p>You must have the following <code>TCP</code> ports unblocked:</p> <pre><code>TCP_IN = \"445,139\"\nTCP_OUT = \"445,139\"\n</code></pre> <p></p> <p>You must have the following <code>UDP</code> ports unblocked:</p> <pre><code>UDP_IN = \"137,138,445\"\nUDP_OUT = \"137,138,445\"\n</code></pre> <p> </p>", "tags": ["usage", "configure"]}, {"location": "usage/configuration/#deny_ip_limit", "title": "DENY_IP_LIMIT", "text": "<p> <code>.conf</code> /etc/csf/csf.conf <code>200</code></p> <p></p> <p>This setting controls the maximum number of IP addresses that can be listed in the <code>/etc/csf/csf.deny</code> file. You can increase or decrease this limit depending on your server\u2019s needs.  </p> <p>Keep in mind that raising the limit on servers with low memory (such as Virtuozzo or OpenVZ) may cause network slowdowns if thousands of rules are loaded.  </p> <p>When the limit is reached, CSF will automatically rotate the entries; meaning that the oldest entries (at the top of the file) are removed, and the newest ones are added. This check only happens when using <code>csf -d</code>, which is also what <code>lfd</code> relies on. Setting this value to <code>0</code> disables the limit entirely.  </p> <p>If you need to allow a much larger number of blocked IPs or CIDRs, it\u2019s recommended to use CSF's IPSETs integration instead for better performance.</p> <pre><code># #\n#   Limit the number of IP's kept in the /etc/csf/csf.deny file\n#   \n#   Care should be taken when increasing this value on servers with low memory\n#   resources or hard limits (such as Virtuozzo/OpenVZ) as too many rules (in the\n#   thousands) can sometimes cause network slowdown\n#   \n#   The value set here is the maximum number of IPs/CIDRs allowed\n#   if the limit is reached, the entries will be rotated so that the oldest\n#   entries (i.e. the ones at the top) will be removed and the latest is added.\n#   The limit is only checked when using csf -d (which is what lfd also uses)\n#   Set to 0 to disable limiting\n#   \n#   For implementations wishing to set this value significantly higher, we\n#   recommend using the IPSET option\n# #\n\nDENY_IP_LIMIT = \"200\"\n</code></pre> <p> </p>", "tags": ["usage", "configure"]}, {"location": "usage/configuration/#ct_limit", "title": "CT_LIMIT", "text": "<p> <code>.conf</code> /etc/csf/csf.conf <code>0</code></p> <p></p> <p>Connection Tracking lets the firewall keep track of how many connections each IP address makes to your server. If an IP opens more connections than the set limit, it will be automatically blocked. This can help protect against certain types of DoS (Denial of Service) attacks.  </p> <p>Be cautious when enabling this option. Some services like FTP, IMAP, and HTTP naturally create many connections, including ones left in <code>TIME_WAIT</code>, which can lead to false positives. On busy servers, it\u2019s easy for legitimate traffic to hit the limit. For servers at higher risk of DoS attacks, however, this feature can be very useful. A practical starting value is usually around <code>300</code> connections.</p> <p>To disable this feature, set this to 0</p> <pre><code># #\n#   Connection Tracking. This option enables tracking of all connections from IP\n#   addresses to the server. If the total number of connections is greater than\n#   this value then the offending IP address is blocked. This can be used to help\n#   prevent some types of DOS attack.\n#\n#   Care should be taken with this option. It's entirely possible that you will\n#   see false-positives. Some protocols can be connection hungry, e.g. FTP, IMAPD\n#   and HTTP so it could be quite easy to trigger, especially with a lot of\n#   closed connections in TIME_WAIT. However, for a server that is prone to DOS\n#   attacks this may be very useful. A reasonable setting for this option might\n#   be around 300.\n#   \n#   To disable this feature, set this to 0\n# #\n\nCT_LIMIT = \"0\"\n</code></pre> <p> </p>", "tags": ["usage", "configure"]}, {"location": "usage/configuration/#ui_block_private_net", "title": "UI_BLOCK_PRIVATE_NET", "text": "<p> <code>.conf</code> /etc/csf/csf.conf <code>1</code> 15.01</p> <p></p> <p>This option determines whether login attempts to the CSF/LFD web interface (UI) from the server\u2019s own local network interfaces are allowed or blocked.  Local interfaces include any IPs bound to the system\u2019s network devices, as discovered by <code>getethdev</code>. These typically cover private IP ranges such as:</p> <ul> <li>192.168.x.x</li> <li>172.16\u201331.x.x</li> <li>10.x.x.x</li> <li>addresses assigned to Docker bridges, virtual adapters, or loopback interfaces.</li> </ul> <p>When this setting is enabled with the value <code>1</code>, CSF will block access attempts originating from local network IPs. This helps prevent unauthorized access from internal containers, proxy bridges, or other services running within the same host environment. It\u2019s a useful safeguard against loopback-style attacks or accidental internal exposure.</p> <p>If you intentionally access the CSF web interface through a local bridge such as a Docker container using a proxy IP like 172.18.0.2; you may need to disable this feature by setting the value to <code>0</code>.</p> <p>Keeping this feature enabled is recommended for most setups, as it adds an extra layer of protection against internal or bridged network access. When blocked, the browser will typically display an error such as <code>PR_CONNECT_RESET_ERROR</code> when attempting to connect.</p> <pre><code># #\n#   Connection Tracking. This option enables tracking of all connections from IP\n#   addresses to the server. If the total number of connections is greater than\n#   this value then the offending IP address is blocked. This can be used to help\n#   prevent some types of DOS attack.\n#\n#   Care should be taken with this option. It's entirely possible that you will\n#   see false-positives. Some protocols can be connection hungry, e.g. FTP, IMAPD\n#   and HTTP so it could be quite easy to trigger, especially with a lot of\n#   closed connections in TIME_WAIT. However, for a server that is prone to DOS\n#   attacks this may be very useful. A reasonable setting for this option might\n#   be around 300.\n#   \n#   To disable this feature, set this to 0\n# #\n\nCT_LIMIT = \"0\"\n</code></pre> <p> </p>", "tags": ["usage", "configure"]}, {"location": "usage/configuration/#ui", "title": "UI", "text": "<p> <code>.conf</code> /etc/csf/csf.conf <code>0</code> 8.00</p> <p>This setting enables the CSF Web Interface, a user-friendly, HTML-based graphical interface for managing ConfigServer Firewall (CSF) and Login Failure Daemon (LFD). With the web interface, you can easily configure and monitor your firewall without needing a control panel or separate web server. The interface runs as a subprocess of the LFD daemon, providing direct interaction with CSF.</p> Security Notice <p>Because the web interface runs under the system's root account, a successful login grants full root access to your server. It is essential to configure and use this feature with caution. Additional security measures are included to help make using the interface safer, but careful management is still strongly recommended.</p> <p>We recommend placing the CSF web interface behind either a tunnel, or reverse proxy such as Nginx or Traefik.</p> <pre><code># # \n#   SECTION:Integrated User Interface\n# # \n#   Integrated User Interface. This feature provides a HTML UI to csf and lfd,\n#   without requiring a control panel or web server. The UI runs as a sub process\n#   to the lfd daemon\n#   \n#   As it runs under the root account and successful login provides root access\n#   to the server, great care should be taken when configuring and using this\n#   feature. There are additional restrictions to enhance secure access to the UI\n#   \n#   See readme.txt for more information about using this feature BEFORE enabling\n#   it for security and access reasons\n#   \n#   1 to enable, 0 to disable\n# # \n\nUI = \"1\"\n</code></pre> <p> </p> <p></p> <p></p>", "tags": ["usage", "configure"]}, {"location": "usage/configuration/#next-steps", "title": "Next Steps", "text": "<p>Select what documentation you would like to proceed with next ...</p> <ul> <li> <p> Introduction to IPSETs</p> <p>Improve firewall efficiency in CSF by enabling IPSET integration to manage large blocklists.  </p> <p>This chapter covers installing the IPSET package and configuring CSF to use it for handling blocklists.  </p> <p>Using IPSET allows CSF to group IP addresses into sets, reducing the number of iptables rules and improving overall performance.</p> </li> <li> <p> Setting Up Blocklists</p> <p>Blocklists in CSF allow you to automatically block connections from known malicious IP addresses, helping to protect your server from abusive traffic.  </p> <p>This chapter explains how to configure and use blocklists, including CSF\u2019s official blocklist and third-party sources.  </p> <p>You\u2019ll also learn how to enable blocklists with or without IPSET, ensuring they work efficiently no matter the size of the list.</p> </li> </ul> <p> </p>", "tags": ["usage", "configure"]}, {"location": "usage/geoip/", "title": "Usage \u203a Enable GeoIP Blocking", "text": "", "tags": ["configure", "tutorials", "geoip"]}, {"location": "usage/geoip/#geographical-ip-block-integration", "title": "Geographical IP Block Integration", "text": "<p>Geographical blocks allow you to blacklist / whitelist one or more countries from accessing your services from within CSF. </p> <p></p>", "tags": ["configure", "tutorials", "geoip"]}, {"location": "usage/geoip/#getting-started", "title": "Getting Started", "text": "<p>CSF allows you to pick which service you want to use for geographical blocks. By default, CSF uses db-ip, but you have the option to pick any of the following:</p> <ul> <li>Maxmind</li> <li>db-ip, ipdeny, iptoasn</li> </ul> <p></p> <code>MaxMind</code> <p>MaxMind offers a free service, but you need to sign up for an account and generate an API key to access it. Many users find that MaxMind\u2019s databases are slightly more accurate than db-ip.</p> <p>If you opt for this provider, make sure to configure <code>MM_LICENSE_KEY</code> in <code>csf.conf</code>.</p> <p>Advantages:</p> <ul> <li>Completely free to use</li> <li>All databases are sourced from the same provider</li> <li>Consistent data across different databases</li> <li>Generally more accurate with fewer false positives</li> </ul> <p>Disadvantages:</p> <ul> <li>Requires account registration and an API key</li> <li>Larger databases, which can take longer to download or query</li> </ul> <code>db-ip, ipdeny, iptoasn</code> <p>Advantages:</p> <ul> <li>Free and easy to use</li> <li>Smaller, optimized databases for faster downloads and queries</li> <li>No account or API key required</li> </ul> <p>Disadvantages:</p> <ul> <li>Databases come from multiple providers</li> <li>Service may be affected if any source is unavailable</li> <li>Occasional inconsistencies between databases</li> </ul> <p></p> <p>Performance Impact</p> <p>If using MaxMind, be aware of how many countries you allow / deny from accessing your server. The more countries you add, the more rules that will be added to CSF. These rules will be loaded every time you start or restart CSF; and may cause CSF to take longer than normal to boot.</p> <p></p> <p>To change which database is used for geo blocking; open your CSF's <code>/etc/csf/csf.conf</code> config file and locate the setting <code>CC_SRC</code>. If you have the ConfigServer web interface enabled; you can access these settings from the CSF web interface.</p> <pre><code>#\n# Advantages: The ipdeny.com databases form CC blocking are better optimised\n# and so are quicker to process and create fewer iptables entries. All of these\n# databases are free to download without requiring login or key\n#\n# Disadvantages: Multiple sources mean that any one of the three could\n# interrupt the provision of these features. It may also mean that there are\n# inconsistences between them\n#\n# https://db-ip.com/db/lite.php\n# http://ipdeny.com/\n# https://iptoasn.com/\n# http://download.geonames.org/export/dump/readme.txt\n\n# Set the following to your preferred source:\n#\n# \"1\" - MaxMind\n# \"2\" - db-ip, ipdeny, iptoasn\n#\n# The default is \"2\" on new installations of csf, or set to \"1\" to use the\n# MaxMind databases after obtaining a license key\nCC_SRC = \"2\"\n</code></pre> <p></p> <p></p>", "tags": ["configure", "tutorials", "geoip"]}, {"location": "usage/geoip/#using-maxmind", "title": "Using MaxMind", "text": "<p>To configure the MaxMind databases for geographical blocking; you must go to their website and register an account.</p> <p>  Create MaxMind Account</p> <p></p> <p>Once you have your account, on the left side; select Manage License Keys.</p> MaxMind main website menu <p></p> <p>In the middle of the page, you should be able to generate a license key:</p> MaxMind \u203a Generate License Key <p></p> <p>After the license key is generated, you must go back to your <code>/etc/csf/csf.conf</code> and add the License key to your config. If you are using the CSF web interface:</p> CSF \u203a Web Interface \u203a Edit Config <p></p> <p>GeoIpUpdater Documentation</p> <p>A full set of instructions can also be found at:</p> <ul> <li>Setting up GeoIpUpdate</li> </ul> <p>Next, you must install MaxMind's GeoIpUpdater utility which is what will download the IP address databases. This tool automatically updates your server's GeoIP2 and GeoLite2 databases.</p> <p>GeoIpUpdater connects to the MaxMind Update server to check for new databases. If a new database version is available, the program will download and install it.</p> <p> </p> Firewall \u203a Allow Connection <p>If you are using a firewall, <code>geoipupdate</code> requires that the DNS and HTTPS <code>443</code> ports be open.</p> <p>Starting in 2024, MaxMind began using R2 presigned URLs for database downloads. If your server is refusing the connection during download, make sure that your servers can make HTTPS connections to the following hostname:</p> <pre><code>mm-prod-geoip-databases.a2649acb697e2c09b632799562c076f2.r2.cloudflarestorage.com\n</code></pre> <p></p> <p>First, install:</p> <pre><code>sudo add-apt-repository ppa:maxmind/ppa\nsudo apt update\nsudo apt install geoipupdate\n</code></pre> <p></p> <p>Once installed make sure you have a License key generated on the maxmind website, you will then need to create a new file in <code>/etc/</code>:</p> <pre><code>sudo touch /etc/GeoIP.conf\n</code></pre> <p></p> <p>Add the following code to your newly created <code>/etc/GeoIP.conf</code>. After you paste the code below; you must change the following values:</p> <ul> <li><code>AccountID</code></li> <li><code>LicenseKey</code></li> </ul> <pre><code># Please see https://dev.maxmind.com/geoip/updating-databases?lang=en for\n# instructions on setting up geoipupdate, including information on how to\n# download a pre-filled GeoIP.conf file.\n\n# Replace YOUR_ACCOUNT_ID_HERE and YOUR_LICENSE_KEY_HERE with an active account\n# ID and license key combination associated with your MaxMind account. These\n# are available from https://www.maxmind.com/en/my_license_key.\nAccountID 1000101\nLicenseKey ABC1234_56af7s8dshF53Ha_abck\n\n# Enter the edition IDs of the databases you would like to update.\n# Multiple edition IDs are separated by spaces.\nEditionIDs GeoLite2-ASN GeoLite2-City GeoLite2-Country\n\n# The remaining settings are OPTIONAL.\n\n# The directory to store the database files. Defaults to /usr/share/GeoIP\n# DatabaseDirectory /usr/share/GeoIP\n\n# The server to use. Defaults to \"updates.maxmind.com\".\n# Host updates.maxmind.com\n\n# The proxy host name or IP address. You may optionally specify a\n# port number, e.g., 127.0.0.1:8888. If no port number is specified, 1080\n# will be used.\n# Proxy 127.0.0.1:8888\n\n# The user name and password to use with your proxy server.\n# ProxyUserPassword username:password\n\n# Whether to preserve modification times of files downloaded from the server.\n# Defaults to \"0\".\n# PreserveFileTimes 0\n\n# The lock file to use. This ensures only one geoipupdate process can run at a\n# time.\n# Note: Once created, this lockfile is not removed from the filesystem.\n# Defaults to \".geoipupdate.lock\" under the DatabaseDirectory.\n# LockFile /usr/share/GeoIP/.geoipupdate.lock\n\n# The amount of time to retry for when errors during HTTP transactions are\n# encountered. It can be specified as a (possibly fractional) decimal number\n# followed by a unit suffix. Valid time units are \"ns\", \"us\" (or \"\u00b5s\"), \"ms\",\n# \"s\", \"m\", \"h\".\n# Defaults to \"5m\" (5 minutes).\n# RetryFor 5m\n\n# The number of parallel database downloads.\n# Defaults to \"1\".\n# Parallelism 1\n</code></pre> <p></p> <p>After you have created the above config; you need to launch the <code>geoipupdate</code> app. Multiple commands are provided below depending on if you want to specify where you placed your downloaded databases. A list of arguments are also provided. In our example, we are going to start <code>geoipupdate</code> and download the databases to the path <code>/var/lib/csf/Geo/</code>.</p> <p></p> Argument Description <code>-d</code>, <code>--database-directory</code> Install databases to a custom directory. This is optional. If provided, it overrides the <code>DatabaseDirectory</code> value from the configuration file and the <code>GEOIPUPDATE_DB_DIR</code> environment variable. <code>-f</code>, <code>--config-file</code> The configuration file to use. See <code>GeoIP.conf</code> and its documentation for more information. This is optional. It defaults to the environment variable <code>GEOIPUPDATE_CONF_FILE</code> if it is set, or CONFFILE otherwise. <code>--parallelism</code> Set the number of parallel database downloads. <code>-h</code>, <code>--help</code> Display help and exit. <code>--stack-trace</code> Show a stack trace on any error message. This is primarily useful for debugging. <code>-V</code>, <code>--version</code> Display version information and exit. <code>-v</code>, <code>--verbose</code> Enable verbose mode. Prints out the steps that <code>geoipupdate</code> takes. If provided, it overrides any <code>GEOIPUPDATE_VERBOSE</code> environment variable. <code>-o</code>, <code>--output</code> Output download/update results in JSON format. <p></p> Start (Basic)Start (Custom Paths)Start (Verbose Logging) <pre><code>sudo geoipupdate\n</code></pre> <pre><code>sudo geoipupdate --database-directory /var/lib/csf/Geo/ --config-file /etc/GeoIP.conf\n</code></pre> <pre><code>sudo geoipupdate -v --database-directory /var/lib/csf/Geo/ --config-file /etc/GeoIP.conf\n</code></pre> <p></p> <p></p>", "tags": ["configure", "tutorials", "geoip"]}, {"location": "usage/geoip/#using-db-ip-ipdeny-iptoasn", "title": "Using db-ip, ipdeny, iptoasn", "text": "<p>This is the second option you can pick within CSF for Geographical blocking. When initially tried, it worked right out of box. It required no modifications, no packages to be installed, and no license keys.</p> <p></p> <p></p>", "tags": ["configure", "tutorials", "geoip"]}, {"location": "usage/geoip/#allow-deny-countries", "title": "Allow / Deny Countries", "text": "<p>After you've completed the steps above; you can now whitelist or blacklist specific countries from accessing your server and will be managed through your ConfigServer Firewall.</p> <p>Pick your preferred method:</p> <ul> <li>Manage countries using csf.conf</li> <li>Manage countries with ConfigServer WebUI</li> </ul> <p></p>", "tags": ["configure", "tutorials", "geoip"]}, {"location": "usage/geoip/#manage-with-csfconf", "title": "Manage with csf.conf", "text": "<p>Open up your <code>csf.conf</code> file in a text editor and locate the following settings:</p> <ul> <li><code>CC_DENY</code></li> <li><code>CC_ALLOW</code></li> </ul> <p></p> <pre><code># The iptables rules are for incoming connections only\n#\n# Additionally, ASN numbers can also be added to the comma separated lists\n# below that also list Country Codes. The same WARNINGS for Country Codes apply\n# to the use of ASNs. More about Autonomous System Numbers (ASN):\n# http://www.iana.org/assignments/as-numbers/as-numbers.xhtml\n# ASNs must be listed as ASnnnn (where nnnn is the ASN number)\n#\n# You should consider using LF_IPSET when using any of the following options\n#\n# WARNING: These lists are never 100% accurate and some ISP's (e.g. AOL) use\n# non-geographic IP address designations for their clients\n#\n# WARNING: Some of the CIDR lists are huge and each one requires a rule within\n# the incoming iptables chain. This can result in significant performance\n# overheads and could render the server inaccessible in some circumstances. For\n# this reason (amongst others) we do not recommend using these options\n#\n# WARNING: Due to the resource constraints on VPS servers this feature should\n# not be used on such systems unless you choose very small CC zones\n#\n# WARNING: CC_ALLOW allows access through all ports in the firewall. For this\n# reason CC_ALLOW probably has very limited use and CC_ALLOW_FILTER is\n# preferred\n#\n# Each option is a comma separated list of CC's, e.g. \"US,GB,DE\"\nCC_DENY = \"\"\nCC_ALLOW = \"\"\n</code></pre> <p></p> <p>In our example, we will blacklist the country China, which uses the abbreviation <code>CN</code>. To do so; our config will look like the following:</p> <pre><code>CC_DENY = \"CN\"\nCC_ALLOW = \"\"\n</code></pre> <p></p> <p>To specify multiple countries; add a comma <code>,</code> delimiter between each country.</p> <pre><code>CC_DENY = \"CN\"\nCC_ALLOW = \"US,GB,DE\"\n</code></pre> <p></p> <p>Our rules above mean:</p> Setting Countries Description <code>CC_DENY</code> <code>China</code> Blacklisted countries: cannot access our server <code>CC_ALLOW</code> <code>United States</code> <code>Great Britain</code> <code>Germany</code> Whitelisted countries: can access our server <p></p>", "tags": ["configure", "tutorials", "geoip"]}, {"location": "usage/geoip/#manage-with-csf-webui", "title": "Manage with CSF WebUI", "text": "<p>Sign into the ConfigServer WebUI. </p> <p>Select the tab CSF, scroll down and select Firewall Configuration, and then in the top dropdown box in the middle of the page, select Country Code Lists and Settings.</p> <p></p> <p>We will add the following to each setting:</p> <pre><code>CC_DENY = \"CN\"\nCC_ALLOW = \"US,GB,DE\"\n</code></pre> <p></p> <p>Below is an animated gif showing the steps.</p> CSF Geo Configuration <p></p> <p>Once you have modified your country values; scroll to the very bottom and press the Change button.</p> <p></p> <p></p>", "tags": ["configure", "tutorials", "geoip"]}, {"location": "usage/geoip/#restart-csf", "title": "Restart CSF", "text": "<p>After you have whitelisted / blacklisted your desired countries; give CSF a restart:</p> <p></p> <p><code>-ra, --restartall</code></p> <p>Restart firewall rules (csf) and then restart lfd daemon. Both csf and then lfd should be restarted after making any changes to the configuration files</p> <pre><code>sudo csf -ra\n</code></pre> <p></p> <p></p>", "tags": ["configure", "tutorials", "geoip"]}, {"location": "usage/getting-started/", "title": "Usage \u203a Getting Started", "text": "", "tags": ["usage", "configure"]}, {"location": "usage/getting-started/#usage-getting-started", "title": "Usage \u203a Getting Started", "text": "<p>In the previous Installation chapter, we covered how to install both the depenencies and ConfigServer Security &amp; Firewall (CSF) itself on your server. This chapter covers the fundamentals of configuring CSF and understanding how it operates. </p> <p></p> <p></p>", "tags": ["usage", "configure"]}, {"location": "usage/getting-started/#section-usage", "title": "Section: Usage", "text": "<p>By this point, you should have CSF installed and an operational copy running on your server. This chapter will cover the more advanced settings for CSF and how to fine-tune it to fit your needs.</p> <p>Continue to the configuration section of this guide</p> <ul> <li> <p> Configuration</p> <p>The next section covers how to configure CSF by editing its main configuration file at <code>/etc/csf/csf.conf</code>. We\u2019ll highlight the key settings you should know, explain how to enable and manage blocklists, show the advantages of using IPSETs, and walk through other important options to help tailor CSF to your needs.</p> </li> </ul> <p></p> <p></p>", "tags": ["usage", "configure"]}, {"location": "usage/getting-started/#section-cheatsheet", "title": "Section: Cheatsheet", "text": "<p>If you are looking for straight-forward information such as commands, folder and file structure, or configuration examples, check out the Cheatsheet guides listed below.</p> <p></p> <p>Cheatsheet Guides</p> <ul> <li> <p> Structure</p> <p>Explains the general file structure set up of CSF.  It helps you identify where specific files for  CSF are within your syste, including configs and  firewall whitelists and blacklists.</p> </li> <li> <p> Commands</p> <p>Lists all of the commands available within CSF,  along with descriptions for each command, and  usage examples which can help explain how each command functions.</p> </li> <li> <p> Example Configs</p> <p>Provides the user with example configuration  files which can help when configuring CSF for the first time. Includes a full and a minimal config /etc/csf/csf.conf</p> </li> </ul> <p></p> <p></p>", "tags": ["usage", "configure"]}, {"location": "usage/ipset/", "title": "Usage \u203a IPSETs", "text": "", "tags": ["usage", "configure"]}, {"location": "usage/ipset/#introduction-to-ipsets", "title": "Introduction to IPSETs", "text": "<p>This section explains the purpose of IPSETs, and how they benefit you as a server administrator compared to using file-based allow, deny, or blocklists.</p> <p></p>", "tags": ["usage", "configure"]}, {"location": "usage/ipset/#about-ipsets", "title": "About IPSETs", "text": "<p>When managing a firewall with CSF, you\u2019ll often need to block or allow large numbers of IP addresses or networks. Traditionally, this has been done through file-based lists. When CSF is started, those lists are read into memory, and each IP or CIDR is added as a separate rule in the iptables firewall. As an example:</p> /etc//csf/csf.deny<pre><code># #\n#   Example /etc/csf/csf.deny\n# #\n\n# Block a single IP\n192.0.2.15\n\n# Block a range of IPs\n203.0.113.0/24\n\n# Block with a comment\n198.51.100.42 # Suspicious SSH brute force\n\n# Block an entire subnet\n10.0.0.0/8\n</code></pre> <p></p> <p>If you were to configure the IP addresses listed in the example above within the file <code>/etc//csf/csf.deny</code> and then started up CSF, then CSF would automatically convert that list into iptable rules, and would run the following:</p> <pre><code># Block a single IP\niptables -A INPUT -s 192.0.2.15 -j DROP\n\n# Block a range of IPs\niptables -A INPUT -s 203.0.113.0/24 -j DROP\n\n# Block with a comment (the comment is ignored by iptables, shown here for clarity)\niptables -A INPUT -s 198.51.100.42 -j DROP  # Suspicious SSH brute force\n\n# Block an entire subnet\niptables -A INPUT -s 10.0.0.0/8 -j DROP\n</code></pre> <p></p> <p>While this method works, it becomes inefficient when the list grows large. Every incoming or outgoing connection must be checked against each iptables rule, and once the list reaches thousands of entries, it can noticeably slow down your server\u2019s networking performance.</p> <p>This is where IPSETs come in. An ipset is a special data structure in the Linux kernel that allows you to group many IP addresses, networks, or ranges together, and then reference that group with a single firewall rule. Instead of adding thousands of rules into iptables, CSF can load all of those addresses into an ipset and apply them collectively. This approach is dramatically more efficient, reduces CPU usage, and speeds up packet filtering even when working with massive blocklists.</p> <p>The key difference is in how the firewall stores and processes the data. A traditional blocklist tells the firewall: \u201ccheck this IP against every single rule until you find a match.\u201d An ipset, on the other hand, works more like a fast lookup table: \u201ccheck if this IP is in the set; if so, apply the rule.\u201d This makes IPSETs especially useful for country-level bans, abuse IP feeds, or any large-scale list that would otherwise overwhelm a rule-based blocklist.</p> <p>For many users, blocklists are still perfectly fine if you only manage a handful of entries or want to manually add or remove individual IPs. But if you plan to use automated feeds, block entire regions, or maintain thousands of entries, IPSETs are the better option. They give you the same control as blocklists, but with far less overhead and much better scalability.</p> <p>It is also recommended that you enable IPSET if you plan on using any of the settings within the CSF config file <code>/etc/csf/csf.conf</code> listed below:</p> <ul> <li><code>CC_DENY</code></li> <li><code>CC_ALLOW</code></li> <li><code>CC_ALLOW_FILTER</code> </li> </ul> <p></p> Notice to Virtuozzo &amp; OpenVZ Users <p>It's highly unlikely that ipset will function on Virtuozzo/OpenVZ containers even if it has been installed</p> <p> </p>", "tags": ["usage", "configure"]}, {"location": "usage/ipset/#install", "title": "Install", "text": "<p>Before you can begin using IPSETs with CSF, you\u2019ll need to ensure the ipset package is installed on your server. Many modern Linux distributions already include IPSET support in the kernel by default, and in some cases the user-space tools (ipset command) are installed out of the box. If not, you can easily install them using your system\u2019s package manager. Or you can build the source from http://ipset.netfilter.org/.</p> <p>On Debian and Ubuntu systems, you can install IPSET with the following commands:</p>  Debian/Ubuntu (apt-get) CentOS/RHEL (yum/dnf) <pre><code>sudo apt-get update\nsudo apt-get install ipset\n</code></pre> <pre><code># using yum\nsudo yum install ipset\n\n#Using dnf\nsudo dnf install ipset\n</code></pre> <p></p> <p>Once installed, you can verify that IPSET is available by running:</p>  Command Output <pre><code>sudo ipset -v\n</code></pre> <pre><code>ipset v7.19, protocol version: 7\n</code></pre> <p></p> <p>If installation was successful, this command will display the current running version number. This confirms that your system is ready to start creating and managing IPSETs for CSF.</p> <p></p> <p></p>", "tags": ["usage", "configure"]}, {"location": "usage/ipset/#enable", "title": "Enable", "text": "<p>Once the ipset package is installed, the next step is to enable IPSET support within CSF. By default, CSF ships with IPSETs disabled, so you\u2019ll need to update the configuration file to turn it on.</p> <p>Open the CSF configuration file in your preferred text editor:</p>  Command <pre><code>sudo nano /etc/csf/csf.conf\n</code></pre> <p></p> <p>Once you get the config file opened, locate <code>LF_IPSET</code> and change the value from 0 to <code>1</code>:</p>  Find Change To /etc/csf/csf.conf<pre><code>LF_IPSET = \"0\"\n</code></pre> /etc/csf/csf.conf<pre><code>LF_IPSET = \"1\"\n</code></pre> <p></p> <p>After saving your changes, give CSF a restart:</p>  Command <pre><code>sudo csf -ra\n</code></pre> <p></p> <p>Enabling IPSETs allows CSF to offload large blocklists into efficient kernel-managed sets, significantly improving performance compared to standard iptables rules. This step is essential before you can begin adding and managing IPSET-based blocklists.</p> <p></p> <p></p>", "tags": ["usage", "configure"]}, {"location": "usage/ipset/#manage-lists", "title": "Manage Lists", "text": "<p>Once you have IPSET installed and enabled within CSF, it's time to populate your IPSET lists. These lists determine which connections are allowed to access your server and which ones will be denied. Populating your IPSET lists correctly helps ensure your firewall operates efficiently while providing strong protection.</p> <p>There are two primary ways to add IPs to your IPSET lists:</p> <ol> <li> <p>Using Blocklists</p> <ol> <li>Pre-compiled lists of known malicious IPs.</li> <li>See the Blocklists section for more information about blocklists.</li> </ol> </li> <li> <p>Using Manual Additions</p> <ol> <li>Adding specific IPs or subnets you want to allow or deny.</li> </ol> </li> </ol> <p> </p>", "tags": ["usage", "configure"]}, {"location": "usage/ipset/#using-blocklists", "title": "Using Blocklists", "text": "<p>Blocklists are precompiled lists of IP addresses or networks known to be malicious or unwanted. They allow you to automatically deny or restrict traffic from these IPs without having to add each one manually.</p> <p>For instructions on using official CSF blocklists or custom external blocklists to populate your IPSETs automatically, please refer to the Blocklists section. These lists can contain thousands or even millions of IP addresses and are automatically loaded into your IPSETs to save memory and improve firewall performance.</p> <ul> <li> <p> Setting Up Blocklists</p> <p>Blocklists in CSF allow you to automatically block connections from known malicious IP addresses, helping to protect your server from abusive traffic.  </p> <p>This chapter explains how to configure and use blocklists, including CSF\u2019s official blocklist and third-party sources.  </p> <p>You\u2019ll also learn how to enable blocklists with or without IPSET, ensuring they work efficiently no matter the size of the list.</p> </li> </ul> <p> </p>", "tags": ["usage", "configure"]}, {"location": "usage/ipset/#using-manual-additions", "title": "Using Manual Additions", "text": "<p>Unlike Blocklists which are a pre-compiled list of IPs you want to allow / deny, the other option is to manually add your own IP addresses to a list. To manually compile your own list, you can do so using the <code>ipset</code> command. This is useful for whitelisting trusted IPs or blocking specific addresses.</p> <p>To do this, you need to:</p> <ul> <li>Create a list, this is where all of the IP addresses will be stored</li> <li>Add an IP to the list which is who will be allowed or denied access to your server</li> </ul> <p> </p>", "tags": ["usage", "configure"]}, {"location": "usage/ipset/#create-list", "title": "Create List", "text": "<p>Create a custom IPSET (if it doesn\u2019t already exist):</p>  Whitelist Blacklist <pre><code>sudo ipset create my_whitelist hash:ip\n</code></pre> <pre><code>sudo ipset create my_blacklist hash:ip\n</code></pre> <p></p> <p>You can also expand on this command and specify that you want to store comments, or set a maximum allowed number of IPs in your list.</p>  Whitelist Blacklist <pre><code>sudo ipset create my_whitelist hash:ip comment hashsize 6553\n</code></pre> <pre><code>sudo ipset create my_blacklist hash:ip comment hashsize 6553\n</code></pre> <p></p> <p>The following are some of the options you can use when creating your list:</p> <code>my_whitelist</code> <ul> <li>Name list / set you are creating.</li> <li>You will reference it later in commands like <code>ipset add</code>, <code>ipset list</code>, or in <code>iptables</code> rules.</li> </ul> <code>hash:ip</code> <ul> <li>Specifies the type of IP set.</li> <li>Other types: <code>hash:net</code> for networks, or <code>list:set</code> for nested sets.</li> </ul> <code>comment</code> <ul> <li>Allows each entry in the set to store a comment.</li> <li>Without this option, attempting to add a comment will fail.</li> </ul> <code>hashsize 6553</code> <ul> <li>Defines the initial size of the hash table.</li> <li>Determines how many \u201cbuckets\u201d the hash table will initially have for storing IPs.</li> <li>Setting this properly improves performance for large sets:<ul> <li>too small = collisions</li> <li>too large = slightly more memory used</li> </ul> </li> <li>You can scale it based on the expected number of entries in the set.</li> </ul> <p> </p>", "tags": ["usage", "configure"]}, {"location": "usage/ipset/#add-ip-to-list", "title": "Add IP to List", "text": "<p>These commands let you add single IP addresses to your whitelist or blacklist:</p> Overlapping IP addresses <p>Even single IPs can overlap with ranges. Always ensure that whitelists are prioritized in your firewall rules so they aren\u2019t accidentally blocked by broader blacklist ranges.</p> <p></p>  Whitelist Blacklist <p>Adds the IP <code>192.0.2.15</code> to your whitelist, granting access to this single address.</p> <pre><code>sudo ipset add my_whitelist 192.0.2.15\n</code></pre> <p>If you created your IPSET list with the <code>comment</code> parameter, you can also add a comment to your entry.</p> <pre><code>sudo ipset add my_whitelist 192.0.2.15 comment \"Localhost device\"\n</code></pre> <p>Adds the IP <code>203.0.113.42</code> to your blacklist, blocking access from this single address.</p> <pre><code>sudo ipset add my_blacklist 203.0.113.42\n</code></pre> <p>If you created your IPSET list with the <code>comment</code> parameter, you can also add a comment to your entry.</p> <pre><code>sudo ipset add my_blacklist 203.0.113.42 comment \"Suspicious SSH activity\"\n</code></pre> <p> </p>", "tags": ["usage", "configure"]}, {"location": "usage/ipset/#add-subnet-range-to-list", "title": "Add Subnet Range to List", "text": "<p>These commands let you add a range of IP addresses to either your whitelist or blacklist. This is especially useful when the source server owns multiple IPs within a network block.</p> Overlapping IP addresses <p>When working with ranges, overlapping IPs may exist between your whitelist and blacklist. The order of rules in your firewall matters\u2014whitelisted IPs should be checked before blacklist rules to ensure access is correctly allowed.</p> <p></p>  Whitelist Blacklist <p>Adds the entire <code>198.51.100.0/24</code> subnet to your whitelist, allowing all IPs in this range to access your server.</p> <pre><code>sudo ipset add my_whitelist 198.51.100.0/24\n</code></pre> <p>Adds the <code>203.0.113.0/24</code> subnet to your blacklist, blocking all IPs in this range from connecting.</p> <pre><code>sudo ipset add my_blacklist 203.0.113.0/24\n</code></pre> <p> </p>", "tags": ["usage", "configure"]}, {"location": "usage/ipset/#check-ip-in-list", "title": "Check IP in List", "text": "<p>These commands allow you to confirm whether or not an IP already exists in one of your lists. It will return one of two responses:</p> <ol> <li><code>192.0.2.15</code> is in set <code>my_whitelist</code></li> <li><code>192.0.2.11</code> is NOT in set <code>my_whitelist</code></li> </ol>  Whitelist Blacklist <pre><code>sudo ipset test my_whitelist 192.0.2.15\n</code></pre> <pre><code>sudo ipset test my_blacklist 203.0.113.42\n</code></pre> <p></p> <p>You can also use a more complex command to search for an IP in any list. Change <code>1.2.3.4</code> to the IP you are looking for.</p>  Command <p>The below command will return <code>IP in set: my_listname</code> if it exists</p> <pre><code>for s in $(sudo ipset list -n); do sudo ipset test \"$s\" 203.0.113.42 2&gt;/dev/null &amp;&amp; echo \"IP in set: $s\"; done\n</code></pre> <p> </p>", "tags": ["usage", "configure"]}, {"location": "usage/ipset/#show-list", "title": "Show List", "text": "<p>Once you have your lists created, you can print information about the lists or the number of IP addresses within the list by list name.  To list all of your IPSET lists, run the command:</p>  Command Output <pre><code>sudo ipset list -n\n</code></pre> <pre><code>my_whitelist\nmy_blacklist\n</code></pre> <p></p> <p>You can also show all of the IPs associated with a specific list, or return the total count.</p>  Whitelist Blacklist <pre><code># #\n#   List all IPs in a specific set\n# #\n\nsudo ipset list my_whitelist\n\nName: my_whitelist\nType: hash:ip\nRevision: 6\nHeader: family inet hashsize 8192 maxelem 65536 comment bucketsize 12 initval 0x8d108d64\nSize in memory: 448\nReferences: 0\nNumber of entries: 1\nMembers:\n192.0.2.15 comment \"Localhost device\"\n\n# #\n#   Count entries\n# #\n\nsudo ipset list my_whitelist -o save | awk '/add/ {print $3}' | wc -l\n\n1\n</code></pre> <pre><code># #\n#   List all IPs in a specific set\n# #\n\nsudo ipset list my_blacklist\n\nName: my_blacklist\nType: hash:ip\nRevision: 6\nHeader: family inet hashsize 8192 maxelem 65536 comment bucketsize 12 initval 0x65606406\nSize in memory: 448\nReferences: 0\nNumber of entries: 1\nMembers:\n203.0.113.42 comment \"Suspicious SSH activity\"\n\n# #\n#   Count entries\n# #\n\nsudo ipset list my_blacklist -o save | awk '/add/ {print $3}' | wc -l\n\n1\n</code></pre> <p> </p>", "tags": ["usage", "configure"]}, {"location": "usage/ipset/#enable-or-disable-list", "title": "Enable or Disable List", "text": "<p>Once you have your IPSET list created and have populated it with the addresses you want, it's time to enforce the list and add it to our iptable rules.</p>  Whitelist Blacklist <p>The following will enforce your whitelist, ensuring that all IPs within <code>my_whitelist</code> will be  allowed through the <code>INPUT</code> and <code>FORWARD</code> chains.</p> <pre><code>sudo iptables -I INPUT -m set --match-set my_whitelist src -j ACCEPT\nsudo iptables -I FORWARD -m set --match-set my_whitelist src -j ACCEPT\n</code></pre> <p></p> <p>If you want to remove the rules and stop enforcing your whitelist, run the same command with the <code>-D</code> flag:</p> <pre><code>sudo iptables -D INPUT -m set --match-set my_whitelist src -j ACCEPT\nsudo iptables -D FORWARD -m set --match-set my_whitelist src -j ACCEPT\n</code></pre> <p>The following will enforce your blacklist, ensuring that all IPs within <code>my_whitelist</code> will be  denied through the <code>INPUT</code> and <code>FORWARD</code> chains.</p> <pre><code>sudo iptables -I INPUT -m set --match-set my_blacklist src -j DROP\nsudo iptables -I FORWARD -m set --match-set my_blacklist src -j DROP\n</code></pre> <p></p> <p>If you want to remove the rules and stop enforcing your whitelist, run the same command with the <code>-D</code> flag:</p> <pre><code>sudo iptables -D INPUT -m set --match-set my_blacklist src -j DROP\nsudo iptables -D FORWARD -m set --match-set my_blacklist src -j DROP\n</code></pre> <p></p> <p>From this point forward, your IPSET lists will be enforced.</p> <ul> <li>If a user with the IP <code>192.0.2.15</code> tries to access your server;  allow them</li> <li>If a user with the IP <code>203.0.113.42</code> tries to access your server;  deny them</li> </ul> <p> </p>", "tags": ["usage", "configure"]}, {"location": "usage/ipset/#delete-ip-from-list", "title": "Delete IP from List", "text": "<p>If you decide to remove an IP from your whitelist or blacklist, you can use the following commands:</p>  Whitelist Blacklist <pre><code>sudo ipset del my_whitelist 198.51.100.0/24\n</code></pre> <pre><code>sudo ipset del my_blacklist 203.0.113.0/24\n</code></pre> <p> </p>", "tags": ["usage", "configure"]}, {"location": "usage/ipset/#delete-list", "title": "Delete List", "text": "<p>If you have decided that you no longer need an IPSET list, you need to remove the iptables rule, and then delete the IPSET list itself.</p>  Whitelist Blacklist <p>The following will remove your whitelist iptables rule</p> <pre><code>sudo iptables -D INPUT -m set --match-set my_whitelist src -j ACCEPT\nsudo iptables -D FORWARD -m set --match-set my_whitelist src -j ACCEPT\n</code></pre> <p>The following will remove your blacklist iptables rule</p> <pre><code>sudo iptables -D INPUT -m set --match-set my_blacklist src -j DROP\nsudo iptables -D FORWARD -m set --match-set my_blacklist src -j DROP\n</code></pre> <p></p> <p>After deleting the iptables rule, we can delete the IPSET list:</p>  Whitelist Blacklist <pre><code>sudo ipset destroy my_whitelist\n</code></pre> <pre><code>sudo ipset destroy my_blacklist\n</code></pre> <p> </p>", "tags": ["usage", "configure"]}, {"location": "usage/ipset/#save-list", "title": "Save List", "text": "<p>You can save your entire IPSET list to a file which allows you to back it up and restore it later.</p>  Whitelist Blacklist <pre><code>sudo ipset save my_whitelist &gt; whitelist.ipset\n</code></pre> <pre><code>sudo ipset save my_blacklist &gt; blacklist.ipset\n</code></pre> <p> </p>", "tags": ["usage", "configure"]}, {"location": "usage/ipset/#restore-list", "title": "Restore List", "text": "<p>If you would like to restore a backed up IPSET list, you can do so with the following commands:</p>  Whitelist Blacklist <pre><code>sudo ipset restore &lt; whitelist.ipset\n</code></pre> <pre><code>sudo ipset restore &lt; blacklist.ipset\n</code></pre> <p></p> Overwriting Existing Rules <p>If you attempt to import white or blacklisted IPs which are already in a list; the import will fail. The list must first be destroyed, or the IP must be deleted from the list before the import of that rule will be successful.</p> <p>If you have an existing list that needs to be destroyed first and then import the list again; run the commands:</p>  Command <pre><code># Destroy original blacklist\nsudo ipset destroy my_blacklist\n\n# Restore blacklist from file\nsudo ipset restore &lt; blacklist.ipset\n</code></pre> <p></p> <p>You can also restore, but ignore any errors that occur and continue importing the rest of the list. This means that duplicate IPs that already exist will be skipped, but any new IPs in the restore file that you may not already have, will be restored and added to the IPSET.</p>  Command <pre><code>sudo ipset restore -! &lt; blacklist.ipset\n</code></pre> <p> </p>", "tags": ["usage", "configure"]}, {"location": "usage/ipset/#flush-list", "title": "Flush List", "text": "<p>Flushing an IPSET list differs from deleting. When you delete a list, you destroy the entire list and all IPs in the list. Flushing a list deletes all IPs in the list, but keeps the list itself intact so that you can add more IPs later. To flush a list:</p>  Whitelist Blacklist <pre><code>sudo ipset flush my_whitelist\n</code></pre> <pre><code>sudo ipset flush my_blacklist\n</code></pre> <p> </p>", "tags": ["usage", "configure"]}, {"location": "usage/ipset/#rename-list", "title": "Rename List", "text": "<p>You can change the name of a list with the following commands:</p>  Whitelist Blacklist <pre><code>sudo ipset rename my_whitelist my_new_whitelist\n</code></pre> <pre><code>sudo ipset rename my_blacklist my_new_blacklist\n</code></pre> <p></p> <p></p>", "tags": ["usage", "configure"]}, {"location": "usage/ipset/#troubleshooting", "title": "Troubleshooting", "text": "<p>The following are a list of common issues or errors, and potential solutions for correcting these issues.</p> <p></p>", "tags": ["usage", "configure"]}, {"location": "usage/ipset/#open3-exec-of-sbinipset-flush-failed-no-such-file-or-directory-at-usrsbincsf", "title": "open3: exec of /sbin/ipset flush failed: No such file or directory at /usr/sbin/csf", "text": "<p>This error means that you have enabled IPSET within CSF, but do not have the package itself installed. Open terminal and run the command:</p>  Debian/Ubuntu (apt-get) CentOS/RHEL (yum/dnf) <pre><code>sudo apt-get update\nsudo apt-get install ipset\n</code></pre> <pre><code># using yum\nsudo yum install ipset\n\n#Using dnf\nsudo dnf install ipset\n</code></pre> <p> </p>", "tags": ["usage", "configure"]}, {"location": "usage/ipset/#set-cannot-be-destroyed-it-is-in-use-by-a-kernel-component", "title": "Set cannot be destroyed: it is in use by a kernel component", "text": "<p>This error appears when you try to delete an IPSET list while it\u2019s still in use by iptables. Before removing the set itself, you must first delete any iptables rules that reference it. Run the following commands to detach the set from iptables:</p> <pre><code>sudo iptables -D INPUT -m set --match-set my_list src -j DROP\nsudo iptables -D FORWARD -m set --match-set my_list src -j DROP\n</code></pre> <p></p> <p>Then try to delete the IPSET list again:</p> <pre><code>sudo ipset destroy my_list\n</code></pre> <p></p> <p></p>", "tags": ["usage", "configure"]}, {"location": "usage/ipset/#next-steps", "title": "Next Steps", "text": "<p>Select what documentation you would like to proceed with next ...</p> <ul> <li> <p> Setting Up Blocklists</p> <p>Blocklists in CSF allow you to automatically block connections from known malicious IP addresses, helping to protect your server from abusive traffic.  </p> <p>This chapter explains how to configure and use blocklists, including CSF\u2019s official blocklist and third-party sources.  </p> <p>You\u2019ll also learn how to enable blocklists with or without IPSET, ensuring they work efficiently no matter the size of the list.</p> </li> <li> <p> Geographical IP Block Integration</p> <p>Configure geographical restrictions in CSF to whitelist or blacklist specific regions from accessing your server.</p> <p>This chapter covers enabling the GeoIP blocklist feature using third-party services such as MaxMind (requires an API key), db-ip, ipdeny, or iptoasn.</p> <p>These services allow you to control access based on location while keeping your server secure.</p> </li> </ul> <p> </p>", "tags": ["usage", "configure"]}, {"location": "usage/prepost/", "title": "Usage \u203a Pre/Post Loader Scripts", "text": "", "tags": ["usage", "configure"]}, {"location": "usage/prepost/#usage-pre-and-post-loader-scripts", "title": "Usage \u203a Pre and Post Loader Scripts", "text": "<p>CSF includes dedicated directories where you can place custom Bash scripts to run at specific stages of the firewall\u2019s startup process. This allows you to easily maintain persistent, custom firewall rules that are automatically applied each time the CSF service starts or restarts.</p> <p></p> <p></p>", "tags": ["usage", "configure"]}, {"location": "usage/prepost/#location-and-structure", "title": "Location and Structure", "text": "<p>This section outlines exactly how the pre and post scripts are initialized and loaded.</p> <p></p>", "tags": ["usage", "configure"]}, {"location": "usage/prepost/#loader-scripts", "title": "Loader Scripts", "text": "<ul> <li>When CSF is installed for the first time, two starter files  <code>/usr/local/csf/bin/csfpre.sh</code> and  <code>/usr/local/csf/bin/csfpost.sh</code> are automatically created on your system (only if they don\u2019t already exist). These serve as base loader scripts, giving you a foundation to add your own custom logic later on.<ul> <li>You must create your own pre/post loader folders  <code>/usr/local/include/csf/pre.d/</code> and  <code>/usr/local/include/csf/post.d/</code></li> </ul> </li> <li>If you already have existing pre/post loader files in place, CSF will respect your current setup and skip creating the starter versions \u2014 allowing you to continue using your existing scripts without interruption.</li> </ul> <code>csfpre.sh</code> <ul> <li>The file <code>csfpre.sh</code> iterates over the loader folder  <code>pre.d</code> and runs any scripts found there.</li> <li>There are two allowed locations for this loader script \u2014 either one is valid:<ul> <li> <code>/usr/local/csf/bin/csfpre.sh</code> (default)</li> <li> <code>/etc/csf/csfpre.sh</code> (alternative)</li> </ul> </li> <li>Runs before all default iptables rules are applied; allows you to add custom rules which persist alongside CSF's defaults.</li> </ul> <code>csfpost.sh</code> <ul> <li>The file <code>post.sh</code> iterates over the loader folder  <code>post.d</code> and runs any scripts found there.</li> <li>There are two allowed locations for this loader script \u2014 either one is valid:<ul> <li> <code>/usr/local/csf/bin/csfpost.sh</code> (default)</li> <li> <code>/etc/csf/csfpost.sh</code> (alternative)</li> </ul> </li> <li>Runs after all default iptables rules are applied, allowing you to add custom rules which persist alongside CSF's defaults.</li> </ul> pre/post.sh: Multiple Allowed Locations <p>By default, installing CSF will create your loader files <code>pre.d</code> and <code>post.d</code> in the folder <code>/usr/local/csf/bin/</code>. However, this location is not required\u2014you can place these loader files in any of the following acceptable paths:</p> <ul> <li> csfpre.sh<ul> <li><code>/usr/local/csf/bin/csfpre.sh</code></li> <li><code>/etc/csf/csfpre.sh</code></li> </ul> </li> <li> csfpost.sh<ul> <li><code>/usr/local/csf/bin/csfpost.sh</code></li> <li><code>/etc/csf/csfpost.sh</code></li> </ul> </li> </ul> <p>All folders above are automatically scanned when you start or restart CSF. You can add scripts to both locations if you choose.</p> <p>You can also add your bash commands directly into the files <code>csfpre.sh</code> and <code>csfpost.sh</code> themselves.</p> <p></p>", "tags": ["usage", "configure"]}, {"location": "usage/prepost/#loader-folders", "title": "Loader Folders", "text": "<p>When the loader scripts run, they check their designated folders for any custom scripts you\u2019ve added. By placing your scripts in these folders, you can create firewall rules that are automatically applied every time CSF starts or restarts, ensuring your custom rules persist.</p> <p></p> <code>/usr/local/include/csf/pre.d/</code> <ul> <li>Stores bash scripts that run before CSF applies its default iptables rules.  </li> <li>Scripts placed here run automatically every time CSF starts or restarts.</li> </ul> <code>/usr/local/include/csf/post.d/</code> <ul> <li>Stores bash scripts that run after CSF applies its default iptables rules.  </li> <li>Scripts placed here run automatically every time CSF starts or restarts.</li> </ul> Defining A New Loader Folder <p>The CSF loader folder which is scanned is defined within the loader files themselves. To change the folder that the loader uses, open <code>csfpre.sh</code> and <code>csfpost.sh</code> and change the following lines:</p>  csfpre.sh csfpost.sh <pre><code>path_csfpred=\"/usr/local/include/csf/pre.d\"\n</code></pre> <pre><code>path_csfpostd=\"/usr/local/include/csf/post.d\"\n</code></pre> <p></p>", "tags": ["usage", "configure"]}, {"location": "usage/prepost/#loader-example", "title": "Loader Example", "text": "<p>We have provided both example structures of how your scripts can be set up. Script names can be any name you want, no restrictions.</p>  Option 1 (default) Option 2 <p>This example stores your loader files in:</p> <ul> <li><code>/usr/local/csf/bin/csfpre.sh</code></li> <li><code>/usr/local/csf/bin/csfpost.sh</code></li> </ul> <pre><code>\ud83d\udcc1 usr\n  \ud83d\udcc1 local\n      \ud83d\udcc1 csf\n        \ud83d\udcc1 bin\n            \ud83d\udcc4 csfpre.sh\n            \ud83d\udcc4 csfpost.sh\n      \ud83d\udcc1 include\n        \ud83d\udcc1 csf\n            \ud83d\udcc1 pre.d\n              \ud83d\udcc4 my_rules_before.sh\n            \ud83d\udcc1 post.d\n              \ud83d\udcc4 my_docker_rules.sh\n              \ud83d\udcc4 openvpn_rules.sh\n</code></pre> <p>This example stores your loader files in:</p> <ul> <li><code>/etc/csf/csfpre.sh</code></li> <li><code>/etc/csf/csfpost.sh</code></li> </ul> <pre><code>\ud83d\udcc1 etc\n  \ud83d\udcc1 csf\n      \ud83d\udcc4 csfpre.sh\n      \ud83d\udcc4 csfpost.sh\n\ud83d\udcc1 usr\n  \ud83d\udcc1 local\n      \ud83d\udcc1 include\n        \ud83d\udcc1 csf\n            \ud83d\udcc1 pre.d\n              \ud83d\udcc4 my_rules_before.sh\n            \ud83d\udcc1 post.d\n              \ud83d\udcc4 my_docker_rules.sh\n              \ud83d\udcc4 openvpn_rules.sh\n</code></pre> <p></p> <p></p>", "tags": ["usage", "configure"]}, {"location": "usage/prepost/#writing-custom-rules", "title": "Writing Custom Rules", "text": "<p>As outlined earlier, the <code>pre.d</code> and <code>post.d</code> folders allow you to drop your own custom bash scripts inside the folders which will be responsible for any iptable rules you need to add to CSF every time the service is started or restarted. </p> <p>We will provide an example script below just to outline what can be done. In our example, we will create <code>/usr/local/include/csf/post.d/ports-blacklist.sh</code>. The script will do the following:</p> <ul> <li>Defines a list of blacklisted ports using a JSON array in <code>BLACKLIST_PORTS</code>. Each entry includes a port number and a comment describing it.</li> <li>Iterates over each port in the blacklist using <code>jq</code> to parse the JSON.</li> <li>For each port:<ul> <li>Extracts the port number <code>ENTRY_PORT</code> and its description/comment <code>ENTRY_COMMENT</code>.</li> <li>Checks if a UDP rule already exists in iptables for that port:<ul> <li>Sets <code>DELETE_INPUT_UDP=1</code> if the rule does not exist.</li> </ul> </li> <li>Checks if a TCP rule already exists in iptables for that port:<ul> <li>Sets <code>DELETE_INPUT_TCP=1</code> if the rule does not exist.</li> </ul> </li> <li>Adds the firewall rules if they are not already present:<ul> <li>Inserts a rule to drop UDP traffic to the port.</li> <li>Inserts a rule to drop TCP traffic to the port.</li> </ul> </li> </ul> </li> </ul> <p></p> <p>Add the code below to your new file <code>/usr/local/include/csf/post.d/ports-blacklist.sh</code> and save.</p> <pre><code>#!/bin/sh\n\n# #\n#   Settings &gt; Ports\n# #\n\nBLACKLIST_PORTS=$(cat &lt;&lt;EOF\n[\n    {\"port\":\"111\", \"comment\":\"used by sunrpc/rpcbind, has vulnerabilities\"}\n]\nEOF\n)\n\n# #\n#   Define &gt; Iptables\n# #\n\npath_iptables4=$(which iptables)\npath_iptables6=$(which ip6tables)\n\n# #\n#   Loop blacklists, create if missing\n# #\n\nprintf \"\\n\"\nprintf \"  + RESTRICT      Blacklisting Ports\\n\"\n\necho \"$BLACKLIST_PORTS\" | jq -c '.[]' | while IFS= read -r row; do\n\n    ENTRY_PORT=$(echo \"$row\" | jq -r '.port')\n    ENTRY_COMMENT=$(echo \"$row\" | jq -r '.comment')\n\n    # #\n    #   See if ports already exist in iptables\n    # #\n\n    DELETE_INPUT_UDP=0\n    DELETE_INPUT_TCP=0\n\n    $path_iptables4 -C INPUT -p udp --dport \"$ENTRY_PORT\" -j DROP &gt;/dev/null 2&gt;&amp;1 || DELETE_INPUT_UDP=1\n    $path_iptables4 -C INPUT -p tcp --dport \"$ENTRY_PORT\" -j DROP &gt;/dev/null 2&gt;&amp;1 || DELETE_INPUT_TCP=1\n\n    # #\n    #   Drop Port &gt; UDP\n    # #\n\n    if [ \"$DELETE_INPUT_UDP\" = \"0\" ]; then\n        printf \"                   \u2713 Port already blacklisted\\n\"\n    else\n        sudo $path_iptables4 -I INPUT -p udp --dport \"$ENTRY_PORT\" -j DROP\n        printf '%-17s %-50s %-55s\\n' \" \" \"\u251c\u2500 Blacklisting $ENTRY_PORT (UDP)\" \"$ENTRY_COMMENT\"\n    fi\n\n    # #\n    #   Drop Port &gt; TCP\n    # #\n\n    if [ \"$DELETE_INPUT_TCP\" = \"0\" ]; then\n        printf \"                   \u2713 Port already blacklisted\\n\"\n    else\n        sudo $path_iptables4 -I INPUT -p tcp --dport \"$ENTRY_PORT\" -j DROP\n        printf '%-17s %-50s %-55s\\n' \" \" \"\u251c\u2500 Blacklisting $ENTRY_PORT (TCP)\" \"$ENTRY_COMMENT\"\n    fi\n\ndone\n</code></pre> <p></p> <p>The script itself is very easy to use. We make sure to edit the list <code>BLACKLIST_PORTS</code> and populate it with ports we absolutely do not want giving access to:</p> <pre><code>BLACKLIST_PORTS=$(cat &lt;&lt;EOF\n[\n    {\"port\":\"111\", \"comment\":\"used by sunrpc/rpcbind, has vulnerabilities\"}\n    {\"port\":\"21\", \"comment\":\"insecure ftp\"}\n]\nEOF\n)\n</code></pre> <p></p> <p>After you edit the list of ports, simply restart CSF's services and the script will be automatically re-loaded:</p>  Command Output <pre><code>sudo csf -ra\n</code></pre> <pre><code>LOGDROPOUT  all opt -- in * out !lo  0.0.0.0/0  -&gt; 0.0.0.0/0  \nLOGDROPIN  all opt -- in !lo out *  0.0.0.0/0  -&gt; 0.0.0.0/0  \ncsf: FASTSTART loading DNS (IPv4)\nLOCALOUTPUT  all opt -- in * out !lo  0.0.0.0/0  -&gt; 0.0.0.0/0  \nLOCALINPUT  all opt -- in !lo out *  0.0.0.0/0  -&gt; 0.0.0.0/0  \nRunning /usr/local/csf/bin/csfpost.sh\nLoading post-script: /usr/local/include/csf/post.d/ports-blacklist.sh\n\n+ RESTRICT      Blacklisting Ports\n                  \u251c\u2500 Blacklisting 111 (UDP) used by sunrpc/rpcbind, has vulnerabilities\n                  \u251c\u2500 Blacklisting 111 (TCP) used by sunrpc/rpcbind, has vulnerabilities\n                  \u251c\u2500 Blacklisting 21 (UDP) insecure ftp\n                  \u251c\u2500 Blacklisting 21 (TCP) insecure ftp\n</code></pre> <p></p> <p>We can now view iptables to confirm our rules were added. Iptables will resolve whatever service is associated with a port, which means port <code>111</code> will show as <code>sunrpc</code>. If you wish to show just the port number, append <code>-n</code> to your iptables command:</p>  Command Output <pre><code>sudo iptables -L -n\n</code></pre> <p>If you use the command <code>sudo iptables -L</code></p> <pre><code>Chain INPUT (policy DROP)\ntarget     prot opt source               destination         \nDROP       tcp  --  anywhere             anywhere             tcp dpt:sunrpc\nDROP       udp  --  anywhere             anywhere             udp dpt:sunrpc\n\nChain LOGDROPIN (2 references)\ntarget     prot opt source               destination         \nDROP       tcp  --  anywhere             anywhere             tcp dpt:sunrpc\nDROP       udp  --  anywhere             anywhere             udp dpt:sunrpc\n</code></pre> <p></p> <p>If you use the command <code>sudo iptables -L -n</code></p> <pre><code>Chain INPUT (policy DROP)\ntarget     prot opt source               destination         \nDROP       6    --  0.0.0.0/0            0.0.0.0/0            tcp dpt:111\nDROP       17   --  0.0.0.0/0            0.0.0.0/0            udp dpt:111\n\nChain LOGDROPIN (2 references)\ntarget     prot opt source               destination         \nDROP       6    --  0.0.0.0/0            0.0.0.0/0            tcp dpt:111\nDROP       17   --  0.0.0.0/0            0.0.0.0/0            udp dpt:111\n</code></pre> <p></p> <p></p>", "tags": ["usage", "configure"]}, {"location": "usage/prepost/#conclusion", "title": "Conclusion", "text": "<p>From this point forward, you can create any number of pre and post scripts for your own firewall setup. Simply drop the scripts in the folders specified in the section Location and Structure.</p> <p></p> <p></p>", "tags": ["usage", "configure"]}, {"location": "usage/prepost/#next-steps", "title": "Next Steps", "text": "<p>Select what documentation you would like to proceed with next ...</p> <ul> <li> <p> Introduction to IPSETs</p> <p>Improve firewall efficiency in CSF by enabling IPSET integration to manage large blocklists.  </p> <p>This chapter covers installing the IPSET package and configuring CSF to use it for handling blocklists.  </p> <p>Using IPSET allows CSF to group IP addresses into sets, reducing the number of iptables rules and improving overall performance.</p> </li> <li> <p> Setting Up Blocklists</p> <p>Blocklists in CSF allow you to automatically block connections from known malicious IP addresses, helping to protect your server from abusive traffic.  </p> <p>This chapter explains how to configure and use blocklists, including CSF\u2019s official blocklist and third-party sources.  </p> <p>You\u2019ll also learn how to enable blocklists with or without IPSET, ensuring they work efficiently no matter the size of the list.</p> </li> </ul> <p> </p>", "tags": ["usage", "configure"]}, {"location": "usage/cheatsheet/commands/", "title": "Cheatsheet \u203a Commands", "text": "", "tags": ["cheatsheet", "commands"]}, {"location": "usage/cheatsheet/commands/#cheatsheet-commands", "title": "Cheatsheet \u203a Commands", "text": "<p>This section outlines all of the commands that can be run in your server\u2019s terminal for ConfigServer Security &amp; Firewall (CSF) which will allow you to:</p> <ul> <li>Manage your firewall  </li> <li>Add whitelisted IPs  </li> <li>Start or stop services </li> <li>List your current rules  </li> </ul> <p></p>", "tags": ["cheatsheet", "commands"]}, {"location": "usage/cheatsheet/commands/#enable", "title": "Enable", "text": "<p><code>-e,  --enable</code></p> <p>Enable csf and lfd if previously disabled</p> <pre><code>sudo csf -e\n</code></pre> <p></p>", "tags": ["cheatsheet", "commands"]}, {"location": "usage/cheatsheet/commands/#disable", "title": "Disable", "text": "<p><code>-x,  --disable</code></p> <p>Disable csf and lfd completely</p> <pre><code>sudo csf -x\n</code></pre> <p></p>", "tags": ["cheatsheet", "commands"]}, {"location": "usage/cheatsheet/commands/#start", "title": "Start", "text": "<p><code>-s,  --start</code></p> <p>Starts the firewall and applies any rules that have been configured at startup.</p> <pre><code>sudo csf -s\n</code></pre> <p></p>", "tags": ["cheatsheet", "commands"]}, {"location": "usage/cheatsheet/commands/#stop", "title": "Stop", "text": "<p><code>-f,  --stop</code></p> <p>Flush/Stop firewall rules (Note: lfd may restart csf)</p> <pre><code>sudo csf -f\n</code></pre>  Terminal <pre><code>Flushing chain `INPUT'\nFlushing chain `FORWARD'\nFlushing chain `CC_ALLOWPORTS'\n[ ... ]\nDeleting chain `ALLOWIN'\nDeleting chain `ALLOWOUT'\nDeleting chain `CC_ALLOWP'\nDeleting chain `CC_ALLOWPORTS'\n[ ... ]\n</code></pre> <p></p>", "tags": ["cheatsheet", "commands"]}, {"location": "usage/cheatsheet/commands/#restart", "title": "Restart", "text": "<p><code>-r,  --restart</code></p> <p>Restart firewall rules (csf)</p> <pre><code>sudo csf -r\n</code></pre>  Terminal <pre><code>Flushing chain `INPUT'\nFlushing chain `FORWARD'\nFlushing chain `OUTPUT'\nFlushing chain `ALLOWIN'\nFlushing chain `ALLOWOUT'\nFlushing chain `CC_ALLOWP'\nFlushing chain `CC_ALLOWPORTS'\n[ ... ]\n</code></pre> <p></p>", "tags": ["cheatsheet", "commands"]}, {"location": "usage/cheatsheet/commands/#quick-restart", "title": "Quick Restart", "text": "<p><code>-q,  --startq</code></p> <p>Quick restart (csf restarted by lfd)</p> <pre><code>sudo csf -q\n</code></pre>  Terminal <pre><code>lfd will restart csf within the next 5 seconds\n</code></pre> <p></p>", "tags": ["cheatsheet", "commands"]}, {"location": "usage/cheatsheet/commands/#force-restart", "title": "Force Restart", "text": "<p><code>-sf, --startf</code></p> <p>Force CLI restart regardless of LFDSTART setting</p> <pre><code>sudo csf -sf\n</code></pre>  Terminal <pre><code>Flushing chain `INPUT'\nFlushing chain `FORWARD'\nFlushing chain `OUTPUT'\nFlushing chain `ALLOWIN'\nFlushing chain `ALLOWOUT'\nFlushing chain `CC_ALLOWP'\nFlushing chain `CC_ALLOWPORTS'\n[ ... ]\n</code></pre> <p></p>", "tags": ["cheatsheet", "commands"]}, {"location": "usage/cheatsheet/commands/#restart-all", "title": "Restart All", "text": "<p><code>-ra, --restartall</code></p> <p>Restart firewall rules (csf) and then restart lfd daemon. Both csf and then lfd should be restarted after making    any  changes  to the configuration files</p> <pre><code>sudo csf -ra\n</code></pre>  Terminal <pre><code>Flushing chain `INPUT'\nFlushing chain `FORWARD'\nFlushing chain `OUTPUT'\nFlushing chain `ALLOWIN'\nFlushing chain `ALLOWOUT'\nFlushing chain `CC_ALLOWP'\nFlushing chain `CC_ALLOWPORTS'\n[ ... ]\n</code></pre> <p></p>", "tags": ["cheatsheet", "commands"]}, {"location": "usage/cheatsheet/commands/#cluster-restart", "title": "Cluster Restart", "text": "<p><code>-crs, --crestart</code></p> <p>Cluster restart csf and lfd</p> <pre><code>sudo csf -crs\n</code></pre> <p></p>", "tags": ["cheatsheet", "commands"]}, {"location": "usage/cheatsheet/commands/#manage-lfd-daemon", "title": "Manage Lfd Daemon", "text": "<p><code>--lfd [stop|start|restart|status]</code></p> <p>Actions to take with the lfd daemon</p> <pre><code>sudo csf --lfd stop\nsudo csf --lfd start\nsudo csf --lfd restart\nsudo csf --lfd status\n</code></pre> stopstartrestartstatus <pre><code>No output\n</code></pre> <pre><code>No output\n</code></pre> <pre><code>\u25cf lfd.service - ConfigServer Security &amp; Firewall - lfd\n    Loaded: loaded (/lib/systemd/system/lfd.service; enabled; preset: enabled)\n    Active: active (running) since 15ms ago\n    Process: 3769 ExecStart=/usr/sbin/lfd (code=exited, status=0/SUCCESS)\n  Main PID: 3782 (lfd - starting)\n      Tasks: 1 (limit: 4613)\n    Memory: 38.7M\n        CPU: 366ms\n    CGroup: /system.slice/lfd.service\n            \u251c\u25003782 \"lfd - starting\"\n            \u2514\u25003784 \"lfd - starting\"\n\nsystemd[1]: Starting lfd.service - ConfigServer Security &amp; Firewall - lfd...\nsystemd[1]: Started lfd.service - ConfigServer Security &amp; Firewall - lfd.\n</code></pre> <pre><code>\u25cf lfd.service - ConfigServer Security &amp; Firewall - lfd\n    Loaded: loaded (/lib/systemd/system/lfd.service; enabled; preset: enabled)\n    Active: active (running) since 1min 3s ago\n    Process: 3769 ExecStart=/usr/sbin/lfd (code=exited, status=0/SUCCESS)\n  Main PID: 3782 (lfd - sleeping)\n      Tasks: 2 (limit: 4613)\n    Memory: 45.2M\n        CPU: 9.476s\n    CGroup: /system.slice/lfd.service\n            \u251c\u25003782 \"lfd - sleeping\"\n            \u2514\u25003791 \"lfd UI\"\n\nsystemd[1]: Starting lfd.service - ConfigServer Security &amp; Firewall - lfd...\nsystemd[1]: Started lfd.service - ConfigServer Security &amp; Firewall - lfd.\n</code></pre> <p></p>", "tags": ["cheatsheet", "commands"]}, {"location": "usage/cheatsheet/commands/#check-for-updates", "title": "Check for Updates", "text": "<p><code>-c,  --check</code></p> <p>Check for updates to csf but do not upgrade</p> <pre><code>sudo csf -c\n</code></pre>  Terminal <pre><code>csf is already at the latest version: v14.20\n</code></pre> <p></p>", "tags": ["cheatsheet", "commands"]}, {"location": "usage/cheatsheet/commands/#update", "title": "Update", "text": "<p><code>-u,  --update</code></p> <p>Check for updates to csf and upgrade if available</p> <pre><code>sudo csf -u\n</code></pre> <p></p>", "tags": ["cheatsheet", "commands"]}, {"location": "usage/cheatsheet/commands/#update-force", "title": "Update (Force)", "text": "<p><code>-uf</code></p> <p>Force an update of csf whether and upgrade is required or not</p> <pre><code>sudo csf -uf\n</code></pre> <p></p>", "tags": ["cheatsheet", "commands"]}, {"location": "usage/cheatsheet/commands/#version", "title": "Version", "text": "<p><code>-v,  --version</code></p> <p>Show csf version</p> <pre><code>sudo csf -v\n</code></pre>  Terminal <pre><code>csf: v15.10 (generic)\n</code></pre> <p></p>", "tags": ["cheatsheet", "commands"]}, {"location": "usage/cheatsheet/commands/#list-firewall-rules-ipv4", "title": "List Firewall Rules (IPv4)", "text": "<p><code>-l,  --status</code></p> <p>List/Show the IPv4 iptables configuration</p> <pre><code>sudo csf -l\n</code></pre>  Terminal <pre><code>iptables filter table\n=====================\nChain INPUT (policy DROP 0 packets, 0 bytes)\nnum   pkts bytes target     prot opt in     out     source               destination         \n1       33  2492 ACCEPT     udp  --  *      *       0.0.0.0/0            0.0.0.0/0            multiport dports 4000,5353\n2      758 55610 ACCEPT     tcp  --  *      *       0.0.0.0/0            0.0.0.0/0            multiport dports 4000\n3        0     0 ACCEPT     udp  --  *      *       0.0.0.0/0            0.0.0.0/0            multiport dports 5353\n4    5209K   28G LOCALINPUT  all  --  !lo    *       0.0.0.0/0            0.0.0.0/0           \n13       3   180 ACCEPT     tcp  --  !lo    *       0.0.0.0/0            0.0.0.0/0            ctstate NEW tcp dpt:22\n14     998 56956 ACCEPT     tcp  --  !lo    *       0.0.0.0/0            0.0.0.0/0            ctstate NEW tcp dpt:25\n15     123  5612 ACCEPT     tcp  --  !lo    *       0.0.0.0/0            0.0.0.0/0            ctstate NEW tcp dpt:53\n16      16   680 ACCEPT     tcp  --  !lo    *       0.0.0.0/0            0.0.0.0/0            ctstate NEW tcp dpt:853\n17       2   100 ACCEPT     tcp  --  !lo    *       0.0.0.0/0            0.0.0.0/0            ctstate NEW tcp dpt:80\n18      74  3148 ACCEPT     tcp  --  !lo    *       0.0.0.0/0            0.0.0.0/0            ctstate NEW tcp dpt:110\n19     125  5624 ACCEPT     tcp  --  !lo    *       0.0.0.0/0            0.0.0.0/0            ctstate NEW tcp dpt:143\n</code></pre> <p></p> <p></p>", "tags": ["cheatsheet", "commands"]}, {"location": "usage/cheatsheet/commands/#list-firewall-rules-ipv6", "title": "List Firewall Rules (IPv6)", "text": "<p><code>-l6, --status6</code></p> <p>List/Show the IPv6 ip6tables configuration</p> <pre><code>sudo csf -l6\n</code></pre>  Terminal <pre><code>ip6tables filter table\n======================\nChain INPUT (policy DROP 0 packets, 0 bytes)\nnum   pkts bytes target     prot opt in     out     source               destination         \n8        0     0 ACCEPT     all      !lo    *       ::/0                 ::/0                 ctstate RELATED,ESTABLISHED\n9        0     0 ACCEPT     tcp      !lo    *       ::/0                 ::/0                 ctstate NEW tcp dpt:20\n10       0     0 ACCEPT     tcp      !lo    *       ::/0                 ::/0                 ctstate NEW tcp dpt:21\n11       0     0 ACCEPT     tcp      !lo    *       ::/0                 ::/0                 ctstate NEW tcp dpt:22\n12       0     0 ACCEPT     tcp      !lo    *       ::/0                 ::/0                 ctstate NEW tcp dpt:25\n13       0     0 ACCEPT     tcp      !lo    *       ::/0                 ::/0                 ctstate NEW tcp dpt:53\n14       0     0 ACCEPT     tcp      !lo    *       ::/0                 ::/0                 ctstate NEW tcp dpt:853\n15       0     0 ACCEPT     tcp      !lo    *       ::/0                 ::/0                 ctstate NEW tcp dpt:80\n16       0     0 ACCEPT     tcp      !lo    *       ::/0                 ::/0                 ctstate NEW tcp dpt:110\n17       0     0 ACCEPT     tcp      !lo    *       ::/0                 ::/0                 ctstate NEW tcp dpt:143\n</code></pre> <p></p>", "tags": ["cheatsheet", "commands"]}, {"location": "usage/cheatsheet/commands/#add-ip-to-allow-list", "title": "Add IP to Allow List", "text": "<p><code>-a,  --add ip [comment]</code></p> <p>Allow an IP and add to <code>/etc/csf/csf.allow</code></p> <pre><code>sudo csf -a &lt;IP_ADDRESS&gt;\nsudo csf -a 142.250.189.142\n</code></pre>  Terminal <pre><code>Adding 142.250.189.142 to csf.allow and iptables ACCEPT...\ncsf: IPSET adding [142.250.189.142] to set [chain_ALLOW]\n</code></pre> <p></p>", "tags": ["cheatsheet", "commands"]}, {"location": "usage/cheatsheet/commands/#remove-ip-to-allow-list", "title": "Remove IP to Allow List", "text": "<p><code>-ar, --addrm ip</code></p> <p>Remove an IP from <code>/etc/csf/csf.allow</code> and delete rule</p> <pre><code>sudo csf -ar &lt;IP_ADDRESS&gt;\n</code></pre> <p></p>", "tags": ["cheatsheet", "commands"]}, {"location": "usage/cheatsheet/commands/#add-ip-to-deny-list", "title": "Add IP to Deny List", "text": "<p><code>-d,  --deny ip [comment]</code></p> <p>Deny an IP and add to <code>/etc/csf/csf.deny</code></p> <pre><code>sudo csf -d &lt;IP_ADDRESS&gt;\n</code></pre> <p></p>", "tags": ["cheatsheet", "commands"]}, {"location": "usage/cheatsheet/commands/#remove-ip-from-deny-list", "title": "Remove IP from Deny List", "text": "<p><code>-dr, --denyrm ip</code></p> <p>Unblock an IP and remove from <code>/etc/csf/csf.deny</code></p> <pre><code>sudo csf -dr &lt;IP_ADDRESS&gt;\n</code></pre> <p></p>", "tags": ["cheatsheet", "commands"]}, {"location": "usage/cheatsheet/commands/#remove-all-ips-from-deny-list", "title": "Remove All IPs from Deny List", "text": "<p><code>-df, --denyf</code></p> <p>Remove and unblock all entries in <code>/etc/csf/csf.deny</code></p> <pre><code>sudo csf -df\n</code></pre>  Terminal <pre><code>csf: all entries removed from csf.deny\n</code></pre> <p></p>", "tags": ["cheatsheet", "commands"]}, {"location": "usage/cheatsheet/commands/#grep-search-for-ip", "title": "Grep Search for IP", "text": "<p><code>-g,  --grep ip</code></p> <p>Search the iptables and ip6tables rules for a match (e.g. IP, CIDR, Port Number)</p> <pre><code>sudo csf -g &lt;STRING&gt;\nsudo csf -g 22\nsudo csf -g ACCEPT\n</code></pre> <p></p>", "tags": ["cheatsheet", "commands"]}, {"location": "usage/cheatsheet/commands/#lookup-ip", "title": "Lookup IP", "text": "<p><code>-i,  --iplookup ip</code></p> <p>Lookup IP address geographical information using <code>CC_LOOKUPS</code> setting in <code>/etc/csf/csf.conf</code></p> <pre><code>sudo csf -i &lt;IP_ADDRESS&gt;\nsudo csf -i 142.250.189.142\n</code></pre>  Terminal <pre><code>142.250.189.142 (US/United States/mia09s26-in-f14.1e100.net)\n</code></pre> <p></p>", "tags": ["cheatsheet", "commands"]}, {"location": "usage/cheatsheet/commands/#view-temp-allowban-list", "title": "View Temp Allow/Ban List", "text": "<p><code>-t,  --temp</code></p> <p>Displays the current list of temporary allow and deny IP entries with their TTL and comment</p> <pre><code>sudo csf -t\n</code></pre>  Terminal <pre><code>A/D   IP address          Port    Dir     Time To Live     Comment\nALLOW 142.250.189.142     *       inout   58m 56s          Manually added: 142.250.189.142 (US/United States/mia09s26-in-f14.1e100.net)\n</code></pre> <p></p>", "tags": ["cheatsheet", "commands"]}, {"location": "usage/cheatsheet/commands/#remove-temp-allowban-ip", "title": "Remove Temp Allow/Ban IP", "text": "<p><code>-tr, --temprm ip</code></p> <p>Remove an IP from the temporary IP ban or allow list</p> <pre><code>sudo csf -tr &lt;IP_ADDRESS&gt;\nsudo csf -tr 142.250.189.142\n</code></pre>  Terminal <pre><code>ACCEPT  all opt -- in !lo out *  142.250.189.142  -&gt; 0.0.0.0/0  \nACCEPT  all opt -- in * out !lo  0.0.0.0/0  -&gt; 142.250.189.142  \ncsf: 142.250.189.142 temporary allow removed\n</code></pre> <p></p>", "tags": ["cheatsheet", "commands"]}, {"location": "usage/cheatsheet/commands/#remove-temp-ban-ip", "title": "Remove Temp Ban IP", "text": "<p><code>-trd, --temprmd ip</code></p> <p>Remove an IP from the temporary IP ban list only</p> <pre><code>sudo csf -trd &lt;IP_ADDRESS&gt;\n</code></pre> <p></p>", "tags": ["cheatsheet", "commands"]}, {"location": "usage/cheatsheet/commands/#remove-temp-allow-ip", "title": "Remove Temp Allow IP", "text": "<p><code>-tra, --temprma ip</code></p> <p>Remove an IP from the temporary IP allow list only</p> <pre><code>sudo csf -tra &lt;IP_ADDRESS&gt;\n</code></pre> <p></p>", "tags": ["cheatsheet", "commands"]}, {"location": "usage/cheatsheet/commands/#add-temp-block-ip", "title": "Add Temp Block IP", "text": "<p><code>-td, --tempdeny ip ttl [-p port] [-d direction] [comment]</code></p> <p>Add an IP to the temp IP ban list. ttl is how long to blocks for (default:seconds, can use one suffix of h/m/d). Optional port. Optional direction of block can be one of: in, out or inout (default:in)</p> <pre><code>sudo csf -td &lt;IP_ADDRESS&gt;\n</code></pre> <p></p>", "tags": ["cheatsheet", "commands"]}, {"location": "usage/cheatsheet/commands/#add-temp-allow-ip", "title": "Add Temp Allow IP", "text": "<p><code>-ta, --tempallow ip ttl [-p port] [-d direction] [comment]</code></p> <p>Add an IP to the temp IP allow list (default:inout)</p> <pre><code>sudo csf -ta &lt;IP_ADDRESS&gt;\nsudo csf -ta 142.250.189.142\n</code></pre>  Terminal <pre><code>ACCEPT  all opt -- in !lo out *  142.250.189.142  -&gt; 0.0.0.0/0  \nACCEPT  all opt -- in * out !lo  0.0.0.0/0  -&gt; 142.250.189.142\n</code></pre> <p></p>", "tags": ["cheatsheet", "commands"]}, {"location": "usage/cheatsheet/commands/#flush-all-temp-ip-entries", "title": "Flush All Temp IP Entries", "text": "<p><code>-tf, --tempf</code></p> <p>Flush all IPs from the temporary IP entries</p> <pre><code>sudo csf -tf\n</code></pre>  Terminal <pre><code>csf: There are no temporary IP bans\nACCEPT  all opt -- in !lo out *  142.250.189.142  -&gt; 0.0.0.0/0  \nACCEPT  all opt -- in * out !lo  0.0.0.0/0  -&gt; 142.250.189.142  \ncsf: 142.250.189.142 temporary allow removed\n</code></pre> <p></p>", "tags": ["cheatsheet", "commands"]}, {"location": "usage/cheatsheet/commands/#initiate-lfd-log-scanner", "title": "Initiate Lfd Log Scanner", "text": "<p><code>-lr, --logrun</code></p> <p>Initiate Log Scanner report via lfd</p> <pre><code>sudo csf -lr\n</code></pre> <p></p> <p>If you receive the following error in console:</p>  Terminal <pre><code>Option LOGSCANNER needs to be enabled in csf.conf for this feature\n</code></pre> <p></p> <p>Open your <code>csf.conf</code> configuration file, locate the setting <code>LOGSCANNER</code>, and change the value to <code>1</code>:</p> <pre><code>###############################################################################\n# SECTION:Log Scanner\n###############################################################################\n# Log Scanner. This feature will send out an email summary of the log lines of\n# each log listed in /etc/csf/csf.logfiles. All lines will be reported unless\n# they match a regular expression in /etc/csf/csf.logignore\n#\n# File globbing is supported for logs listed in /etc/csf/csf.logfiles. However,\n# be aware that the more files lfd has to track, the greater the performance\n# hit. Note: File globs are only evaluated when lfd is started\n#\n# Note: lfd builds the report continuously from lines logged after lfd has\n# started, so any lines logged when lfd is not running will not be reported\n# (e.g. during reboot). If lfd is restarted, then the report will include any\n# lines logged during the previous lfd logging period that weren't reported\n#\n# 1 to enable, 0 to disable\nLOGSCANNER = \"0\"\n</code></pre> <p></p> <p>Then go back to console and re-run the command.</p> <p></p>", "tags": ["cheatsheet", "commands"]}, {"location": "usage/cheatsheet/commands/#view-ports", "title": "View Ports", "text": "<p><code>-p, --ports</code></p> <p>View ports on the server that have a running process behind them listening for external connections</p> <pre><code>sudo csf -p\n</code></pre>  Terminal <pre><code>Ports listening for external connections and the executables running behind them:\nPort/Proto Open Conn  PID/User             Command Line                         Executable\n631/tcp    -/-  -     (1090/root)          /usr/sbin/cupsd -l                   /usr/sbin/cupsd\n8546/tcp   4/6  -     (4627/root)          lfd UI                               /usr/bin/perl\n5353/udp   -/-  -     (337/systemd-resolve /lib/systemd/systemd-resolved        /usr/lib/systemd/systemd-resolved\n5353/udp   -/-  -     (702/avahi)          avahi-daemon: running [local]        /usr/sbin/avahi-daemon\n40857/udp  -/-  -     (702/avahi)          avahi-daemon: running [local]        /usr/sbin/avahi-daemon\n49833/udp  -/-  -     (702/avahi)          avahi-daemon: running [local]        /usr/sbin/avahi-daemon\n</code></pre> <p></p>", "tags": ["cheatsheet", "commands"]}, {"location": "usage/cheatsheet/commands/#view-graphs", "title": "View Graphs", "text": "<p><code>--graphs [graph type] [directory]</code></p> <p>Generate System Statistics html pages and images for a given graph type into a given directory. See <code>ST_SYSTEM</code> for requirements</p> <code>[graph type]</code> <ul> <li>disk</li> <li>apachework</li> <li>mysqlslowqueries</li> <li>cpu</li> <li>load</li> <li>mysqlconns</li> <li>net</li> <li>diskw</li> <li>apachecpu</li> <li>email</li> <li>temp</li> <li>apacheconn</li> <li>mysqlqueries</li> <li>mem</li> <li>mysqldata</li> </ul> <pre><code>sudo csf --graphs &lt;GRAPH_TYPE&gt; &lt;SAVE_PATH&gt;\nsudo csf --graphs mem /home/$USER/graphs\n</code></pre> <p></p> <p>If you run the above command and see the error:</p>  Terminal <pre><code>ST_SYSTEM is disabled\n</code></pre> <p></p> <p>Open your <code>csf.conf</code> configuration file, locate the setting <code>ST_SYSTEM</code>, and change the value to <code>1</code>:</p> <pre><code># This option will gather basic system statstics. Through the UI it displays\n# various graphs for disk, cpu, memory, network, etc usage over 4 intervals:\n#  . Hourly (per minute)\n#  . 24 hours (per minute)\n#  . 7 days (per minute averaged over an hour)\n#  . 30 days (per minute averaged over an hour) - user definable\n# The data is stored in /var/lib/csf/stats/system and the option requires the\n# perl GD::Graph module\n#\n# Note: Disk graphs do not show on Virtuozzo/OpenVZ servers as the kernel on\n# those systems do not store the required information in /proc/diskstats\n# On new installations or when enabling this option it will take time for these\n# graphs to be populated\nST_SYSTEM = \"0\"\n</code></pre> <p></p> <p>If you receive the error:</p>  Terminal <pre><code>Perl module GD::Graph is not installed/working\n</code></pre> <p></p> <p>Install the package <code>libgd-graph-perl</code>:</p>  Debian/Ubuntu (apt-get) CentOS/RHEL (yum/dnf) Perl (CPAN) <pre><code>apt-get update\napt-get install -y perl \\\n  libgd-graph-perl\n</code></pre> <pre><code>yum install -y perl \\\n  perl-GDGraph\n</code></pre> <pre><code>perl -MCPAN -eshell\ncpan&gt; install GD::Graph\n</code></pre> <p></p> <p></p>", "tags": ["cheatsheet", "commands"]}, {"location": "usage/cheatsheet/conf/", "title": "Cheatsheet \u203a Example Configs", "text": "", "tags": ["cheatsheet", "configure", "configs", "resource"]}, {"location": "usage/cheatsheet/conf/#cheatsheet-example-configs", "title": "Cheatsheet: Example Configs", "text": "<p>Two versions of the config file have been provided below. A full version which contains comments, and a clean version which contains no comments and only the config settings. </p> <p>You may copy the contents, and place it within your server under the path <code>/etc/csf/csf.conf</code>.</p> <ul> <li>Full Version</li> <li>Clean Version</li> </ul> <p></p> <p>After you have set your config file to its desired values; you must restart the CSF service to apply the configurations. Open Terminal and run:</p> <pre><code>sudo csf -r\n</code></pre> <p></p> <p>You can also restart both CSF and LFD services with <code>-ra, --restartall</code></p> <pre><code>sudo csf -ra\n</code></pre> <p></p> <p></p>", "tags": ["cheatsheet", "configure", "configs", "resource"]}, {"location": "usage/cheatsheet/conf/#full-version", "title": "Full Version", "text": "<p>This is a copy of the original CSF <code>/etc/csf/csf.conf</code> config file available from our  repository. It contains all comments and is the version you receive when downloading the latest version of ConfigServer Security &amp; Firewall.</p> <pre><code>###############################################################################\n# SECTION:Initial Settings\n###############################################################################\n# Testing flag - enables a CRON job that clears iptables incase of\n# configuration problems when you start csf. This should be enabled until you\n# are sure that the firewall works - i.e. incase you get locked out of your\n# server! Then do remember to set it to 0 and restart csf when you're sure\n# everything is OK. Stopping csf will remove the line from /etc/crontab\n#\n# lfd will not start while this is enabled\nTESTING = \"0\"\n\n# The interval for the crontab in minutes. Since this uses the system clock the\n# CRON job will run at the interval past the hour and not from when you issue\n# the start command. Therefore an interval of 5 minutes means the firewall\n# will be cleared in 0-5 minutes from the firewall start\nTESTING_INTERVAL = \"5\"\n\n# SECURITY WARNING\n# ================\n#\n# Unfortunately, syslog and rsyslog allow end-users to log messages to some\n# system logs via the same unix socket that other local services use. This \n# means that any log line shown in these system logs that syslog or rsyslog\n# maintain can be spoofed (they are exactly the same as real log lines).\n#\n# Since some of the features of lfd rely on such log lines, spoofed messages\n# can cause false-positive matches which can lead to confusion at best, or\n# blocking of any innocent IP address or making the server inaccessible at\n# worst.\n#\n# Any option that relies on the log entries in the files listed in\n# /etc/syslog.conf and /etc/rsyslog.conf should therefore be considered\n# vulnerable to exploitation by end-users and scripts run by end-users.\n#\n# NOTE: Not all log files are affected as they may not use syslog/rsyslog\n#\n# The option RESTRICT_SYSLOG disables all these features that rely on affected\n# logs. These options are:\n# LF_SSHD LF_FTPD LF_IMAPD LF_POP3D LF_BIND LF_SUHOSIN LF_SSH_EMAIL_ALERT\n# LF_SU_EMAIL_ALERT LF_CONSOLE_EMAIL_ALERT LF_DISTATTACK LF_DISTFTP\n# LT_POP3D LT_IMAPD PS_INTERVAL UID_INTERVAL WEBMIN_LOG LF_WEBMIN_EMAIL_ALERT\n# PORTKNOCKING_ALERT LF_SUDO_EMAIL_ALERT\n#\n# This list of options use the logs but are not disabled by RESTRICT_SYSLOG:\n# ST_ENABLE SYSLOG_CHECK LOGSCANNER CUSTOM*_LOG\n#\n# The following options are still enabled by default on new installations so\n# that, on balance, csf/lfd still provides expected levels of security:\n# LF_SSHD LF_FTPD LF_POP3D LF_IMAPD LF_SSH_EMAIL_ALERT LF_SU_EMAIL_ALERT\n#\n# If you set RESTRICT_SYSLOG to \"0\" or \"2\" and enable any of the options listed\n# above, it should be done with the knowledge that any of the those options\n# that are enabled could be triggered by spoofed log lines and lead to the\n# server being inaccessible in the worst case. If you do not want to take that\n# risk you should set RESTRICT_SYSLOG to \"1\" and those features will not work\n# but you will not be protected from the exploits that they normally help block\n#\n# The recommended setting for RESTRICT_SYSLOG is \"3\" to restrict who can access\n# the syslog/rsyslog unix socket.\n#\n# For further advice on how to help mitigate these issues, see\n# /etc/csf/readme.txt\n#\n# 0 = Allow those options listed above to be used and configured\n# 1 = Disable all the options listed above and prevent them from being used\n# 2 = Disable only alerts about this feature and do nothing else\n# 3 = Restrict syslog/rsyslog access to RESTRICT_SYSLOG_GROUP ** RECOMMENDED **\nRESTRICT_SYSLOG = \"0\"\n\n# The following setting is used if RESTRICT_SYSLOG is set to 3. It restricts\n# write access to the syslog/rsyslog unix socket(s). The group must not already\n# exists in /etc/group before setting RESTRICT_SYSLOG to 3, so set the option\n# to a unique name for the server\n#\n# You can add users to this group by changing /etc/csf/csf.syslogusers and then\n# restarting lfd afterwards. This will create the system group and add the\n# users from csf.syslogusers if they exist to that group and will change the\n# permissions on the syslog/rsyslog unix socket(s). The socket(s) will be\n# monitored and the permissions re-applied should syslog/rsyslog be restarted\n#\n# Using this option will prevent some legitimate logging, e.g. end-user cron\n# job logs\n#\n# If you want to revert RESTRICT_SYSLOG to another option and disable this\n# feature, change the setting of RESTRICT_SYSLOG and then restart lfd and then\n# syslog/rsyslog and the unix sockets will be reset\nRESTRICT_SYSLOG_GROUP = \"mysyslog\"\n\n# This options restricts the ability to modify settings within this file from\n# the csf UI. Should the parent control panel be compromised, these restricted\n# options could be used to further compromise the server. For this reason we\n# recommend leaving this option set to at least \"1\" and if any of the\n# restricted items need to be changed, they are done so from the root shell\n#\n# 0 = Unrestricted UI\n# 1 = Restricted UI\n# 2 = Disabled UI\nRESTRICT_UI = \"1\"\n\n# Enabling auto updates creates a cron job called /etc/cron.d/csf_update which\n# runs once per day to see if there is an update to csf+lfd and upgrades if\n# available and restarts csf and lfd\n#\n# You should check for new version announcements at https://github.com/Aetherinox/csf-firewall\nAUTO_UPDATES = \"1\"\n\n###############################################################################\n# SECTION:IPv4 Port Settings\n###############################################################################\n# Lists of ports in the following comma separated lists can be added using a\n# colon (e.g. 30000:35000).\n\n# Some kernel/iptables setups do not perform stateful connection tracking\n# correctly (typically some virtual servers or custom compiled kernels), so a\n# SPI firewall will not function correctly. If this happens, LF_SPI can be set\n# to 0 to reconfigure csf as a static firewall.\n#\n# As connection tracking will not be configured, applications that rely on it\n# will not function unless all outgoing ports are opened. Therefore, all\n# outgoing connections will be allowed once all other tests have completed. So\n# TCP_OUT, UDP_OUT and ICMP_OUT will not have any affect.\n#\n# If you allow incoming DNS lookups you may need to use the following\n# directive in the options{} section of your named.conf:\n#\n#        query-source port 53;\n#\n# This will force incoming DNS traffic only through port 53\n#\n# Disabling this option will break firewall functionality that relies on\n# stateful packet inspection (e.g. DNAT, PACKET_FILTER) and makes the firewall\n# less secure\n#\n# This option should be set to \"1\" in all other circumstances\nLF_SPI = \"1\"\n\n# Allow incoming TCP ports\nTCP_IN = \"20,21,22,25,53,853,80,110,143,443,465,587,993,995,5000\"\n\n# Allow outgoing TCP ports\nTCP_OUT = \"20,21,22,25,53,853,80,110,113,443,587,993,995\"\n\n# Allow incoming UDP ports\nUDP_IN = \"20,21,53,853,80,443\"\n\n# Allow outgoing UDP ports\n# To allow outgoing traceroute add 33434:33523 to this list \nUDP_OUT = \"20,21,53,853,113,123\"\n\n# Allow incoming PING. Disabling PING will likely break external uptime\n# monitoring\nICMP_IN = \"1\"\n\n# Set the per IP address incoming ICMP packet rate for PING requests. This\n# ratelimits PING requests which if exceeded results in silently rejected\n# packets. Disable or increase this value if you are seeing PING drops that you\n# do not want\n#\n# To disable rate limiting set to \"0\", otherwise set according to the iptables\n# documentation for the limit module. For example, \"1/s\" will limit to one\n# packet per second\nICMP_IN_RATE = \"1/s\"\n\n# Allow outgoing PING\n#\n# Unless there is a specific reason, this option should NOT be disabled as it\n# could break OS functionality\nICMP_OUT = \"1\"\n\n# Set the per IP address outgoing ICMP packet rate for PING requests. This\n# ratelimits PING requests which if exceeded results in silently rejected\n# packets. Disable or increase this value if you are seeing PING drops that you\n# do not want\n#\n# Unless there is a specific reason, this option should NOT be enabled as it\n# could break OS functionality\n#\n# To disable rate limiting set to \"0\", otherwise set according to the iptables\n# documentation for the limit module. For example, \"1/s\" will limit to one\n# packet per second\nICMP_OUT_RATE = \"0\"\n\n# For those with PCI Compliance tools that state that ICMP timestamps (type 13)\n# should be dropped, you can enable the following option. Otherwise, there\n# appears to be little evidence that it has anything to do with a security risk\n# and can impact network performance, so should be left disabled by everyone\n# else\nICMP_TIMESTAMPDROP = \"0\"\n\n###############################################################################\n# SECTION:IPv6 Port Settings\n###############################################################################\n# IPv6: (Requires ip6tables)\n#\n# Pre v2.6.20 kernels do not perform stateful connection tracking, so a static\n# firewall is configured as a fallback instead if IPV6_SPI is set to 0 below\n#\n# Supported:\n# Temporary ACCEPT/DENY, GLOBAL_DENY, GLOBAL_ALLOW, SMTP_BLOCK, LF_PERMBLOCK,\n# PACKET_FILTER, Advanced Allow/Deny Filters, RELAY_*, CLUSTER_*, CC6_LOOKUPS, \n# SYNFLOOD, LF_NETBLOCK\n#\n# Supported if CC6_LOOKUPS and CC_LOOKUPS are enabled\n# CC_DENY, CC_ALLOW, CC_ALLOW_FILTER, CC_IGNORE, CC_ALLOW_PORTS, CC_DENY_PORTS,\n# CC_ALLOW_SMTPAUTH\n#\n# Supported if ip6tables &gt;= 1.4.3:\n# PORTFLOOD, CONNLIMIT\n#\n# Supported if ip6tables &gt;= 1.4.17 and perl module IO::Socket::INET6 is\n# installed:\n# MESSENGER DOCKER SMTP_REDIRECT\n#\n# Not supported:\n# ICMP_IN, ICMP_OUT\n#\nIPV6 = \"1\"\n\n# IPv6 uses icmpv6 packets very heavily. By default, csf will allow all icmpv6\n# traffic in the INPUT and OUTPUT chains. However, this could increase the risk\n# of icmpv6 attacks. To restrict incoming icmpv6, set to \"1\" but may break some\n# connection types\nIPV6_ICMP_STRICT = \"0\"\n\n# Pre v2.6.20 kernel must set this option to \"0\" as no working state module is\n# present, so a static firewall is configured as a fallback\n#\n# A workaround has been added for CentOS/RedHat v5 and custom kernels that do\n# not support IPv6 connection tracking by opening ephemeral port range\n# 32768:61000. This is only applied if IPV6_SPI is not enabled. This is the\n# same workaround implemented by RedHat in the sample default IPv6 rules\n#\n# As connection tracking will not be configured, applications that rely on it\n# will not function unless all outgoing ports are opened. Therefore, all\n# outgoing connections will be allowed once all other tests have completed. So\n# TCP6_OUT, UDP6_OUT and ICMP6_OUT will not have any affect.\n#\n# If you allow incoming ipv6 DNS lookups you may need to use the following\n# directive in the options{} section of your named.conf:\n#\n#        query-source-v6 port 53;\n#\n# This will force ipv6 incoming DNS traffic only through port 53\n#\n# These changes are not necessary if the SPI firewall is used\nIPV6_SPI = \"1\"\n\n# Allow incoming IPv6 TCP ports\nTCP6_IN = \"20,21,22,25,53,853,80,110,143,443,465,587,993,995,5000\"\n\n# Allow outgoing IPv6 TCP ports\nTCP6_OUT = \"20,21,22,25,53,853,80,110,113,443,587,993,995\"\n\n# Allow incoming IPv6 UDP ports\nUDP6_IN = \"20,21,53,853,80,443\"\n\n# Allow outgoing IPv6 UDP ports\n# To allow outgoing traceroute add 33434:33523 to this list \nUDP6_OUT = \"20,21,53,853,113,123\"\n\n###############################################################################\n# SECTION:General Settings\n###############################################################################\n# By default, csf will auto-configure iptables to filter all traffic except on\n# the loopback device. If you only want iptables rules applied to a specific\n# NIC, then list it here (e.g. eth1, or eth+)\nETH_DEVICE = \"\"\n\n# By adding a device to this option, ip6tables can be configured only on the\n# specified device. Otherwise, ETH_DEVICE and then the default setting will be\n# used\nETH6_DEVICE = \"\"\n\n# If you don't want iptables rules applied to specific NICs, then list them in\n# a comma separated list (e.g \"eth1,eth2\")\nETH_DEVICE_SKIP = \"\"\n\n# This option should be enabled unless the kernel does not support the\n# \"conntrack\" module\n#\n# To use the deprecated iptables \"state\" module, change this to 0\nUSE_CONNTRACK = \"1\"\n\n# Enable ftp helper via the iptables CT target on supporting kernels (v2.6.34+)\n# instead of the current method via /proc/sys/net/netfilter/nf_conntrack_helper\n# This will also remove the RELATED target from the global state iptables rule\n#\n# This is not needed (and will be ignored) if LF_SPI/IPV6_SPI is disabled or\n# the raw tables do not exist. The USE_CONNTRACK option should be enabled\n#\n# To enable this option, set it to your FTP server listening port number\n# (normally 21), do NOT set it to \"1\"\nUSE_FTPHELPER = \"0\"\n\n# Check whether syslog is running. Many of the lfd checks require syslog to be\n# running correctly. This test will send a coded message to syslog every\n# SYSLOG_CHECK seconds. lfd will check SYSLOG_LOG log lines for the coded\n# message. If it fails to do so within SYSLOG_CHECK seconds an alert using\n# syslogalert.txt is sent\n#\n# A value of between 300 and 3600 seconds is suggested. Set to 0 to disable\nSYSLOG_CHECK = \"0\"\n\n# Enable this option if you want lfd to ignore (i.e. don't block) IP addresses\n# listed in csf.allow in addition to csf.ignore (the default). This option\n# should be used with caution as it would mean that IP's allowed through the\n# firewall from infected PC's could launch attacks on the server that lfd\n# would ignore\nIGNORE_ALLOW = \"0\"\n\n# Enable the following option if you want to apply strict iptables rules to DNS\n# traffic (i.e. relying on iptables connection tracking). Enabling this option\n# could cause DNS resolution issues both to and from the server but could help\n# prevent abuse of the local DNS server\nDNS_STRICT = \"0\"\n\n# Enable the following option if you want to apply strict iptables rules to DNS\n# traffic between the server and the nameservers listed in /etc/resolv.conf\n# Enabling this option could cause DNS resolution issues both to and from the\n# server but could help prevent abuse of the local DNS server\nDNS_STRICT_NS = \"0\"\n\n# Limit the number of IP's kept in the /etc/csf/csf.deny file\n#\n# Care should be taken when increasing this value on servers with low memory\n# resources or hard limits (such as Virtuozzo/OpenVZ) as too many rules (in the\n# thousands) can sometimes cause network slowdown\n#\n# The value set here is the maximum number of IPs/CIDRs allowed\n# if the limit is reached, the entries will be rotated so that the oldest\n# entries (i.e. the ones at the top) will be removed and the latest is added.\n# The limit is only checked when using csf -d (which is what lfd also uses)\n# Set to 0 to disable limiting\n#\n# For implementations wishing to set this value significantly higher, we\n# recommend using the IPSET option\nDENY_IP_LIMIT = \"200\"\n\n# Limit the number of IP's kept in the temprary IP ban list. If the limit is\n# reached the oldest IP's in the ban list will be removed and allowed\n# regardless of the amount of time remaining for the block\n# Set to 0 to disable limiting\nDENY_TEMP_IP_LIMIT = \"100\"\n\n# Enable login failure detection daemon (lfd). If set to 0 none of the\n# following settings will have any effect as the daemon won't start.\nLF_DAEMON = \"1\"\n\n# Check whether csf appears to have been stopped and restart if necessary,\n# unless TESTING is enabled above. The check is done every 300 seconds\nLF_CSF = \"1\"\n\n# This option uses IPTABLES_SAVE, IPTABLES_RESTORE and IP6TABLES_SAVE,\n# IP6TABLES_RESTORE in two ways:\n#\n# 1. On a clean server reboot the entire csf iptables configuration is saved\n#    and then restored where possible to provide a near instant firewall\n#    startup[*]\n#\n# 2. On csf restart or lfd reloading tables, CC_* as well as SPAMHAUS, DSHIELD,\n#    BOGON, TOR are loaded using this method in a fraction of the time than if\n#    this setting is disabled\n#\n# [*]Not supported on all OS platforms\n#\n# Set to \"0\" to disable this functionality\nFASTSTART = \"1\"\n\n# This option allows you to use ipset v6+ for the following csf options:\n# CC_* and /etc/csf/csf.blocklist, /etc/csf/csf.allow, /etc/csf/csf.deny,\n# GLOBAL_DENY, GLOBAL_ALLOW, DYNDNS, GLOBAL_DYNDNS, MESSENGER\n#\n# ipset will only be used with the above options when listing IPs and CIDRs.\n# Advanced Allow Filters and temporary blocks use traditional iptables\n#\n# Using ipset moves the onus of ip matching against large lists away from\n# iptables rules and to a purpose built and optimised database matching\n# utility. It also simplifies the switching in of updated lists\n#\n# To use this option you must have a fully functioning installation of ipset\n# installed either via rpm or source from http://ipset.netfilter.org/\n# \n# Note: Using ipset has many advantages, some disadvantages are that you will\n# no longer see packet and byte counts against IPs and it makes identifying\n# blocked/allowed IPs that little bit harder\n#\n# Note: If you mainly use IP address only entries in csf.deny, you can increase\n# the value of DENY_IP_LIMIT significantly if you wish\n# \n# Note: It's highly unlikely that ipset will function on Virtuozzo/OpenVZ\n# containers even if it has been installed\n#\n# If you find any problems, please read docs.configserver.dev\nLF_IPSET = \"0\"\n\n# Versions of iptables greater or equal to v1.4.20 should support the --wait\n# option. This forces iptables commands that use the option to wait until a\n# lock by any other process using iptables completes, rather than simply\n# failing\n#\n# Enabling this feature will add the --wait option to iptables commands\n#\n# NOTE: The disadvantage of using this option is that any iptables command that\n# uses it will hang until the lock is released. This could cause a cascade of\n# hung processes trying to issue iptables commands. To try and avoid this issue\n# csf uses a last ditch timeout, WAITLOCK_TIMEOUT in seconds, that will trigger\n# a failure if reached\nWAITLOCK = \"1\"\nWAITLOCK_TIMEOUT = \"300\"\n\n# The following sets the hashsize for ipset sets, which must be a power of 2.\n#\n# Note: Increasing this value will consume more memory for all sets\n# Default: \"1024\"\nLF_IPSET_HASHSIZE = \"1024\"\n\n# The following sets the maxelem for ipset sets.\n#\n# Note: Increasing this value will consume more memory for all sets\n# Default: \"65536\"\nLF_IPSET_MAXELEM = \"65536\"\n\n# If you enable this option then whenever a CLI request to restart csf is used\n# lfd will restart csf instead within LF_PARSE seconds\n#\n# This feature can be helpful for restarting configurations that cannot use\n# FASTSTART\nLFDSTART = \"0\"\n\n# Enable verbose output of iptables commands\nVERBOSE = \"1\"\n\n# Drop out of order packets and packets in an INVALID state in iptables\n# connection tracking\nPACKET_FILTER = \"1\"\n\n# Perform reverse DNS lookups on IP addresses. (See also CC_LOOKUPS)\nLF_LOOKUPS = \"1\"\n\n# Custom styling is possible in the csf UI. See the readme.txt for more\n# information under \"UI skinning and Mobile View\"\n#\n# This option enables the use of custom styling. If the styling fails to work\n# correctly, e.g. custom styling does not take into account a change in the\n# standard csf UI, then disabling this option will return the standard UI\nSTYLE_CUSTOM = \"0\"\n\n# This option disables the presence of the Mobile View in the csf UI\nSTYLE_MOBILE = \"1\"\n\n###############################################################################\n# SECTION:SMTP Settings\n###############################################################################\n# Block outgoing SMTP except for root, exim and mailman (forces scripts/users\n# to use the exim/sendmail binary instead of sockets access). This replaces the\n# protection as WHM &gt; Tweak Settings &gt; SMTP Tweaks\n#\n# This option uses the iptables ipt_owner/xt_owner module and must be loaded\n# for it to work. It may not be available on some VPS platforms\n#\n# Note: Run /etc/csf/csftest.pl to check whether this option will function on\n# this server\nSMTP_BLOCK = \"0\"\n\n# If SMTP_BLOCK is enabled but you want to allow local connections to port 25\n# on the server (e.g. for webmail or web scripts) then enable this option to\n# allow outgoing SMTP connections to the loopback device\nSMTP_ALLOWLOCAL = \"1\"\n\n# This option redirects outgoing SMTP connections destined for remote servers\n# for non-bypass users to the local SMTP server to force local relaying of\n# email. Such email may require authentication (SMTP AUTH)\nSMTP_REDIRECT = \"0\"\n\n# This is a comma separated list of the ports to block. You should list all\n# ports that exim is configured to listen on\nSMTP_PORTS = \"25,465,587\"\n\n# Always allow the following comma separated users and groups to bypass\n# SMTP_BLOCK\n#\n# Note: root (UID:0) is always allowed\nSMTP_ALLOWUSER = \"\"\nSMTP_ALLOWGROUP = \"mail,mailman\"\n\n# This option will only allow SMTP AUTH to be advertised to the IP addresses\n# listed in /etc/csf/csf.smtpauth on EXIM mail servers\n#\n# The additional option CC_ALLOW_SMTPAUTH can be used with this option to\n# additionally restrict access to specific countries\n#\n# This is to help limit attempts at distributed attacks against SMTP AUTH which\n# are difficult to achive since port 25 needs to be open to relay email\n#\n# The reason why this works is that if EXIM does not advertise SMTP AUTH on a\n# connection, then SMTP AUTH will not accept logins, defeating the attacks\n# without restricting mail relaying\n#\n# Note: csf and lfd must be restarted if /etc/csf/csf.smtpauth is modified so\n# that the lookup file in /etc/exim.smtpauth is regenerated from the\n# information from /etc/csf/csf.smtpauth plus any countries listed in\n# CC_ALLOW_SMTPAUTH\n#\n# NOTE: To make this option work you MUST make the modifications to exim.conf\n# as explained in \"Exim SMTP AUTH Restriction\" section in /etc/csf/readme.txt\n# after enabling the option here, otherwise this option will not work\n#\n# To enable this option, set to 1 and make the exim configuration changes\n# To disable this option, set to 0 and undo the exim configuration changes\nSMTPAUTH_RESTRICT = \"0\"\n\n###############################################################################\n# SECTION:Port Flood Settings\n###############################################################################\n# Enable SYN Flood Protection. This option configures iptables to offer some\n# protection from tcp SYN packet DOS attempts. You should set the RATE so that\n# false-positives are kept to a minimum otherwise visitors may see connection\n# issues (check /var/log/messages for *SYNFLOOD Blocked*). See the iptables\n# man page for the correct --limit rate syntax\n#\n# Note: This option should ONLY be enabled if you know you are under a SYN\n# flood attack as it will slow down all new connections from any IP address to\n# the server if triggered\nSYNFLOOD = \"0\"\nSYNFLOOD_RATE = \"100/s\"\nSYNFLOOD_BURST = \"150\"\n\n# Connection Limit Protection. This option configures iptables to offer more\n# protection from DOS attacks against specific ports. It can also be used as a\n# way to simply limit resource usage by IP address to specific server services.\n# This option limits the number of concurrent new connections per IP address\n# that can be made to specific ports\n#\n# This feature does not work on servers that do not have the iptables module\n# xt_connlimit loaded. Typically, this will be with MONOLITHIC kernels. VPS\n# server admins should check with their VPS host provider that the iptables\n# module is included\n#\n# For further information and syntax refer to the Connection Limit Protection\n# section of the csf readme.txt\n#\n# Note: Run /etc/csf/csftest.pl to check whether this option will function on\n# this server\nCONNLIMIT = \"\"\n\n# Port Flood Protection. This option configures iptables to offer protection\n# from DOS attacks against specific ports. This option limits the number of\n# new connections per time interval that can be made to specific ports\n#\n# This feature does not work on servers that do not have the iptables module\n# ipt_recent loaded. Typically, this will be with MONOLITHIC kernels. VPS\n# server admins should check with their VPS host provider that the iptables\n# module is included\n#\n# For further information and syntax refer to the Port Flood Protection\n# section of the csf readme.txt\n#\n# Note: Run /etc/csf/csftest.pl to check whether this option will function on\n# this server\nPORTFLOOD = \"\"\n\n# Outgoing UDP Flood Protection. This option limits outbound UDP packet floods.\n# These typically originate from exploit scripts uploaded through vulnerable\n# web scripts. Care should be taken on servers that use services that utilise\n# high levels of UDP outbound traffic, such as SNMP, so you may need to alter\n# the UDPFLOOD_LIMIT and UDPFLOOD_BURST options to suit your environment\n#\n# We recommend enabling User ID Tracking (UID_INTERVAL) with this feature\nUDPFLOOD = \"0\"\nUDPFLOOD_LIMIT = \"100/s\"\nUDPFLOOD_BURST = \"500\"\n\n# This is a list of usernames that should not be rate limited, such as \"named\"\n# to prevent bind traffic from being limited.\n#\n# Note: root (UID:0) is always allowed\nUDPFLOOD_ALLOWUSER = \"named\"\n\n###############################################################################\n# SECTION:Logging Settings\n###############################################################################\n# Log lfd messages to SYSLOG in addition to /var/log/lfd.log. You must have the\n# perl module Sys::Syslog installed to use this feature\nSYSLOG = \"0\"\n\n# Drop target for incoming iptables rules. This can be set to either DROP or\n# REJECT. REJECT will send back an error packet, DROP will not respond at all.\n# REJECT is more polite, however it does provide extra information to a hacker\n# and lets them know that a firewall is blocking their attempts. DROP hangs\n# their connection, thereby frustrating attempts to port scan the server\nDROP = \"DROP\"\n\n# Drop target for outgoing iptables rules. This can be set to either DROP or\n# REJECT as with DROP, however as such connections are from this server it is\n# better to REJECT connections to closed ports rather than to DROP them. This\n# helps to immediately free up server resources rather than tying them up until\n# a connection times out. It also tells the process making the connection that\n# it has immediately failed\n#\n# It is possible that some monolithic kernels may not support the REJECT\n# target. If this is the case, csf checks before using REJECT and falls back to\n# using DROP, issuing a warning to set this to DROP instead\nDROP_OUT = \"REJECT\"\n\n# Enable logging of dropped connections to blocked ports to syslog, usually\n# /var/log/messages. This option needs to be enabled to use Port Scan Tracking\nDROP_LOGGING = \"1\"\n\n# Enable logging of dropped incoming connections from blocked IP addresses\n#\n# This option will be disabled if you enable Port Scan Tracking (PS_INTERVAL)\nDROP_IP_LOGGING = \"0\"\n\n# Enable logging of dropped outgoing connections\n#\n# Note: Only outgoing SYN packets for TCP connections are logged, other\n# protocols log all packets\n#\n# We recommend that you enable this option\nDROP_OUT_LOGGING = \"1\"\n\n# Together with DROP_OUT_LOGGING enabled, this option logs the UID connecting\n# out (where available) which can help track abuse\nDROP_UID_LOGGING = \"1\"\n\n# Only log incoming reserved port dropped connections (0:1023). This can reduce\n# the amount of log noise from dropped connections, but will affect options\n# such as Port Scan Tracking (PS_INTERVAL)\nDROP_ONLYRES = \"0\"\n\n# Commonly blocked ports that you do not want logging as they tend to just fill\n# up the log file. These ports are specifically blocked (applied to TCP and UDP\n# protocols) for incoming connections\nDROP_NOLOG = \"23,67,68,111,113,135:139,445,500,513,520\"\n\n# Log packets dropped by the packet filtering option PACKET_FILTER\nDROP_PF_LOGGING = \"0\"\n\n# Log packets dropped by the Connection Limit Protection option CONNLIMIT. If\n# this is enabled and Port Scan Tracking (PS_INTERVAL) is also enabled, IP\n# addresses breaking the Connection Limit Protection will be blocked\nCONNLIMIT_LOGGING = \"0\"\n\n# Enable logging of UDP floods. This should be enabled, especially with User ID\n# Tracking enabled\nUDPFLOOD_LOGGING = \"1\"\n\n# Send an alert if log file flooding is detected which causes lfd to skip log\n# lines to prevent lfd from looping. If this alert is sent you should check the\n# reported log file for the reason for the flooding\nLOGFLOOD_ALERT = \"0\"\n\n###############################################################################\n# SECTION:Reporting Settings\n###############################################################################\n# By default, lfd will send alert emails using the relevant alert template to\n# the To: address configured within that template. Setting the following\n# option will override the configured To: field in all lfd alert emails\n#\n# Leave this option empty to use the To: field setting in each alert template\nLF_ALERT_TO = \"\"\n\n# By default, lfd will send alert emails using the relevant alert template from\n# the From: address configured within that template. Setting the following\n# option will override the configured From: field in all lfd alert emails\n#\n# Leave this option empty to use the From: field setting in each alert template\nLF_ALERT_FROM = \"\"\n\n# By default, lfd will send all alerts using the SENDMAIL binary. To send using\n# SMTP directly, you can set the following to a relaying SMTP server, e.g.\n# \"127.0.0.1\". Leave this setting blank to use SENDMAIL\nLF_ALERT_SMTP = \"\"\n\n# Block Reporting. lfd can run an external script when it performs and IP\n# address block following for example a login failure. The following setting\n# is to the full path of the external script which must be executable. See\n# readme.txt for format details\n#\n# Leave this setting blank to disable\nBLOCK_REPORT = \"\"\n\n# To also run an external script when a temporary block is unblocked. The\n# following setting can be the full path of the external script which must be\n# executable. See readme.txt for format details\n#\n# Leave this setting blank to disable\nUNBLOCK_REPORT = \"\"\n\n# In addition to the standard lfd email alerts, you can additionally enable the\n# sending of X-ARF reports (see http://www.xarf.org/specification.html). Only\n# block alert messages will be sent. The reports use our schema at:\n# https://download.configserver.dev/abuse_login-attack_0.2.json\n#\n# These reports are in a format accepted by many Netblock owners and should\n# help them investigate abuse. This option is not designed to automatically\n# forward these reports to the Netblock owners and should be checked for\n# false-positive blocks before reporting\n#\n# If available, the report will also include the abuse contact for the IP from\n# the Abusix Contact DB: https://abusix.com/contactdb.html\n#\n# Note: The following block types are not reported through this feature:\n# LF_PERMBLOCK, LF_NETBLOCK, LF_DISTATTACK, LF_DISTFTP, RT_*_ALERT\nX_ARF = \"0\"\n\n# By default, lfd will send emails from the root forwarder. Setting the\n# following option will override this\nX_ARF_FROM = \"\"\n\n# By default, lfd will send emails to the root forwarder. Setting the following\n# option will override this\nX_ARF_TO = \"\"\n\n# If you want to automatically send reports to the abuse contact where found,\n# you can enable the following option\n#\n# Note: You MUST set X_ARF_FROM to a valid email address for this option to\n# work. This is so that the abuse contact can reply to the report\n#\n# However, you should be aware that without manual checking you could be\n# reporting innocent IP addresses, including your own clients, yourself and\n# your own servers\n#\n# Additionally, just because a contact address is found, does not mean that\n# there is anyone on the end of it reading, processing or acting on such\n# reports and you could conceivably reported for sending spam\n#\n# We do not recommend enabling this option. Abuse reports should be checked and\n# verified before being forwarded to the abuse contact\nX_ARF_ABUSE = \"0\"\n\n###############################################################################\n# SECTION:Temp to Perm/Netblock Settings\n###############################################################################\n# Temporary to Permanent IP blocking. The following enables this feature to\n# permanently block IP addresses that have been temporarily blocked more than\n# LF_PERMBLOCK_COUNT times in the last LF_PERMBLOCK_INTERVAL seconds. Set\n# LF_PERMBLOCK  to \"1\" to enable this feature\n#\n# Care needs to be taken when setting LF_PERMBLOCK_INTERVAL as it needs to be\n# at least LF_PERMBLOCK_COUNT multiplied by the longest temporary time setting\n# (TTL) for blocked IPs, to be effective\n#\n# Set LF_PERMBLOCK to \"0\" to disable this feature\nLF_PERMBLOCK = \"1\"\nLF_PERMBLOCK_INTERVAL = \"86400\"\nLF_PERMBLOCK_COUNT = \"4\"\nLF_PERMBLOCK_ALERT = \"1\"\n\n# Permanently block IPs by network class. The following enables this feature\n# to permanently block classes of IP address where individual IP addresses\n# within the same class LF_NETBLOCK_CLASS have already been blocked more than\n# LF_NETBLOCK_COUNT times in the last LF_NETBLOCK_INTERVAL seconds. Set\n# LF_NETBLOCK  to \"1\" to enable this feature\n#\n# This can be an affective way of blocking DDOS attacks launched from within\n# the same network class\n#\n# Valid settings for LF_NETBLOCK_CLASS are \"A\", \"B\" and \"C\", care and\n# consideration is required when blocking network classes A or B\n#\n# Set LF_NETBLOCK to \"0\" to disable this feature\nLF_NETBLOCK = \"0\"\nLF_NETBLOCK_INTERVAL = \"86400\"\nLF_NETBLOCK_COUNT = \"4\"\nLF_NETBLOCK_CLASS = \"C\"\nLF_NETBLOCK_ALERT = \"1\"\n\n# Valid settings for LF_NETBLOCK_IPV6 are \"/64\", \"/56\", \"/48\", \"/32\" and \"/24\"\n# Great care should be taken with IPV6 netblock ranges due to the large number\n# of addresses involved\n#\n# To disable IPv6 netblocks set to \"\"\nLF_NETBLOCK_IPV6 = \"\"\n\n###############################################################################\n# SECTION:Global Lists/DYNDNS/Blocklists\n###############################################################################\n# Safe Chain Update. If enabled, all dynamic update chains (GALLOW*, GDENY*,\n# SPAMHAUS, DSHIELD, BOGON, CC_ALLOW, CC_DENY, ALLOWDYN*) will create a new\n# chain when updating, and insert it into the relevant LOCALINPUT/LOCALOUTPUT\n# chain, then flush and delete the old dynamic chain and rename the new chain.\n#\n# This prevents a small window of opportunity opening when an update occurs and\n# the dynamic chain is flushed for the new rules.\n#\n# This option should not be enabled on servers with long dynamic chains (e.g.\n# CC_DENY/CC_ALLOW lists) and low memory. It should also not be enabled on\n# Virtuozzo VPS servers with a restricted numiptent value. This is because each\n# chain will effectively be duplicated while the update occurs, doubling the\n# number of iptables rules\nSAFECHAINUPDATE = \"0\"\n\n# If you wish to allow access from dynamic DNS records (for example if your IP\n# address changes whenever you connect to the internet but you have a dedicated\n# dynamic DNS record from the likes of dyndns.org) then you can list the FQDN\n# records in csf.dyndns and then set the following to the number of seconds to\n# poll for a change in the IP address. If the IP address has changed iptables\n# will be updated.\n#\n# If the FQDN has multiple A records then all of the IP addresses will be\n# processed. If IPV6 is enabled, then all IPv6 AAAA IP address records will\n# also be allowed.\n# \n# A setting of 600 would check for IP updates every 10 minutes. Set the value\n# to 0 to disable the feature\nDYNDNS = \"0\"\n\n# To always ignore DYNDNS IP addresses in lfd blocking, set the following\n# option to 1\nDYNDNS_IGNORE = \"0\"\n\n# The follow Global options allow you to specify a URL where csf can grab a\n# centralised copy of an IP allow or deny block list of your own. You need to\n# specify the full URL in the following options, i.e.:\n# http://www.somelocation.com/allow.txt\n#\n# The actual retrieval of these IP's is controlled by lfd, so you need to set\n# LF_GLOBAL to the interval (in seconds) when you want lfd to retrieve. lfd\n# will perform the retrieval when it runs and then again at the specified\n# interval. A sensible interval would probably be every 3600 seconds (1 hour).\n# A minimum value of 300 is enforced for LF_GLOBAL if enabled\n#\n# You do not have to specify both an allow and a deny file\n#\n# You can also configure a global ignore file for IP's that lfd should ignore\nLF_GLOBAL = \"0\"\n\nGLOBAL_ALLOW = \"\"\nGLOBAL_DENY = \"\"\nGLOBAL_IGNORE = \"\"\n\n# Provides the same functionality as DYNDNS but with a GLOBAL URL file. Set\n# this to the URL of the file containing DYNDNS entries\nGLOBAL_DYNDNS = \"\"\n\n# Set the following to the number of seconds to poll for a change in the IP\n# address resoved from GLOBAL_DYNDNS\nGLOBAL_DYNDNS_INTERVAL = \"600\"\n\n# To always ignore GLOBAL_DYNDNS IP addresses in lfd blocking, set the following\n# option to 1\nGLOBAL_DYNDNS_IGNORE = \"0\"\n\n# Blocklists are controlled by modifying /etc/csf/csf.blocklists\n#\n# If you don't want BOGON rules applied to specific NICs, then list them in\n# a comma separated list (e.g \"eth1,eth2\")\nLF_BOGON_SKIP = \"\"\n\n# The following option can be used to select the method csf will use to\n# retrieve URL data and files\n#\n# This can be set to use:\n#\n# 1. Perl module HTTP::Tiny\n# 2. Perl module LWP::UserAgent\n# 3. CURL/WGET (set location at the bottom of csf.conf if installed)\n#\n# HTTP::Tiny is much faster than LWP::UserAgent and is included in the csf\n# distribution. LWP::UserAgent may have to be installed manually, but it can\n# better support https:// URL's which also needs the LWP::Protocol::https perl\n# module\n#\n# CURL/WGET uses the system binaries if installed but does not always provide\n# good feedback when it fails. The script will first look for CURL, if that\n# does not exist at the configured location it will then look for WGET\n#\n# Additionally, 1 or 2 are used and the retrieval fails, then if either CURL or\n# WGET are available, an additional attempt will be using CURL/WGET. This is\n# useful if the perl distribution has outdated modules that do not support\n# modern SSL/TLS implementations\n#\n# To install the LWP perl modules required:\n#\n# On rpm based systems:\n# \n#   yum install perl-libwww-perl.noarch perl-LWP-Protocol-https.noarch\n#\n# On APT based systems:\n#\n#   apt-get install libwww-perl liblwp-protocol-https-perl\n#\n# Via cpan:\n#\n#   perl -MCPAN -eshell\n#   cpan&gt; install LWP LWP::Protocol::https\n#\n# We recommend setting this set to \"2\" or \"3\" as upgrades to csf will be\n# performed over SSL as well as other URLs used when retrieving external data\n#\n# \"1\" = HTTP::Tiny\n# \"2\" = LWP::UserAgent\n# \"3\" = CURL/WGET (set location at the bottom of csf.conf)\nURLGET = \"2\"\n\n# If you need csf/lfd to use a proxy, then you can set this option to the URL\n# of the proxy. The proxy provided will be used for both HTTP and HTTPS\n# connections\nURLPROXY = \"\"\n\n###############################################################################\n# SECTION:Country Code Lists and Settings\n###############################################################################\n# Country Code to CIDR allow/deny. In the following options you can allow or\n# deny whole country CIDR ranges. The CIDR blocks are obtained from a selected\n# source below. They also display Country Code Country and City for reported IP\n# addresses and lookups\n#\n# There are a number of sources for these databases, before utilising them you\n# need to visit each site and ensure you abide by their license provisions\n# where stated:\n\n# 1. MaxMind\n#\n# MaxMind GeoLite2 Country/City and ASN databases at:\n# https://dev.MaxMind.com/geoip/geoip2/geolite2/\n# This feature relies entirely on that service being available\n#\n# Advantages: This is a one stop shop for all of the databases required for\n# these features. They provide a consistent dataset for blocking and reporting\n# purposes\n#\n# Disadvantages: MaxMind require a license key to download their databases.\n# This is free of charge, but requires the user to create an account on their\n# website to generate the required key:\n#\n# WARNING: As of 2019-12-29, MaxMind REQUIRES you to create an account on their\n# site and to generate a license key to use their databases. See:\n# https://www.maxmind.com/en/geolite2/signup\n# https://blog.maxmind.com/2019/12/18/significant-changes-to-accessing-and-using-geolite2-databases/\n# \n# You MUST set the following to continue using the IP lookup features of csf,\n# otherwise an error will be generated and the features will not work.\n# Alternatively set CC_SRC below to a different provider\n#\n# MaxMind License Key:\nMM_LICENSE_KEY = \"\"\n\n# 2. DB-IP, ipdeny.com, iptoasn.com\n#\n# Advantages: The ipdeny.com databases form CC blocking are better optimised\n# and so are quicker to process and create fewer iptables entries. All of these\n# databases are free to download without requiring login or key\n#\n# Disadvantages: Multiple sources mean that any one of the three could\n# interrupt the provision of these features. It may also mean that there are\n# inconsistences between them\n#\n# https://db-ip.com/db/lite.php\n# http://ipdeny.com/\n# https://iptoasn.com/\n# http://download.geonames.org/export/dump/readme.txt\n\n# Set the following to your preferred source:\n#\n# \"1\" - MaxMind\n# \"2\" - db-ip, ipdeny, iptoasn\n#\n# The default is \"2\" on new installations of csf, or set to \"1\" to use the\n# MaxMind databases after obtaining a license key\nCC_SRC = \"2\"\n\n# In the following options, specify the the two-letter ISO Country Code(s).\n# The iptables rules are for incoming connections only\n#\n# Additionally, ASN numbers can also be added to the comma separated lists\n# below that also list Country Codes. The same WARNINGS for Country Codes apply\n# to the use of ASNs. More about Autonomous System Numbers (ASN):\n# http://www.iana.org/assignments/as-numbers/as-numbers.xhtml\n# ASNs must be listed as ASnnnn (where nnnn is the ASN number)\n#\n# You should consider using LF_IPSET when using any of the following options\n#\n# WARNING: These lists are never 100% accurate and some ISP's (e.g. AOL) use\n# non-geographic IP address designations for their clients\n#\n# WARNING: Some of the CIDR lists are huge and each one requires a rule within\n# the incoming iptables chain. This can result in significant performance\n# overheads and could render the server inaccessible in some circumstances. For\n# this reason (amongst others) we do not recommend using these options\n#\n# WARNING: Due to the resource constraints on VPS servers this feature should\n# not be used on such systems unless you choose very small CC zones\n#\n# WARNING: CC_ALLOW allows access through all ports in the firewall. For this\n# reason CC_ALLOW probably has very limited use and CC_ALLOW_FILTER is\n# preferred\n#\n# Each option is a comma separated list of CC's, e.g. \"US,GB,DE\"\nCC_DENY = \"\"\nCC_ALLOW = \"\"\n\n# An alternative to CC_ALLOW is to only allow access from the following\n# countries but still filter based on the port and packets rules. All other\n# connections are dropped\nCC_ALLOW_FILTER = \"\"\n\n# This option allows access from the following countries to specific ports\n# listed in CC_ALLOW_PORTS_TCP and CC_ALLOW_PORTS_UDP\n#\n# Note: The rules for this feature are inserted after the allow and deny\n# rules to still allow blocking of IP addresses\n#\n# Each option is a comma separated list of CC's, e.g. \"US,GB,DE\"\nCC_ALLOW_PORTS = \"\"\n\n# All listed ports should be removed from TCP_IN/UDP_IN to block access from\n# elsewhere. This option uses the same format as TCP_IN/UDP_IN\n#\n# An example would be to list port 21 here and remove it from TCP_IN/UDP_IN\n# then only countries listed in CC_ALLOW_PORTS can access FTP\nCC_ALLOW_PORTS_TCP = \"\"\nCC_ALLOW_PORTS_UDP = \"\"\n\n# This option denies access from the following countries to specific ports\n# listed in CC_DENY_PORTS_TCP and CC_DENY_PORTS_UDP\n#\n# Note: The rules for this feature are inserted after the allow and deny\n# rules to still allow allowing of IP addresses\n#\n# Each option is a comma separated list of CC's, e.g. \"US,GB,DE\"\nCC_DENY_PORTS = \"\"\n\n# This option uses the same format as TCP_IN/UDP_IN. The ports listed should\n# NOT be removed from TCP_IN/UDP_IN\n#\n# An example would be to list port 21 here then countries listed in\n# CC_DENY_PORTS cannot access FTP\nCC_DENY_PORTS_TCP = \"\"\nCC_DENY_PORTS_UDP = \"\"\n\n# This Country Code list will prevent lfd from blocking IP address hits for the\n# listed CC's\n#\n# CC_LOOKUPS must be enabled to use this option\nCC_IGNORE = \"\"\n\n# This Country Code list will only allow SMTP AUTH to be advertised to the\n# listed countries in EXIM. This is to help limit attempts at distributed\n# attacks against SMTP AUTH which are difficult to achive since port 25 needs\n# to be open to relay email\n#\n# The reason why this works is that if EXIM does not advertise SMTP AUTH on a\n# connection, then SMTP AUTH will not accept logins, defeating the attacks\n# without restricting mail relaying\n#\n# This option can generate a very large list of IP addresses that could easily\n# severely impact on SMTP (mail) performance, so care must be taken when\n# selecting countries and if performance issues ensue\n#\n# The option SMTPAUTH_RESTRICT must be enabled to use this option\nCC_ALLOW_SMTPAUTH = \"\"\n\n# These options can control which IP blocks are redirected to the MESSENGER\n# service, if it is enabled\n#\n# If Country Codes are listed in CC_MESSENGER_ALLOW, then only a blocked IP\n# that resolves to one of those Country Codes will be redirected to the\n# MESSENGER service\n#\n# If Country Codes are listed in CC_MESSENGER_DENY, then a blocked IP that\n# resolves to one of those Country Codes will NOT be redirected to the\n# MESSENGER service\n#\nCC_MESSENGER_ALLOW = \"\"\nCC_MESSENGER_DENY = \"\"\n\n# Set this option to a valid CIDR (i.e. 1 to 32) to ignore CIDR blocks smaller\n# than this value when implementing CC_DENY/CC_ALLOW/CC_ALLOW_FILTER. This can\n# help reduce the number of CC entries and may improve iptables throughput.\n# Obviously, this will deny/allow fewer IP addresses depending on how small you\n# configure the option\n#\n# For example, to ignore all CIDR (and single IP) entries small than a /16, set\n# this option to \"16\". Set to \"\" to block all CC IP addresses\nCC_DROP_CIDR = \"\"\n\n# Display Country Code and Country for reported IP addresses. This option can\n# be configured to use the databases enabled at the top of this section. An\n# additional option is also available if you cannot use those databases:\n#\n# \"0\" - disable\n# \"1\" - Reports: Country Code and Country\n# \"2\" - Reports: Country Code and Country and Region and City\n# \"3\" - Reports: Country Code and Country and Region and City and ASN\n# \"4\" - Reports: Country Code and Country and Region and City (db-ip.com)\n#\n# Note: \"4\" does not use the databases enabled at the top of this section\n# directly for lookups. Instead it uses a URL-based lookup from\n# https://db-ip.com and so avoids having to download and process the large\n# databases. Please visit the https://db-ip.com and read their limitations and\n# understand that this option will either cease to function or be removed by us\n# if that site is abused or overloaded. ONLY use this option if you have\n# difficulties using the databases enabled at the top of this section. This\n# option is ONLY for IP lookups, NOT when using the CC_* options above, which\n# will continue to use the databases enabled at the top of this section\n#\nCC_LOOKUPS = \"1\"\n\n# Display Country Code and Country for reported IPv6 addresses using the\n# databases enabled at the top of this section\n#\n# \"0\" - disable\n# \"1\" - enable and report the detail level as specified in CC_LOOKUPS\n#\n# This option must also be enabled to allow IPv6 support to CC_*, MESSENGER and\n# PORTFLOOD\nCC6_LOOKUPS = \"0\"\n\n# This option tells lfd how often to retrieve the databases for CC_ALLOW,\n# CC_ALLOW_FILTER, CC_DENY, CC_IGNORE and CC_LOOKUPS (in days)\nCC_INTERVAL = \"14\"\n\n###############################################################################\n# SECTION:Login Failure Blocking and Alerts\n###############################################################################\n# The following[*] triggers are application specific. If you set LF_TRIGGER to\n# \"0\" the value of each trigger is the number of failures against that\n# application that will trigger lfd to block the IP address\n#\n# If you set LF_TRIGGER to a value greater than \"0\" then the following[*]\n# application triggers are simply on or off (\"0\" or \"1\") and the value of\n# LF_TRIGGER is the total cumulative number of failures that will trigger lfd\n# to block the IP address\n#\n# Setting the application trigger to \"0\" disables it\nLF_TRIGGER = \"0\"\n\n# If LF_TRIGGER is &gt; \"0\" then LF_TRIGGER_PERM can be set to \"1\" to permanently\n# block the IP address, or LF_TRIGGER_PERM can be set to a value greater than\n# \"1\" and the IP address will be blocked temporarily for that value in seconds.\n# For example:\n# LF_TRIGGER_PERM = \"1\" =&gt; the IP is blocked permanently\n# LF_TRIGGER_PERM = \"3600\" =&gt; the IP is blocked temporarily for 1 hour\n#\n# If LF_TRIGGER is \"0\", then the application LF_[application]_PERM value works\n# in the same way as above and LF_TRIGGER_PERM serves no function\nLF_TRIGGER_PERM = \"1\"\n\n# To only block access to the failed application instead of a complete block\n# for an ip address, you can set the following to \"1\", but LF_TRIGGER must be\n# set to \"0\" with specific application[*] trigger levels also set appropriately\n#\n# The ports that are blocked can be configured by changing the PORTS_* options\nLF_SELECT = \"0\"\n\n# Send an email alert if an IP address is blocked by one of the [*] triggers\nLF_EMAIL_ALERT = \"1\"\n\n# Send an email alert if an IP address is only temporarily blocked by one of\n# the [*] triggers\n#\n# Note: LF_EMAIL_ALERT must still be enabled to get permanent block emails\nLF_TEMP_EMAIL_ALERT = \"1\"\n\n# [*]Enable login failure detection of sshd connections\n#\n# SECURITY NOTE: This option is affected by the RESTRICT_SYSLOG option. Read\n# this file about RESTRICT_SYSLOG before enabling this option:\nLF_SSHD = \"5\"\nLF_SSHD_PERM = \"1\"\n\n# [*]Enable login failure detection of ftp connections\n#\n# SECURITY NOTE: This option is affected by the RESTRICT_SYSLOG option. Read\n# this file about RESTRICT_SYSLOG before enabling this option:\nLF_FTPD = \"10\"\nLF_FTPD_PERM = \"1\"\n\n# [*]Enable login failure detection of SMTP AUTH connections\nLF_SMTPAUTH = \"5\"\nLF_SMTPAUTH_PERM = \"1\"\n\n# [*]Enable syntax failure detection of Exim connections\nLF_EXIMSYNTAX = \"10\"\nLF_EXIMSYNTAX_PERM = \"1\"\n\n# [*]Enable login failure detection of pop3 connections\n#\n# SECURITY NOTE: This option is affected by the RESTRICT_SYSLOG option. Read\n# this file about RESTRICT_SYSLOG before enabling this option:\nLF_POP3D = \"0\"\nLF_POP3D_PERM = \"1\"\n\n# [*]Enable login failure detection of imap connections\n#\n# SECURITY NOTE: This option is affected by the RESTRICT_SYSLOG option. Read\n# this file about RESTRICT_SYSLOG before enabling this option:\nLF_IMAPD = \"0\"\nLF_IMAPD_PERM = \"1\"\n\n# [*]Enable login failure detection of Apache .htpasswd connections\n# Due to the often high logging rate in the Apache error log, you might want to\n# enable this option only if you know you are suffering from attacks against\n# password protected directories\nLF_HTACCESS = \"5\"\nLF_HTACCESS_PERM = \"1\"\n\n# [*]Enable failure detection of repeated Apache mod_security rule triggers\nLF_MODSEC = \"5\"\nLF_MODSEC_PERM = \"1\"\n\n# [*]Enable detection of repeated BIND denied requests\n# This option should be enabled with care as it will prevent blocked IPs from\n# resolving any domains on the server. You might want to set the trigger value\n# reasonably high to avoid this\n# Example: LF_BIND = \"100\"\nLF_BIND = \"0\"\nLF_BIND_PERM = \"1\"\n\n# [*]Enable detection of repeated suhosin ALERTs\n# Example: LF_SUHOSIN = \"5\"\n#\n# SECURITY NOTE: This option is affected by the RESTRICT_SYSLOG option. Read\n# this file about RESTRICT_SYSLOG before enabling this option:\nLF_SUHOSIN = \"0\"\nLF_SUHOSIN_PERM = \"1\"\n\n# [*]Enable detection of repeated cxs ModSecurity mod_security rule triggers\n# This option will block IP addresses if cxs detects a hits from the\n# ModSecurity rule associated with it\n#\n# Note: This option takes precedence over LF_MODSEC and removes any hits\n# counted towards LF_MODSEC for the cxs rule\n#\n# This setting should probably set very low, perhaps to 1, if you want to\n# effectively block IP addresses for this trigger option\nLF_CXS = \"0\"\nLF_CXS_PERM = \"1\"\n\n# [*]Enable detection of repeated Apache mod_qos rule triggers\nLF_QOS = \"0\"\nLF_QOS_PERM = \"1\"\n\n# [*]Enable detection of repeated Apache symlink race condition triggers from\n# the Apache patch provided by:\n# http://www.mail-archive.com/dev@httpd.apache.org/msg55666.html\n# This patch has also been included by cPanel via the easyapache option:\n# \"Symlink Race Condition Protection\"\nLF_SYMLINK = \"0\"\nLF_SYMLINK_PERM = \"1\"\n\n# [*]Enable login failure detection of webmin connections\n#\n# SECURITY NOTE: This option is affected by the RESTRICT_SYSLOG option. Read\n# this file about RESTRICT_SYSLOG before enabling this option:\nLF_WEBMIN = \"0\"\nLF_WEBMIN_PERM = \"1\"\n\n# Send an email alert if anyone logs in successfully using SSH\n#\n# SECURITY NOTE: This option is affected by the RESTRICT_SYSLOG option. Read\n# this file about RESTRICT_SYSLOG before enabling this option:\nLF_SSH_EMAIL_ALERT = \"1\"\n\n# Send an email alert if anyone uses su to access another account. This will\n# send an email alert whether the attempt to use su was successful or not\n#\n# SECURITY NOTE: This option is affected by the RESTRICT_SYSLOG option. Read\n# this file about RESTRICT_SYSLOG before enabling this option:\nLF_SU_EMAIL_ALERT = \"1\"\n\n# Send an email alert if anyone uses sudo to access another account. This will\n# send an email alert whether the attempt to use sudo was successful or not\n#\n# NOTE: This option could become onerous if sudo is used extensively for root\n# access by administrators or control panels. It is provided for those where\n# this is not the case\n#\n# SECURITY NOTE: This option is affected by the RESTRICT_SYSLOG option. Read\n# this file about RESTRICT_SYSLOG before enabling this option:\nLF_SUDO_EMAIL_ALERT = \"0\"\n\n# Send an email alert if anyone accesses webmin\n#\n# SECURITY NOTE: This option is affected by the RESTRICT_SYSLOG option. Read\n# this file about RESTRICT_SYSLOG before enabling this option:\nLF_WEBMIN_EMAIL_ALERT = \"1\"\n\n# Send an email alert if anyone logs in successfully to root on the console\n#\n# SECURITY NOTE: This option is affected by the RESTRICT_SYSLOG option. Read\n# this file about RESTRICT_SYSLOG before enabling this option:\nLF_CONSOLE_EMAIL_ALERT = \"1\"\n\n# This option will keep track of the number of \"File does not exist\" errors in\n# HTACCESS_LOG. If the number of hits is more than LF_APACHE_404 in LF_INTERVAL\n# seconds then the IP address will be blocked\n#\n# Care should be used with this option as it could generate many\n# false-positives, especially Search Bots (use csf.rignore to ignore such bots)\n# so only use this option if you know you are under this type of attack\n#\n# A sensible setting for this would be quite high, perhaps 200\n#\n# To disable set to \"0\"\nLF_APACHE_404 = \"0\"\n\n# If this option is set to 1 the blocks will be permanent\n# If this option is &gt; 1, the blocks will be temporary for the specified number\n# of seconds\nLF_APACHE_404_PERM = \"3600\"\n\n# This option will keep track of the number of \"client denied by server\n# configuration\" errors in HTACCESS_LOG. If the number of hits is more than\n# LF_APACHE_403 in LF_INTERVAL seconds then the IP address will be blocked\n#\n# Care should be used with this option as it could generate many\n# false-positives, especially Search Bots (use csf.rignore to ignore such bots)\n# so only use this option if you know you are under this type of attack\n#\n# A sensible setting for this would be quite high, perhaps 200\n#\n# To disable set to \"0\"\nLF_APACHE_403 = \"0\"\n\n# If this option is set to 1 the blocks will be permanent\n# If this option is &gt; 1, the blocks will be temporary for the specified number\n# of seconds\nLF_APACHE_403_PERM = \"3600\"\n\n# This option will keep track of the number of 401 failures in HTACCESS_LOG.\n# If the number of hits is more than LF_APACHE_401 in LF_INTERVAL seconds then\n# the IP address will be blocked\n#\n# To disable set to \"0\"\nLF_APACHE_401 = \"0\"\n\n# This option is used to determine if the Apache error_log format contains the\n# client port after the client IP. In Apache prior to v2.4, this was not the\n# case. In Apache v2.4+ the error_log format can be configured using\n# ErrorLogFormat, making the port directive optional\n#\n# Unfortunately v2.4 ErrorLogFormat places the port number after a colon next\n# to the client IP by default. This makes determining client IPv6 addresses\n# difficult unless we know whether the port is being appended or not\n#\n# lfd will attempt to autodetect the correct value if this option is set to \"0\"\n# from the httpd binary found in common locations. If it fails to find a binary\n# it will be set to \"2\", unless specified here\n#\n# The value can be set here explicitly if the autodetection does not work:\n# 0 - autodetect\n# 1 - no port directive after client IP\n# 2 - port directive after client IP\nLF_APACHE_ERRPORT = \"0\"\n\n# If this option is set to 1 the blocks will be permanent\n# If this option is &gt; 1, the blocks will be temporary for the specified number\n# of seconds\nLF_APACHE_401_PERM = \"3600\"\n\n# This option will send an alert if the ModSecurity IP persistent storage grows\n# excessively large: https://goo.gl/rGh5sF\n#\n# More information on cPanel servers here: https://goo.gl/vo6xTE\n#\n# LF_MODSECIPDB_FILE must be set to the correct location of the database file\n#\n# The check is performed at lfd startup and then once per hour, the template\n# used is modsecipdbalert.txt\n#\n# Set to \"0\" to disable this option, otherwise it is the threshold size of the\n# file to report in gigabytes, e.g. set to 5 for 5GB\nLF_MODSECIPDB_ALERT = \"0\"\n\n# This is the location of the persistent IP storage file on the server, e.g.:\n# /var/run/modsecurity/data/ip.pag\n# /var/cpanel/secdatadir/ip.pag\n# /var/cache/modsecurity/ip.pag\n# /usr/local/apache/conf/modsec/data/msa/ip.pag\n# /var/tmp/ip.pag\n# /tmp/ip.pag\nLF_MODSECIPDB_FILE = \"/var/run/modsecurity/data/ip.pag\"\n\n# System Exploit Checking. This option is designed to perform a series of tests\n# to send an alert in case a possible server compromise is detected\n#\n# To enable this feature set the following to the checking interval in seconds\n# (a value of 300 would seem sensible).\n#\n# To disable set to \"0\"\nLF_EXPLOIT = \"300\"\n\n# This comma separated list allows you to ignore tests LF_EXPLOIT performs\n#\n# For the SUPERUSER check, you can list usernames in csf.suignore to have them\n# ignored for that test\n#\n# Valid tests are:\n# SUPERUSER\n#\n# If you want to ignore a test add it to this as a comma separated list, e.g.\n# \"SUPERUSER\"\nLF_EXPLOIT_IGNORE = \"\"\n\n# Set the time interval to track login and other LF_ failures within (seconds),\n# i.e. LF_TRIGGER failures within the last LF_INTERVAL seconds\nLF_INTERVAL = \"3600\"\n\n# This is how long the lfd process sleeps (in seconds) before processing the\n# log file entries and checking whether other events need to be triggered\nLF_PARSE = \"5\"\n\n# This is the interval that is used to flush reports of usernames, files and\n# pids so that persistent problems continue to be reported, in seconds.\n# A value of 3600 seems sensible\nLF_FLUSH = \"3600\"\n\n# Under some circumstances iptables can fail to include a rule instruction,\n# especially if more than one request is made concurrently. In this event, a\n# permanent block entry may exist in csf.deny, but not in iptables.\n#\n# This option instructs csf to deny an already blocked IP address the number\n# of times set. The downside, is that there will be multiple entries for an IP\n# address in csf.deny and possibly multiple rules for the same IP address in\n# iptables. This needs to be taken into consideration when unblocking such IP\n# addresses.\n#\n# Set to \"0\" to disable this feature. Do not set this too high for the reasons\n# detailed above (e.g. \"5\" should be more than enough)\nLF_REPEATBLOCK = \"0\"\n\n# By default csf will create both an inbound and outbound blocks from/to an IP\n# unless otherwise specified in csf.deny and GLOBAL_DENY. This is the most\n# effective way to block IP traffic. This option instructs csf to only block\n# inbound traffic from those IP's and so reduces the number of iptables rules,\n# but at the expense of less effectiveness. For this reason we recommend\n# leaving this option disabled\n# \n# Set to \"0\" to disable this feature - the default\nLF_BLOCKINONLY = \"0\"\n\n###############################################################################\n# SECTION:CloudFlare\n###############################################################################\n# This features provides interaction with the CloudFlare Firewall\n#\n# As CloudFlare is a reverse proxy, any attacking IP addresses (so far as \n# iptables is concerned) come from the CloudFlare IP's. To counter this, an\n# Apache module (mod_cloudflare) is available that obtains the true attackers\n# IP from a custom HTTP header record (similar functionality is available\n# for other HTTP daemons\n#\n# However, despite now knowing the true attacking IP address, iptables cannot\n# be used to block that IP as the traffic is still coming from the CloudFlare\n# servers\n#\n# CloudFlare have provided a Firewall feature within the user account where\n# rules can be added to block, challenge or whitelist IP addresses\n#\n# Using the CloudFlare API, this feature adds and removes attacking IPs from\n# that firewall and provides CLI (and via the UI) additional commands\n#\n# See /etc/csf/readme.txt for more information about this feature and the\n# restrictions for its use BEFORE enabling this feature\nCF_ENABLE = \"0\"\n\n# This can be set to either \"block\" or \"challenge\" (see CloudFlare docs)\nCF_BLOCK = \"block\"\n\n# This setting determines how long the temporary block will apply within csf\n# and CloudFlare, keeping them in sync\n#\n# Block duration in seconds - overrides perm block or time of individual blocks\n# in lfd for block triggers\nCF_TEMP = \"3600\"\n\n###############################################################################\n# SECTION:Directory Watching &amp; Integrity \n###############################################################################\n# Enable Directory Watching. This enables lfd to check /tmp and /dev/shm\n# directories for suspicious files, i.e. script exploits. If a suspicious\n# file is found an email alert is sent. One alert per file per LF_FLUSH\n# interval is sent\n#\n# To enable this feature set the following to the checking interval in seconds.\n# To disable set to \"0\"\nLF_DIRWATCH = \"300\"\n\n# To remove any suspicious files found during directory watching, enable the\n# following. These files will be appended to a tarball in\n# /var/lib/csf/suspicious.tar\nLF_DIRWATCH_DISABLE = \"0\"\n\n# This option allows you to have lfd watch a particular file or directory for\n# changes and should they change and email alert using watchalert.txt is sent\n#\n# To enable this feature set the following to the checking interval in seconds\n# (a value of 60 would seem sensible) and add your entries to csf.dirwatch\n#\n# Set to disable set to \"0\"\nLF_DIRWATCH_FILE = \"0\"\n\n# System Integrity Checking. This enables lfd to compare md5sums of the\n# servers OS binary application files from the time when lfd starts. If the\n# md5sum of a monitored file changes an alert is sent. This option is intended\n# as an IDS (Intrusion Detection System) and is the last line of detection for\n# a possible root compromise.\n#\n# There will be constant false-positives as the servers OS is updated or\n# monitored application binaries are updated. However, unexpected changes\n# should be carefully inspected.\n#\n# Modified files will only be reported via email once.\n#\n# To enable this feature set the following to the checking interval in seconds\n# (a value of 3600 would seem sensible). This option may increase server I/O\n# load onto the server as it checks system binaries.\n#\n# To disable set to \"0\"\nLF_INTEGRITY = \"3600\"\n\n###############################################################################\n# SECTION:Distributed Attacks\n###############################################################################\n# Distributed Account Attack. This option will keep track of login failures\n# from distributed IP addresses to a specific application account. If the\n# number of failures matches the trigger value above, ALL of the IP addresses\n# involved in the attack will be blocked according to the temp/perm rules above\n#\n# Tracking applies to LF_SSHD, LF_FTPD, LF_SMTPAUTH, LF_POP3D, LF_IMAPD, \n# LF_HTACCESS\n#\n# SECURITY NOTE: This option is affected by the RESTRICT_SYSLOG option. Read\n# this file about RESTRICT_SYSLOG before enabling this option:\nLF_DISTATTACK = \"0\"\n\n# Set the following to the minimum number of unique IP addresses that trigger\n# LF_DISTATTACK\nLF_DISTATTACK_UNIQ = \"2\"\n\n# Distributed FTP Logins. This option will keep track of successful FTP logins.\n# If the number of successful logins to an individual account is at least\n# LF_DISTFTP in LF_DIST_INTERVAL from at least LF_DISTFTP_UNIQ IP addresses,\n# then all of the IP addresses will be blocked\n#\n# This option can help mitigate the common FTP account compromise attacks that\n# use a distributed network of zombies to deface websites\n#\n# A sensible setting for this might be 5, depending on how many different\n# IP addresses you expect to an individual FTP account within LF_DIST_INTERVAL\n#\n# To disable set to \"0\"\n#\n# SECURITY NOTE: This option is affected by the RESTRICT_SYSLOG option. Read\n# this file about RESTRICT_SYSLOG before enabling this option:\nLF_DISTFTP = \"0\"\n\n# Set the following to the minimum number of unique IP addresses that trigger\n# LF_DISTFTP. LF_DISTFTP_UNIQ must be &lt;= LF_DISTFTP for this to work\nLF_DISTFTP_UNIQ = \"3\"\n\n# If this option is set to 1 the blocks will be permanent\n# If this option is &gt; 1, the blocks will be temporary for the specified number\n# of seconds\nLF_DISTFTP_PERM = \"1\"\n\n# Send an email alert if LF_DISTFTP is triggered\nLF_DISTFTP_ALERT = \"1\"\n\n# Distributed SMTP Logins. This option will keep track of successful SMTP\n# logins. If the number of successful logins to an individual account is at\n# least LF_DISTSMTP in LF_DIST_INTERVAL from at least LF_DISTSMTP_UNIQ IP\n# addresses, then all of the IP addresses will be blocked. These options only\n# apply to the exim MTA\n#\n# This option can help mitigate the common SMTP account compromise attacks that\n# use a distributed network of zombies to send spam\n#\n# A sensible setting for this might be 5, depending on how many different\n# IP addresses you expect to an individual SMTP account within LF_DIST_INTERVAL\n#\n# To disable set to \"0\"\nLF_DISTSMTP = \"0\"\n\n# Set the following to the minimum number of unique IP addresses that trigger\n# LF_DISTSMTP. LF_DISTSMTP_UNIQ must be &lt;= LF_DISTSMTP for this to work\nLF_DISTSMTP_UNIQ = \"3\"\n\n# If this option is set to 1 the blocks will be permanent\n# If this option is &gt; 1, the blocks will be temporary for the specified number\n# of seconds\nLF_DISTSMTP_PERM = \"1\"\n\n# Send an email alert if LF_DISTSMTP is triggered\nLF_DISTSMTP_ALERT = \"1\"\n\n# This is the interval during which a distributed FTP or SMTP attack is\n# measured\nLF_DIST_INTERVAL = \"300\"\n\n# If LF_DISTFTP or LF_DISTSMTP is triggered, then if the following contains the\n# path to a script, it will run the script and pass the following as arguments:\n#\n# LF_DISTFTP/LF_DISTSMTP\n# account name\n# log file text\n#\n# The action script must have the execute bit and interpreter (shebang) set\nLF_DIST_ACTION = \"\"\n\n###############################################################################\n# SECTION:Login Tracking\n###############################################################################\n# Block POP3 logins if greater than LT_POP3D times per hour per account per IP\n# address (0=disabled)\n#\n# This is a temporary block for the rest of the hour, afterwhich the IP is\n# unblocked\n#\n# SECURITY NOTE: This option is affected by the RESTRICT_SYSLOG option. Read\n# this file about RESTRICT_SYSLOG before enabling this option:\nLT_POP3D = \"0\"\n\n# Block IMAP logins if greater than LT_IMAPD times per hour per account per IP\n# address (0=disabled) - not recommended for IMAP logins due to the ethos\n# within which IMAP works. If you want to use this, setting it quite high is\n# probably a good idea\n#\n# This is a temporary block for the rest of the hour, afterwhich the IP is\n# unblocked\n#\n# SECURITY NOTE: This option is affected by the RESTRICT_SYSLOG option. Read\n# this file about RESTRICT_SYSLOG before enabling this option:\nLT_IMAPD = \"0\"\n\n# Send an email alert if an account exceeds LT_POP3D/LT_IMAPD logins per hour\n# per IP\nLT_EMAIL_ALERT = \"1\"\n\n# If LF_PERMBLOCK is enabled but you do not want this to apply to\n# LT_POP3D/LT_IMAPD, then enable this option\nLT_SKIPPERMBLOCK = \"0\"\n\n###############################################################################\n# SECTION:Connection Tracking\n###############################################################################\n# Connection Tracking. This option enables tracking of all connections from IP\n# addresses to the server. If the total number of connections is greater than\n# this value then the offending IP address is blocked. This can be used to help\n# prevent some types of DOS attack.\n#\n# Care should be taken with this option. It's entirely possible that you will\n# see false-positives. Some protocols can be connection hungry, e.g. FTP, IMAPD\n# and HTTP so it could be quite easy to trigger, especially with a lot of\n# closed connections in TIME_WAIT. However, for a server that is prone to DOS\n# attacks this may be very useful. A reasonable setting for this option might\n# be around 300.\n#\n# To disable this feature, set this to 0\nCT_LIMIT = \"0\"\n\n# Connection Tracking interval. Set this to the the number of seconds between\n# connection tracking scans\nCT_INTERVAL = \"30\"\n\n# Send an email alert if an IP address is blocked due to connection tracking\nCT_EMAIL_ALERT = \"1\"\n\n# If you want to make IP blocks permanent then set this to 1, otherwise blocks\n# will be temporary and will be cleared after CT_BLOCK_TIME seconds\nCT_PERMANENT = \"0\"\n\n# If you opt for temporary IP blocks for CT, then the following is the interval\n# in seconds that the IP will remained blocked for (e.g. 1800 = 30 mins)\nCT_BLOCK_TIME = \"1800\"\n\n# If you don't want to count the TIME_WAIT state against the connection count\n# then set the following to \"1\"\nCT_SKIP_TIME_WAIT = \"0\"\n\n# If you only want to count specific states (e.g. SYN_RECV) then add the states\n# to the following as a comma separated list. E.g. \"SYN_RECV,TIME_WAIT\"\n#\n# Leave this option empty to count all states against CT_LIMIT\nCT_STATES = \"\"\n\n# If you only want to count specific ports (e.g. 80,443) then add the ports\n# to the following as a comma separated list. E.g. \"80,443\"\n#\n# Leave this option empty to count all ports against CT_LIMIT\nCT_PORTS = \"\"\n\n# If the total number of connections from a class C subnet is greater than this\n# value then the offending subnet is blocked according to the other CT_*\n# settings\n#\n# This option can be used to help prevent some types of DOS attack where a\n# range of IP's between x.y.z.1-255 has connected to the server\n#\n# If you use a reverse proxy service such as Cloudflare you should not enable\n# this option, or should exclude the ports that you have proxied in CT_PORTS\n#\n# To disable this feature, set this to 0\nCT_SUBNET_LIMIT = \"0\"\n\n###############################################################################\n# SECTION:Process Tracking\n###############################################################################\n# Process Tracking. This option enables tracking of user and nobody processes\n# and examines them for suspicious executables or open network ports. Its\n# purpose is to identify potential exploit processes that are running on the\n# server, even if they are obfuscated to appear as system services. If a\n# suspicious process is found an alert email is sent with relevant information.\n# It is then the responsibility of the recipient to investigate the process\n# further as the script takes no further action\n#\n# The following is the number of seconds a process has to be active before it\n# is inspected. If you set this time too low, then you will likely trigger\n# false-positives with CGI or PHP scripts.\n# Set the value to 0 to disable this feature\nPT_LIMIT = \"60\"\n\n# How frequently processes are checked in seconds\nPT_INTERVAL = \"60\"\n\n# If you want process tracking to highlight php or perl scripts that are run\n# through apache then disable the following,\n# i.e. set it to 0\n#\n# While enabling this setting will reduce false-positives, having it set to 0\n# does provide better checking for exploits running on the server\nPT_SKIP_HTTP = \"0\"\n\n# lfd will report processes, even if they're listed in csf.pignore, if they're\n# tagged as (deleted) by Linux. This information is provided in Linux under\n# /proc/PID/exe. A (deleted) process is one that is running a binary that has\n# the inode for the file removed from the file system directory. This usually\n# happens when the binary has been replaced due to an upgrade for it by the OS\n# vendor or another third party (e.g. cPanel). You need to investigate whether\n# this is indeed the case to be sure that the original binary has not been\n# replaced by a rootkit or is running an exploit.\n#\n# Note: If a deleted executable process is detected and reported then lfd will\n# not report children of the parent (or the parent itself if a child triggered\n# the report) if the parent is also a deleted executable process\n#\n# To stop lfd reporting such process you need to restart the daemon to which it\n# belongs and therefore run the process using the replacement binary (presuming\n# one exists). This will normally mean running the associated startup script in\n# /etc/init.d/\n#\n# If you do want lfd to report deleted binary processes, set to 1\nPT_DELETED = \"0\"\n\n# If a PT_DELETED event is triggered, then if the following contains the path to\n# a script, it will be run in a child process and passed the executable, pid,\n# account for the process, and parent pid\n#\n# The action script must have the execute bit and interpreter (shebang) set. An\n# example is provided in /usr/local/csf/bin/pt_deleted_action.pl\n#\n# WARNING: Make sure you read and understand the potential security\n# implications of such processes in PT_DELETED above before simply restarting\n# such processes with a script\nPT_DELETED_ACTION = \"\"\n\n# User Process Tracking. This option enables the tracking of the number of\n# process any given account is running at one time. If the number of processes\n# exceeds the value of the following setting an email alert is sent with\n# details of those processes. If you specify a user in csf.pignore it will be\n# ignored\n#\n# Set to 0 to disable this feature\nPT_USERPROC = \"10\"\n\n# This User Process Tracking option sends an alert if any user process exceeds\n# the virtual memory usage set (MB). To ignore specific processes or users use\n# csf.pignore\n#\n# Set to 0 to disable this feature\nPT_USERMEM = \"512\"\n\n# This User Process Tracking option sends an alert if any user process exceeds\n# the RSS memory usage set (MB) - RAM used, not virtual. To ignore specific\n# processes or users use csf.pignore\n#\n# Set to 0 to disable this feature\nPT_USERRSS = \"256\"\n\n# This User Process Tracking option sends an alert if any linux user process\n# exceeds the time usage set (seconds). To ignore specific processes or users\n# use csf.pignore\n#\n# Set to 0 to disable this feature\nPT_USERTIME = \"1800\"\n\n# If this option is set then processes detected by PT_USERMEM, PT_USERTIME or\n# PT_USERPROC are killed\n#\n# Warning: We don't recommend enabling this option unless absolutely necessary\n# as it can cause unexpected problems when processes are suddenly terminated.\n# It can also lead to system processes being terminated which could cause\n# stability issues. It is much better to leave this option disabled and to\n# investigate each case as it is reported when the triggers above are breached\n#\n# Note: Processes that are running deleted excecutables (see PT_DELETED) will\n# not be killed by lfd\nPT_USERKILL = \"0\"\n\n# If you want to disable email alerts if PT_USERKILL is triggered, then set\n# this option to 0\nPT_USERKILL_ALERT = \"1\"\n\n# If a PT_* event is triggered, then if the following contains the path to\n# a script, it will be run in a child process and passed the PID(s) of the\n# process(es) in a comma separated list.\n#\n# The action script must have the execute bit and interpreter (shebang) set\nPT_USER_ACTION = \"\"\n\n# Check the PT_LOAD_AVG minute Load Average (can be set to 1 5 or 15 and\n# defaults to 5 if set otherwise) on the server every PT_LOAD seconds. If the\n# load average is greater than or equal to PT_LOAD_LEVEL then an email alert is\n# sent. lfd then does not report subsequent high load until PT_LOAD_SKIP\n# seconds has passed to prevent email floods.\n#\n# Set PT_LOAD to \"0\" to disable this feature\nPT_LOAD = \"30\"\nPT_LOAD_AVG = \"5\"\nPT_LOAD_LEVEL = \"6\"\nPT_LOAD_SKIP = \"3600\"\n\n# This is the Apache Server Status URL used in the email alert. Requires the\n# Apache mod_status module to be installed and configured correctly\nPT_APACHESTATUS = \"http://127.0.0.1/server-status\"\n\n# If a PT_LOAD event is triggered, then if the following contains the path to\n# a script, it will be run in a child process. For example, the script could\n# contain commands to terminate and restart httpd, php, exim, etc incase of\n# looping processes. The action script must have the execute bit an \n# interpreter (shebang) set\nPT_LOAD_ACTION = \"\"\n\n# Fork Bomb Protection. This option checks the number of processes with the\n# same session id and if greater than the value set, the whole session tree is\n# terminated and an alert sent\n#\n# You can see an example of common session id processes on most Linux systems\n# using: \"ps axf -O sid\"\n#\n# On cPanel servers, PT_ALL_USERS should be enabled to use this option\n# effectively\n#\n# This option will check root owned processes. Session id 0 and 1 will always\n# be ignored as they represent kernel and init processes. csf.pignore will be\n# honoured, but bear in mind that a session tree can contain a variety of users\n# and executables\n#\n# Care needs to be taken to ensure that this option only detects runaway fork\n# bombs, so should be set higher than any session tree is likely to get (e.g.\n# httpd could have 100s of legitimate children on very busy systems). A\n# sensible starting point on most servers might be 250\nPT_FORKBOMB = \"0\"\n\n# Terminate hung SSHD sessions. When under an SSHD login attack, SSHD processes\n# are often left hanging after their connecting IP addresses have been blocked\n#\n# This option will terminate the SSH processes created by the blocked IP. This\n# option is preferred over PT_SSHDHUNG\nPT_SSHDKILL = \"0\"\n\n# This option will terminate all processes with the cmdline of \"sshd: unknown\n# [net]\" or \"sshd: unknown [priv]\" if they have been running for more than 60\n# seconds\nPT_SSHDHUNG = \"0\"\n\n###############################################################################\n# SECTION:Port Scan Tracking\n###############################################################################\n# Port Scan Tracking. This feature tracks port blocks logged by iptables to\n# syslog. If an IP address generates a port block that is logged more than\n# PS_LIMIT within PS_INTERVAL seconds, the IP address will be blocked.\n#\n# This feature could, for example, be useful for blocking hackers attempting\n# to access the standard SSH port if you have moved it to a port other than 22\n# and have removed 22 from the TCP_IN list so that connection attempts to the\n# old port are being logged\n#\n# This feature blocks all iptables blocks from the iptables logs, including\n# repeated attempts to one port or SYN flood blocks, etc\n#\n# Note: This feature will only track iptables blocks from the log file set in\n# IPTABLES_LOG below and if you have DROP_LOGGING enabled. However, it will\n# cause redundant blocking with DROP_IP_LOGGING enabled\n#\n# Warning: It's possible that an elaborate DDOS (i.e. from multiple IP's)\n# could very quickly fill the iptables rule chains and cause a DOS in itself.\n# The DENY_IP_LIMIT should help to mitigate such problems with permanent blocks\n# and the DENY_TEMP_IP_LIMIT with temporary blocks\n#\n# Set PS_INTERVAL to \"0\" to disable this feature. A value of between 60 and 300\n# would be sensible to enable this feature\n#\n# SECURITY NOTE: This option is affected by the RESTRICT_SYSLOG option. Read\n# this file about RESTRICT_SYSLOG before enabling this option:\nPS_INTERVAL = \"0\"\nPS_LIMIT = \"10\"\n\n# You can specify the ports and/or port ranges that should be tracked by the\n# Port Scan Tracking feature. The following setting is a comma separated list\n# of those ports and uses the same format as TCP_IN. The setting of\n# 0:65535,ICMP,INVALID,OPEN,BRD covers all ports\n#\n# Special values are:\n#   ICMP    - include ICMP blocks (see ICMP_*)\n#   INVALID - include INVALID blocks (see PACKET_FILTER)\n#   OPEN    - include TCP_IN and UDP_IN open port blocks - *[proto]_IN Blocked*\n#   BRD     - include UDP Broadcast IPs, otherwise they are ignored\nPS_PORTS = \"0:65535,ICMP\"\n\n# To specify how many different ports qualifies as a Port Scan you can increase\n# the following from the default value of 1. The risk in doing so will mean\n# that persistent attempts to attack a specific closed port will not be\n# detected and blocked\nPS_DIVERSITY = \"1\"\n\n# You can select whether IP blocks for Port Scan Tracking should be temporary\n# or permanent. Set PS_PERMANENT to \"0\" for temporary and \"1\" for permanent\n# blocking. If set to \"0\" PS_BLOCK_TIME is the amount of time in seconds to\n# temporarily block the IP address for\nPS_PERMANENT = \"0\"\nPS_BLOCK_TIME = \"3600\"\n\n# Set the following to \"1\" to enable Port Scan Tracking email alerts, set to\n# \"0\" to disable them\nPS_EMAIL_ALERT = \"1\"\n\n###############################################################################\n# SECTION:User ID Tracking\n###############################################################################\n# User ID Tracking. This feature tracks UID blocks logged by iptables to\n# syslog. If a UID generates a port block that is logged more than UID_LIMIT\n# times within UID_INTERVAL seconds, an alert will be sent\n#\n# Note: This feature will only track iptables blocks from the log file set in\n# IPTABLES_LOG and if DROP_OUT_LOGGING and DROP_UID_LOGGING are enabled.\n#\n# To ignore specific UIDs list them in csf.uidignore and then restart lfd\n#\n# Set UID_INTERVAL to \"0\" to disable this feature. A value of between 60 and 300\n# would be sensible to enable this feature\n#\n# SECURITY NOTE: This option is affected by the RESTRICT_SYSLOG option. Read\n# this file about RESTRICT_SYSLOG before enabling this option:\nUID_INTERVAL = \"0\"\nUID_LIMIT = \"10\"\n\n# You can specify the ports and/or port ranges that should be tracked by the\n# User ID Tracking feature. The following setting is a comma separated list\n# of those ports and uses the same format as TCP_OUT. The default setting of\n# 0:65535,ICMP covers all ports\nUID_PORTS = \"0:65535,ICMP\"\n\n###############################################################################\n# SECTION:Account Tracking\n###############################################################################\n# Account Tracking. The following options enable the tracking of modifications\n# to the accounts on a server. If any of the enabled options are triggered by\n# a modifications to an account, an alert email is sent. Only the modification\n# is reported. The cause of the modification will have to be investigated\n# manually\n#\n# You can set AT_ALERT to the following:\n# 0 = disable this feature\n# 1 = enable this feature for all accounts\n# 2 = enable this feature only for superuser accounts (UID = 0, e.g. root, etc)\n# 3 = enable this feature only for the root account\nAT_ALERT = \"2\"\n\n# This options is the interval between checks in seconds\nAT_INTERVAL = \"60\"\n\n# Send alert if a new account is created\nAT_NEW = \"1\"\n\n# Send alert if an existing account is deleted\nAT_OLD = \"1\"\n\n# Send alert if an account password has changed\nAT_PASSWD = \"1\"\n\n# Send alert if an account uid has changed\nAT_UID = \"1\"\n\n# Send alert if an account gid has changed\nAT_GID = \"1\"\n\n# Send alert if an account login directory has changed\nAT_DIR = \"1\"\n\n# Send alert if an account login shell has changed\nAT_SHELL = \"1\"\n\n###############################################################################\n# SECTION:Integrated User Interface\n###############################################################################\n# Integrated User Interface. This feature provides a HTML UI to csf and lfd,\n# without requiring a control panel or web server. The UI runs as a sub process\n# to the lfd daemon\n#\n# As it runs under the root account and successful login provides root access\n# to the server, great care should be taken when configuring and using this\n# feature. There are additional restrictions to enhance secure access to the UI\n#\n# See readme.txt for more information about using this feature BEFORE enabling\n# it for security and access reasons\n# \n# 1 to enable, 0 to disable\nUI = \"1\"\n\n# Set this to the port that want to bind this service to. You should configure\n# this port to be &gt;1023 and different from any other port already being used\n#\n# Do NOT enable access to this port in TCP_IN, instead only allow trusted IP's\n# to the port using Advanced Allow Filters (see readme.txt)\nUI_PORT = \"8546\"\n\n# Optionally set the IP address to bind to. Normally this should be left blank\n# to bind to all IP addresses on the server.\n#\n# If the server is configured for IPv6 but the IP to bind to is IPv4, then the\n# IP address MUST use the IPv6 representation. For example 1.2.3.4 must use\n# ::ffff:1.2.3.4\n#\n# Leave blank to bind to all IP addresses on the server\nUI_IP = \"\"\n\n# This should be a secure, hard to guess username\n# \n# This must be changed from the default\nUI_USER = \"admin\"\n\n# This should be a secure, hard to guess password. That is, at least 8\n# characters long with a mixture of upper and lowercase characters plus \n# numbers and non-alphanumeric characters\n#\n# This must be changed from the default\nUI_PASS = \"password\"\n\n# This option controls whether login attempts to the CSF/LFD UI from the\n# server's own local IP addresses are blocked. These are the IPs bound to\n# the server\u2019s interfaces (as discovered by getethdev), including those on\n# private ranges (e.g. 192.168.x.x, 172.16\u201331.x.x, 10.x.x.x) and any local\n# Docker or virtual bridge networks.\n#\n# Setting this to \"1\" prevents access attempts that originate from a local\n# interface address, which can help block unauthorized or loopback-style\n# access through containers, proxies, or internal networks.\n#\n# If you legitimately access the UI via a local bridge (e.g. Docker proxy\n# IP such as 172.18.0.2), you may need to set this to \"0\" or explicitly\n# allow the IP in csf.allow.ui.\n#\n# Keeping this set to \"1\" means that attempts to access the CSF web\n# interface from a local network IP will be blocked. In a browser, this\n# typically results in the error:\n# PR_CONNECT_RESET_ERROR\n#\n# Default: 1 (block local interface IPs)\nUI_BLOCK_PRIVATE_NET = \"1\"\n\n# This is the login session timeout. If there is no activity for a logged in\n# session within this number of seconds, the session will timeout and a new\n# login will be required\n#\n# For security reasons, you should always keep this option low (i.e 60-300)\nUI_TIMEOUT = \"300\"\n\n# This is the maximum concurrent connections allowed to the server. The default\n# value should be sufficient\nUI_CHILDREN = \"5\"\n\n# The number of login retries allowed within a 24 hour period. A successful\n# login from the IP address will clear the failures\n#\n# For security reasons, you should always keep this option low (i.e 0-10)\nUI_RETRY = \"5\"\n\n# If enabled, this option will add the connecting IP address to the file \n# /etc/csf/ui/ui.ban after UI_RETRY login failures. The IP address will not be\n# able to login to the UI while it is listed in this file. The UI_BAN setting\n# does not refer to any of the csf/lfd allow or ignore files, e.g. csf.allow,\n# csf.ignore, etc.\n#\n# For security reasons, you should always enable this option\nUI_BAN = \"1\"\n\n# If enabled, only IPs (or CIDR's) listed in the file /etc/csf/ui/ui.allow will\n# be allowed to login to the UI. The UI_ALLOW setting does not refer to any of\n# the csf/lfd allow or ignore files, e.g. csf.allow, csf.ignore, etc.\n#\n# For security reasons, you should always enable this option and use ui.allow\nUI_ALLOW = \"1\"\n\n# If enabled, this option will trigger an iptables block through csf after\n# UI_RETRY login failures\n#\n# 0 = no block;1 = perm block;nn=temp block for nn secs\nUI_BLOCK = \"1\"\n\n# This controls what email alerts are sent with regards to logins to the UI. It\n# uses the uialert.txt template\n#\n# 4 = login success + login failure/ban/block + login attempts\n# 3 = login success + login failure/ban/block\n# 2 = login failure/ban/block\n# 1 = login ban/block\n# 0 = disabled\nUI_ALERT = \"4\"\n\n# This is the SSL cipher list that the Integrated UI will negotiate from\nUI_CIPHER = \"ALL:!ADH:RC4+RSA:+HIGH:+MEDIUM:-LOW:-SSLv2:-EXP:!kEDH\"\n\n# This is the SSL protocol version used. See IO::Socket::SSL if you wish to\n# change this and to understand the implications of changing it\nUI_SSL_VERSION = \"SSLv23:!SSLv3:!SSLv2\"\n\n# If cxs is installed then enabling this option will provide a dropdown box to\n# switch between applications\nUI_CXS = \"0\"\n\n# There is a modified installation of ConfigServer Explorer (cse) provided with\n# the csf distribution. If this option is enabled it will provide a dropdown\n# box to switch between applications\nUI_CSE = \"0\"\n\n###############################################################################\n# SECTION:Messenger service\n###############################################################################\n# Messenger service. This feature allows the display of a message to a blocked\n# connecting IP address to inform the user that they are blocked in the\n# firewall. This can help when users get themselves blocked, e.g. due to\n# multiple login failures. The service is provided by two daemons running on\n# ports providing either an HTML or TEXT message\n#\n# This feature does not work on servers that do not have the iptables module\n# ipt_REDIRECT loaded. Typically, this will be with MONOLITHIC kernels. VPS\n# server admins should check with their VPS host provider that the iptables\n# module is included\n#\n# IPv6 will need the IO::Socket::INET6 perl module\n#\n# For further information on features and limitations refer to the csf\n# readme.txt\n#\n# Note: Run /etc/csf/csftest.pl to check whether this option will function on\n# this server\n#\n# 1 to enable, 0 to disable\nMESSENGER = \"0\"\n\n# Provide this service to temporary IP address blocks\nMESSENGER_TEMP = \"1\"\n\n# Provide this service to permanent IP address blocks\nMESSENGER_PERM = \"1\"\n\n# User account to run the service servers under. We recommend creating a\n# specific non-priv, non-shell account for this purpose\n#\n# Note: When using MESSENGERV2, this account must NOT be a valid control panel\n# account, it must be created manually as explained in the csf readme.txt\nMESSENGER_USER = \"csf\"\n\n# This option points to the file(s) containing the Apache VirtualHost SSL\n# definitions. This can be a file glob if there are multiple files to search.\n# Only Apache v2 SSL VirtualHost definitions are supported\n#\n# This is used by MESSENGERV1 and MESSENGERV2 only\nMESSENGER_HTTPS_CONF = \"/etc/httpd/conf.d/ssl.conf\"\n\n# The following options can be specified to provide a default fallback\n# certificate to be used if either SNI is not supported or a hosted domain does\n# not have an SSL certificate. If a fallback is not provided, one of the certs\n# obtained from MESSENGER_HTTPS_CONF will be used\n#\n# This is used by MESSENGERV1 and MESSENGERV2 only\nMESSENGER_HTTPS_KEY = \"/etc/pki/tls/private/localhost.key\"\nMESSENGER_HTTPS_CRT = \"/etc/pki/tls/certs/localhost.crt\"\n\n# Set this to the port that will receive the HTTPS HTML message. You should\n# configure this port to be &gt;1023 and different from the TEXT and HTML port. Do\n# NOT enable access to this port in TCP_IN. This option requires the perl\n# module IO::Socket::SSL at a version level that supports SNI (1.83+).\n# Additionally the version of openssl on the server must also support SNI\n#\n# The option uses existing SSL certificates on the server for each domain to\n# maintain a secure connection without browser warnings. It uses SNI to choose\n# the correct certificate to use for each client connection\n#\n# Warning: On some servers the amount of memory used by the HTTPS MESSENGER\n# service can become significant depending on various factors associated with\n# the use of IO::Socket::SSL including the number of domains and certificates\n# served. This is normally only an issue if using MESSENGERV1\nMESSENGER_HTTPS = \"8887\"\n\n# This comma separated list are the HTTPS HTML ports that will be redirected\n# for the blocked IP address. If you are using per application blocking\n# (LF_TRIGGER) then only the relevant block port will be redirected to the\n# messenger port\n#\n# Recommended setting \"443\" plus any end-user control panel SSL ports. So, for\n# cPanel: \"443,2083,2096\"\nMESSENGER_HTTPS_IN = \"443\"\n\n# Set this to the port that will receive the HTML message. You should configure\n# this port to be &gt;1023 and different from the TEXT port. Do NOT enable access\n# to this port in TCP_IN\nMESSENGER_HTML = \"8888\"\n\n# This comma separated list are the HTML ports that will be redirected for the\n# blocked IP address. If you are using per application blocking (LF_TRIGGER)\n# then only the relevant block port will be redirected to the messenger port\nMESSENGER_HTML_IN = \"80\"\n\n# Set this to the port that will receive the TEXT message. You should configure\n# this port to be &gt;1023 and different from the HTML port. Do NOT enable access\n# to this port in TCP_IN\nMESSENGER_TEXT = \"8889\"\n\n# This comma separated list are the TEXT ports that will be redirected for the\n# blocked IP address. If you are using per application blocking (LF_TRIGGER)\n# then only the relevant block port will be redirected to the messenger port\nMESSENGER_TEXT_IN = \"21\"\n\n# These settings limit the rate at which connections can be made to the\n# messenger service servers. Its intention is to provide protection from\n# attacks or excessive connections to the servers. If the rate is exceeded then\n# iptables will revert for the duration to the normal blocking activity\n#\n# See the iptables man page for the correct --limit rate syntax\nMESSENGER_RATE = \"100/s\"\nMESSENGER_BURST = \"150\"\n\n# MESSENGERV1 only:\n#------------------------------------------------------------------------------\n# This is the maximum concurrent connections allowed to each service server\n#\n# Note: This number should be increased to cater for the number of local images\n# served by this page, including one for favicon.ico. This is because each\n# image displayed counts as an additional connection\nMESSENGER_CHILDREN = \"20\"\n\n# This options ignores ServerAlias definitions that begin with \"mail.\". This\n# can help reduce memory usage on systems that do not require the use of\n# MESSENGER_HTTPS on those subdomains\n#\n# Set to 0 to include these ServerAlias definitions\nMESSENGER_HTTPS_SKIPMAIL = \"1\"\n\n# MESSENGERV2 only:\n#------------------------------------------------------------------------------\n# MESSENGERV2. This option is available on cPanel servers running Apache v2.4+\n# under EA4.\n#\n# This uses the Apache http daemon to provide the web server functionality for\n# the MESSENGER HTML and HTTPS services. It uses a fraction of the resources\n# that the lfd inbuilt service uses and overcomes the memory overhead of using\n# the MESSENGER HTTPS service\n#\n# For more information consult readme.txt before enabling this option\n#MESSENGERV2 = \"0\"\n\n# MESSENGERV3 only:\n#------------------------------------------------------------------------------\n# MESSENGERV3. This option is available on any server running Apache v2.4+,\n# Litespeed or Openlitespeed\n#\n# This uses the web server http daemon to provide the web server functionality\n# for the MESSENGER HTML and HTTPS services. It uses a fraction of the\n# resources that the lfd inbuilt service uses and overcomes the memory overhead\n# of using the MESSENGER HTTPS service\n#\n# For more information consult readme.txt before enabling this option\nMESSENGERV3 = \"0\"\n\n# This is the file or directory where the additional web server configuration\n# file should be included\nMESSENGERV3LOCATION = \"/etc/httpd/conf.d/\"\n\n# This is the command to restart the web server\nMESSENGERV3RESTART = \"service httpd restart\"\n\n# This is the command to test the validity of the web server configuration. If\n# using Litespeed, set to \"\"\nMESSENGERV3TEST = \"/usr/sbin/apachectl -t\"\n\n# This must be set to the main httpd.conf file for either Apache or Litespeed\nMESSENGERV3HTTPS_CONF = \"/etc/httpd/conf/httpd.conf\"\n\n# This can be set to either:\n# \"apache\" - for servers running Apache v2.4+ or Litespeed using Apache\n# configuration\n# \"litespeed\" - for Litespeed or Openlitespeed\nMESSENGERV3WEBSERVER = \"apache\"\n\n# On creation, set the MESSENGER_USER public_html directory permissions to\n# Note: If you precreate this directory the following setting will be ignored\nMESSENGERV3PERMS = \"711\"\n\n# On creation, set the MESSENGER_USER public_html directory group user to\n# Note: If you precreate this directory the following setting will be ignored\nMESSENGERV3GROUP = \"apache\"\n\n# This is the web server configuration to allow PHP scripts to run. If left\n# empty, the MESSENGER service will try to configure this. If this does not\n# work, this should be set as an \"Include /path/to/csf_php.conf\" or similar\n# file which must contain appropriate web server configuration to allow PHP\n# scripts to run. This line will be included within each MESSENGER VirtualHost\n# container. This will replace the [MESSENGERV3PHPHANDLER] line from the csf\n# webserver template files\nMESSENGERV3PHPHANDLER = \"\"\n\n# RECAPTCHA:\n#------------------------------------------------------------------------------\n# The RECAPTCHA options provide a way for end-users that have blocked\n# themselves in the firewall to unblock themselves.\n#\n# A valid Google ReCAPTCHA (v2) key set is required for this feature from:\n# https://www.google.com/recaptcha/intro/index.html\n#\n# When configuring a new reCAPTCHA API key set you must ensure that the option\n# for \"Domain Name Validation\" is unticked so that the same reCAPTCHA can be\n# used for all domains hosted on the server. lfd then checks that the hostname\n# of the request resolves to an IP on this server\n#\n# This feature requires the installation of the LWP::UserAgent perl module (see\n# option URLGET for more details)\n#\n# The template used for this feature is /etc/csf/messenger/index.recaptcha.html\n#\n# Note: An unblock will fail if the end-users IP is located in a netblock,\n# blocklist or CC_* deny entry\nRECAPTCHA_SITEKEY = \"\"\nRECAPTCHA_SECRET = \"\"\n\n# Send an email when an IP address successfully attempts to unblock themselves.\n# This does not necessarily mean the IP was unblocked, only that the\n# post-recaptcha unblock request was attempted\n#\n# Set to \"0\" to disable\nRECAPTCHA_ALERT = \"1\"\n\n# If the server uses NAT then resolving the hostname to hosted IPs will likely\n# not succeed. In that case, the external IP addresses must be listed as comma\n# separated list here\nRECAPTCHA_NAT = \"\"\n\n###############################################################################\n# SECTION:lfd Clustering\n###############################################################################\n# lfd Clustering. This allows the configuration of an lfd cluster environment\n# where a group of servers can share blocks and configuration option changes.\n# Included are CLI and UI options to send requests to the cluster.\n#\n# See the readme.txt file for more information and details on setup and\n# security risks.\n#\n# Set this to a comma separated list of cluster member IP addresses to send\n# requests to. Alternatively, it can be set to the full path of a file that\n# will read in one IP per line, e.g.:\n# \"/etc/csf/cluster_sendto.txt\"\nCLUSTER_SENDTO = \"\"\n\n# Set this to a comma separated list of cluster member IP addresses to receive\n# requests from. Alternatively, it can be set to the full path of a file that\n# will read in one IP per line, e.g.:\n# \"/etc/csf/cluster_recvfrom.txt\"\nCLUSTER_RECVFROM = \"\"\n\n# IP address of the master node in the cluster allowed to send CLUSTER_CONFIG\n# changes\nCLUSTER_MASTER = \"\"\n\n# If this is a NAT server, set this to the public IP address of this server\nCLUSTER_NAT = \"\"\n\n# If a cluster member should send requests on an IP other than the default IP,\n# set it here\nCLUSTER_LOCALADDR = \"\"\n\n# Cluster communication port (must be the same on all member servers). There\n# is no need to open this port in the firewall as csf will automatically add\n# in and out bound rules to allow communication between cluster members\nCLUSTER_PORT = \"7777\"\n\n# This is a secret key used to encrypt cluster communications using the\n# Blowfish algorithm. It should be between 8 and 56 characters long,\n# preferably &gt; 20 random characters\n# 56 chars:    01234567890123456789012345678901234567890123456789012345\nCLUSTER_KEY = \"\"\n\n# Automatically send lfd blocks to all members of CLUSTER_SENDTO. Those\n# servers must have this servers IP address listed in their CLUSTER_RECVFROM\n#\n# Set to 0 to disable this feature\nCLUSTER_BLOCK = \"1\"\n\n# This option allows the enabling and disabling of the Cluster configuration\n# changing options --cconfig, --cconfigr, --cfile, --ccfile sent from the\n# CLUSTER_MASTER server\n#\n# Set this option to 1 to allow Cluster configurations to be received\nCLUSTER_CONFIG = \"0\"\n\n# Maximum number of child processes to listen on. High blocking rates or large\n# clusters may need to increase this\nCLUSTER_CHILDREN = \"10\"\n\n###############################################################################\n# SECTION:Port Knocking\n###############################################################################\n# Port Knocking. This feature allows port knocking to be enabled on multiple\n# ports with a variable number of knocked ports and a timeout. There must be a\n# minimum of 3 ports to knock for an entry to be valid\n#\n# See the following for information regarding Port Knocking:\n# http://www.portknocking.org/\n#\n# This feature does not work on servers that do not have the iptables module\n# ipt_recent loaded. Typically, this will be with MONOLITHIC kernels. VPS\n# server admins should check with their VPS host provider that the iptables\n# module is included\n#\n# For further information and syntax refer to the Port Knocking section of the\n# csf readme.txt\n#\n# Note: Run /etc/csf/csftest.pl to check whether this option will function on\n# this server\n#\n# openport;protocol;timeout;kport1;kport2;kport3[...;kportN],...\n# e.g.: 22;TCP;20;100;200;300;400\nPORTKNOCKING = \"\"\n\n# Enable PORTKNOCKING logging by iptables\nPORTKNOCKING_LOG = \"1\"\n\n# Send an email alert if the PORTKNOCKING port is opened. PORTKNOCKING_LOG must\n# also be enabled to use this option\n#\n# SECURITY NOTE: This option is affected by the RESTRICT_SYSLOG option. Read\n# this file about RESTRICT_SYSLOG before enabling this option:\nPORTKNOCKING_ALERT = \"0\"\n\n###############################################################################\n# SECTION:Log Scanner\n###############################################################################\n# Log Scanner. This feature will send out an email summary of the log lines of\n# each log listed in /etc/csf/csf.logfiles. All lines will be reported unless\n# they match a regular expression in /etc/csf/csf.logignore\n#\n# File globbing is supported for logs listed in /etc/csf/csf.logfiles. However,\n# be aware that the more files lfd has to track, the greater the performance\n# hit. Note: File globs are only evaluated when lfd is started\n#\n# Note: lfd builds the report continuously from lines logged after lfd has\n# started, so any lines logged when lfd is not running will not be reported\n# (e.g. during reboot). If lfd is restarted, then the report will include any\n# lines logged during the previous lfd logging period that weren't reported\n#\n# 1 to enable, 0 to disable\nLOGSCANNER = \"0\"\n\n# This is the interval each report will be sent based on the logalert.txt\n# template\n#\n# The interval can be set to:\n# \"hourly\" - sent on the hour\n# \"daily\"  - sent at midnight (00:00)\n# \"manual\" - sent whenever \"csf --logrun\" is run. This allows for scheduling\n#            via cron job\nLOGSCANNER_INTERVAL = \"hourly\"\n\n# Report Style\n# 1 = Separate chronological log lines per log file\n# 2 = Simply chronological log of all lines\nLOGSCANNER_STYLE = \"1\"\n\n# Send the report email even if no log lines reported\n# 1 to enable, 0 to disable\nLOGSCANNER_EMPTY = \"1\"\n\n# Maximum number of lines in the report before it is truncated. This is to\n# prevent log lines flooding resulting in an excessively large report. This\n# might need to be increased if you choose a daily report\nLOGSCANNER_LINES = \"5000\"\n\n###############################################################################\n# SECTION:Statistics Settings\n###############################################################################\n# Statistics\n#\n# Some of the Statistics output requires the gd graphics library and the\n# GD::Graph perl module with all dependent modules to be installed for the UI\n# for them to be displayed\n#\n# This option enabled statistical data gathering\nST_ENABLE = \"1\"\n\n# This option determines how many iptables log lines to store for reports\nST_IPTABLES = \"100\"\n\n# This option indicates whether rDNS and CC lookups are performed at the time\n# the log line is recorded (this is not performed when viewing the reports)\n#\n# Warning: If DROP_IP_LOGGING is enabled and there are frequent iptables hits,\n# then enabling this setting could cause serious performance problems\nST_LOOKUP = \"0\"\n\n# This option will gather basic system statstics. Through the UI it displays\n# various graphs for disk, cpu, memory, network, etc usage over 4 intervals:\n#  . Hourly (per minute)\n#  . 24 hours (per minute)\n#  . 7 days (per minute averaged over an hour)\n#  . 30 days (per minute averaged over an hour) - user definable\n# The data is stored in /var/lib/csf/stats/system and the option requires the\n# perl GD::Graph module\n#\n# Note: Disk graphs do not show on Virtuozzo/OpenVZ servers as the kernel on\n# those systems do not store the required information in /proc/diskstats\n# On new installations or when enabling this option it will take time for these\n# graphs to be populated\nST_SYSTEM = \"0\"\n\n# Set the maximum days to collect statistics for. The default is 30 days, the\n# more data that is collected the longer it will take for each of the graphs to\n# be generated\nST_SYSTEM_MAXDAYS = \"30\"\n\n# If ST_SYSTEM is enabled, then these options can collect MySQL statistical\n# data. To use this option the server must have the perl modules DBI and\n# DBD::mysql installed.\n#\n# Set this option to \"0\" to disable MySQL data collection\nST_MYSQL = \"0\"\n\n# The following options are for authentication for MySQL data collection. If\n# the password is left blank and the user set to \"root\" then the procedure will\n# look for authentication data in /root/.my.cnf. Otherwise, you will need to\n# provide a MySQL username and password to collect the data. Any MySQL user\n# account can be used\nST_MYSQL_USER = \"root\"\nST_MYSQL_PASS = \"\"\nST_MYSQL_HOST = \"localhost\"\n\n# If ST_SYSTEM is enabled, then this option can collect Apache statistical data\n# The value for PT_APACHESTATUS must be correctly set\nST_APACHE = \"0\"\n\n# The following options measure disk write performance using dd (location set\n# via the DD setting). It creates a 64MB file called /var/lib/dd_write_test and\n# the statistics will plot the MB/s response time of the disk. As this is an IO\n# intensive operation, it may not be prudent to run this test too often, so by\n# default it is only run every 5 minutes and the result duplicated for each\n# intervening minute for the statistics\n#\n# This is not necessrily a good measure of disk performance, primarily because\n# the measurements are for relatively small amounts of data over a small amount\n# of time. To properly test disk performance there are a variety of tools\n# available that should be run for extended periods of time to obtain an\n# accurate measurement. This metric is provided to give an idea of how the disk\n# is performing over time\n#\n# Note: There is a 15 second timeout performing the check\n#\n# Set to 0 to disable, 1 to enable\nST_DISKW = \"0\"\n\n# The number of minutes that elapse between tests. Default is 5, minimum is 1.\nST_DISKW_FREQ = \"5\"\n\n# This is the command line passed to dd. If you are familiar with dd, or wish\n# to move the output file (of) to a different disk, then you can alter this\n# command. Take great care when making any changes to this command as it is\n# very easy to overwrite a disk using dd if you make a mistake\nST_DISKW_DD = \"if=/dev/zero of=/var/lib/csf/dd_test bs=1MB count=64 conv=fdatasync\"\n\n###############################################################################\n# SECTION:Docker Settings\n###############################################################################\n# This section provides the configuration of iptables rules to allow Docker\n# containers to communicate through the host. If the generated rules do not\n# work with your setup you will have to use a /etc/csf/csfpost.sh file and add\n# your own iptables configuration instead\n#\n# 1 to enable, 0 to disable\nDOCKER = \"0\"\n\n# The network device on the host\nDOCKER_DEVICE = \"docker0\"\n\n# Docker container IPv4 range\nDOCKER_NETWORK4 = \"172.17.0.0/16\"\n\n# Docker container IPv6 range. IPV6 must be enabled and the IPv6 nat table\n# available (see IPv6 section). Leave blank to disable\nDOCKER_NETWORK6 = \"2001:db8:1::/64\"\n\n###############################################################################\n# SECTION:OS Specific Settings\n###############################################################################\n# Binary locations\nIPTABLES = \"/sbin/iptables\"\nIPTABLES_SAVE = \"/sbin/iptables-save\"\nIPTABLES_RESTORE = \"/sbin/iptables-restore\"\nIP6TABLES = \"/sbin/ip6tables\"\nIP6TABLES_SAVE = \"/sbin/ip6tables-save\"\nIP6TABLES_RESTORE = \"/sbin/ip6tables-restore\"\nMODPROBE = \"/sbin/modprobe\"\nIFCONFIG = \"/sbin/ifconfig\"\nSENDMAIL = \"/usr/sbin/sendmail\"\nPS = \"/bin/ps\"\nVMSTAT = \"/usr/bin/vmstat\"\nNETSTAT = \"/bin/netstat\"\nLS = \"/bin/ls\"\nMD5SUM = \"/usr/bin/md5sum\"\nTAR = \"/bin/tar\"\nCHATTR = \"/usr/bin/chattr\"\nUNZIP = \"/usr/bin/unzip\"\nGUNZIP = \"/bin/gunzip\"\nDD = \"/bin/dd\"\nTAIL = \"/usr/bin/tail\"\nGREP = \"/bin/grep\"\nZGREP = \"/bin/zgrep\"\nIPSET = \"/sbin/ipset\"\nSYSTEMCTL = \"/bin/systemctl\"\nHOST = \"/usr/bin/host\"\nIP = \"/bin/ip\"\nCURL = \"/usr/bin/curl\"\nWGET = \"/usr/bin/wget\"\n\n# Log file locations\n#\n# File globbing is allowed for the following logs. However, be aware that the\n# more files lfd has to track, the greater the performance hit\n#\n# Note: File globs are only evaluated when lfd is started\n#\nHTACCESS_LOG = \"/var/log/apache2/error.log\"\nMODSEC_LOG = \"/var/log/apache2/error.log\"\nSSHD_LOG = \"/var/log/auth.log\"\nSU_LOG = \"/var/log/messages\"\nSUDO_LOG = \"/var/log/secure\"\nFTPD_LOG = \"/var/log/messages\"\nSMTPAUTH_LOG = \"/var/log/secure\"\nPOP3D_LOG = \"/var/log/mail.log\"\nIMAPD_LOG = \"/var/log/mail.log\"\nIPTABLES_LOG = \"/var/log/messages\"\nSUHOSIN_LOG = \"/var/log/messages\"\nBIND_LOG = \"/var/log/messages\"\nSYSLOG_LOG = \"/var/log/messages\"\nWEBMIN_LOG = \"/var/log/auth.log\"\n\nCUSTOM1_LOG = \"/var/log/customlog\"\nCUSTOM2_LOG = \"/var/log/customlog\"\nCUSTOM3_LOG = \"/var/log/customlog\"\nCUSTOM4_LOG = \"/var/log/customlog\"\nCUSTOM5_LOG = \"/var/log/customlog\"\nCUSTOM6_LOG = \"/var/log/customlog\"\nCUSTOM7_LOG = \"/var/log/customlog\"\nCUSTOM8_LOG = \"/var/log/customlog\"\nCUSTOM9_LOG = \"/var/log/customlog\"\n\n# The following are comma separated lists used if LF_SELECT is enabled,\n# otherwise they are not used. They are derived from the application returned\n# from a regex match in /usr/local/csf/bin/regex.pm\n#\n# All ports default to tcp blocks. To specify udp or tcp use the format:\n# port;protocol,port;protocol,... For example, \"53;udp,53;tcp\"\nPORTS_pop3d = \"110,995\"\nPORTS_imapd = \"143,993\"\nPORTS_htpasswd = \"80,443\"\nPORTS_mod_security = \"80,443\"\nPORTS_mod_qos = \"80,443\"\nPORTS_symlink = \"80,443\"\nPORTS_suhosin = \"80,443\"\nPORTS_cxs = \"80,443\"\nPORTS_bind = \"53;udp,53;tcp\"\nPORTS_ftpd = \"20,21\"\nPORTS_webmin = \"10000\"\nPORTS_smtpauth = \"25,465,587\"\nPORTS_eximsyntax = \"25,465,587\"\n# This list is replaced, if present, by \"Port\" definitions in\n# /etc/ssh/sshd_config\nPORTS_sshd = \"22\"\n\n# This configuration is for use with generic Linux servers, do not change the\n# following setting:\nGENERIC = \"1\"\n\n# For internal use only. You should not enable this option as it could cause\n# instability in csf and lfd\nDEBUG = \"0\"\n###############################################################################\n</code></pre> <p></p> <p></p>", "tags": ["cheatsheet", "configure", "configs", "resource"]}, {"location": "usage/cheatsheet/conf/#clean-version", "title": "Clean Version", "text": "<p>This is a copy of our clean version of the CSF <code>/etc/csf/csf.conf</code> config file available from our  repository. It contains all of the settings available in our full version, but with all comments removed.</p> <pre><code>TESTING = \"0\"\nTESTING_INTERVAL = \"5\"\nRESTRICT_SYSLOG = \"0\"\nRESTRICT_SYSLOG_GROUP = \"mysyslog\"\nRESTRICT_UI = \"1\"\nAUTO_UPDATES = \"1\"\nLF_SPI = \"1\"\nTCP_IN = \"20,21,22,25,53,853,80,110,143,443,465,587,993,995,5000\"\nTCP_OUT = \"20,21,22,25,53,853,80,110,113,443,587,993,995\"\nUDP_IN = \"20,21,53,853,80,443\"\nUDP_OUT = \"20,21,53,853,113,123\"\nICMP_IN = \"1\"\nICMP_IN_RATE = \"1/s\"\nICMP_OUT = \"1\"\nICMP_OUT_RATE = \"0\"\nICMP_TIMESTAMPDROP = \"0\"\nIPV6 = \"1\"\nIPV6_ICMP_STRICT = \"0\"\nIPV6_SPI = \"1\"\nTCP6_IN = \"20,21,22,25,53,853,80,110,143,443,465,587,993,995,5000\"\nTCP6_OUT = \"20,21,22,25,53,853,80,110,113,443,587,993,995\"\nUDP6_IN = \"20,21,53,853,80,443\"\nUDP6_OUT = \"20,21,53,853,113,123\"\nETH_DEVICE = \"\"\nETH6_DEVICE = \"\"\nETH_DEVICE_SKIP = \"\"\nUSE_CONNTRACK = \"1\"\nUSE_FTPHELPER = \"0\"\nSYSLOG_CHECK = \"0\"\nIGNORE_ALLOW = \"0\"\nDNS_STRICT = \"0\"\nDNS_STRICT_NS = \"0\"\nDENY_IP_LIMIT = \"200\"\nDENY_TEMP_IP_LIMIT = \"100\"\nLF_DAEMON = \"1\"\nLF_CSF = \"1\"\nFASTSTART = \"1\"\nLF_IPSET = \"0\"\nWAITLOCK = \"1\"\nWAITLOCK_TIMEOUT = \"300\"\nLF_IPSET_HASHSIZE = \"1024\"\nLF_IPSET_MAXELEM = \"65536\"\nLFDSTART = \"0\"\nVERBOSE = \"1\"\nPACKET_FILTER = \"1\"\nLF_LOOKUPS = \"1\"\nSTYLE_CUSTOM = \"0\"\nSTYLE_MOBILE = \"1\"\nSMTP_BLOCK = \"0\"\nSMTP_ALLOWLOCAL = \"1\"\nSMTP_REDIRECT = \"0\"\nSMTP_PORTS = \"25,465,587\"\nSMTP_ALLOWUSER = \"\"\nSMTP_ALLOWGROUP = \"mail,mailman\"\nSMTPAUTH_RESTRICT = \"0\"\nSYNFLOOD = \"0\"\nSYNFLOOD_RATE = \"100/s\"\nSYNFLOOD_BURST = \"150\"\nCONNLIMIT = \"\"\nPORTFLOOD = \"\"\nUDPFLOOD = \"0\"\nUDPFLOOD_LIMIT = \"100/s\"\nUDPFLOOD_BURST = \"500\"\nUDPFLOOD_ALLOWUSER = \"named\"\nSYSLOG = \"0\"\nDROP = \"DROP\"\nDROP_OUT = \"REJECT\"\nDROP_LOGGING = \"1\"\nDROP_IP_LOGGING = \"0\"\nDROP_OUT_LOGGING = \"1\"\nDROP_UID_LOGGING = \"1\"\nDROP_ONLYRES = \"0\"\nDROP_NOLOG = \"23,67,68,111,113,135:139,445,500,513,520\"\nDROP_PF_LOGGING = \"0\"\nCONNLIMIT_LOGGING = \"0\"\nUDPFLOOD_LOGGING = \"1\"\nLOGFLOOD_ALERT = \"0\"\nLF_ALERT_TO = \"\"\nLF_ALERT_FROM = \"\"\nLF_ALERT_SMTP = \"\"\nBLOCK_REPORT = \"\"\nUNBLOCK_REPORT = \"\"\nX_ARF = \"0\"\nX_ARF_FROM = \"\"\nX_ARF_TO = \"\"\nX_ARF_ABUSE = \"0\"\nLF_PERMBLOCK = \"1\"\nLF_PERMBLOCK_INTERVAL = \"86400\"\nLF_PERMBLOCK_COUNT = \"4\"\nLF_PERMBLOCK_ALERT = \"1\"\nLF_NETBLOCK = \"0\"\nLF_NETBLOCK_INTERVAL = \"86400\"\nLF_NETBLOCK_COUNT = \"4\"\nLF_NETBLOCK_CLASS = \"C\"\nLF_NETBLOCK_ALERT = \"1\"\nLF_NETBLOCK_IPV6 = \"\"\nSAFECHAINUPDATE = \"0\"\nDYNDNS = \"0\"\nDYNDNS_IGNORE = \"0\"\nLF_GLOBAL = \"0\"\nGLOBAL_ALLOW = \"\"\nGLOBAL_DENY = \"\"\nGLOBAL_IGNORE = \"\"\nGLOBAL_DYNDNS = \"\"\nGLOBAL_DYNDNS_INTERVAL = \"600\"\nGLOBAL_DYNDNS_IGNORE = \"0\"\nLF_BOGON_SKIP = \"\"\nURLGET = \"2\"\nURLPROXY = \"\"\nMM_LICENSE_KEY = \"\"\nCC_SRC = \"2\"\nCC_DENY = \"\"\nCC_ALLOW = \"\"\nCC_ALLOW_FILTER = \"\"\nCC_ALLOW_PORTS = \"\"\nCC_ALLOW_PORTS_TCP = \"\"\nCC_ALLOW_PORTS_UDP = \"\"\nCC_DENY_PORTS = \"\"\nCC_DENY_PORTS_TCP = \"\"\nCC_DENY_PORTS_UDP = \"\"\nCC_IGNORE = \"\"\nCC_ALLOW_SMTPAUTH = \"\"\nCC_MESSENGER_ALLOW = \"\"\nCC_MESSENGER_DENY = \"\"\nCC_DROP_CIDR = \"\"\nCC_LOOKUPS = \"1\"\nCC6_LOOKUPS = \"0\"\nCC_INTERVAL = \"14\"\nLF_TRIGGER = \"0\"\nLF_TRIGGER_PERM = \"1\"\nLF_SELECT = \"0\"\nLF_EMAIL_ALERT = \"1\"\nLF_TEMP_EMAIL_ALERT = \"1\"\nLF_SSHD = \"5\"\nLF_SSHD_PERM = \"1\"\nLF_FTPD = \"10\"\nLF_FTPD_PERM = \"1\"\nLF_SMTPAUTH = \"5\"\nLF_SMTPAUTH_PERM = \"1\"\nLF_EXIMSYNTAX = \"10\"\nLF_EXIMSYNTAX_PERM = \"1\"\nLF_POP3D = \"0\"\nLF_POP3D_PERM = \"1\"\nLF_IMAPD = \"0\"\nLF_IMAPD_PERM = \"1\"\nLF_HTACCESS = \"5\"\nLF_HTACCESS_PERM = \"1\"\nLF_MODSEC = \"5\"\nLF_MODSEC_PERM = \"1\"\nLF_BIND = \"0\"\nLF_BIND_PERM = \"1\"\nLF_SUHOSIN = \"0\"\nLF_SUHOSIN_PERM = \"1\"\nLF_CXS = \"0\"\nLF_CXS_PERM = \"1\"\nLF_QOS = \"0\"\nLF_QOS_PERM = \"1\"\nLF_SYMLINK = \"0\"\nLF_SYMLINK_PERM = \"1\"\nLF_WEBMIN = \"0\"\nLF_WEBMIN_PERM = \"1\"\nLF_SSH_EMAIL_ALERT = \"1\"\nLF_SU_EMAIL_ALERT = \"1\"\nLF_SUDO_EMAIL_ALERT = \"0\"\nLF_WEBMIN_EMAIL_ALERT = \"1\"\nLF_CONSOLE_EMAIL_ALERT = \"1\"\nLF_APACHE_404 = \"0\"\nLF_APACHE_404_PERM = \"3600\"\nLF_APACHE_403 = \"0\"\nLF_APACHE_403_PERM = \"3600\"\nLF_APACHE_401 = \"0\"\nLF_APACHE_ERRPORT = \"0\"\nLF_APACHE_401_PERM = \"3600\"\nLF_MODSECIPDB_ALERT = \"0\"\nLF_MODSECIPDB_FILE = \"/var/run/modsecurity/data/ip.pag\"\nLF_EXPLOIT = \"300\"\nLF_EXPLOIT_IGNORE = \"\"\nLF_INTERVAL = \"3600\"\nLF_PARSE = \"5\"\nLF_FLUSH = \"3600\"\nLF_REPEATBLOCK = \"0\"\nLF_BLOCKINONLY = \"0\"\nCF_ENABLE = \"0\"\nCF_BLOCK = \"block\"\nCF_TEMP = \"3600\"\nLF_DIRWATCH = \"300\"\nLF_DIRWATCH_DISABLE = \"0\"\nLF_DIRWATCH_FILE = \"0\"\nLF_INTEGRITY = \"3600\"\nLF_DISTATTACK = \"0\"\nLF_DISTATTACK_UNIQ = \"2\"\nLF_DISTFTP = \"0\"\nLF_DISTFTP_UNIQ = \"3\"\nLF_DISTFTP_PERM = \"1\"\nLF_DISTFTP_ALERT = \"1\"\nLF_DISTSMTP = \"0\"\nLF_DISTSMTP_UNIQ = \"3\"\nLF_DISTSMTP_PERM = \"1\"\nLF_DISTSMTP_ALERT = \"1\"\nLF_DIST_INTERVAL = \"300\"\nLF_DIST_ACTION = \"\"\nLT_POP3D = \"0\"\nLT_IMAPD = \"0\"\nLT_EMAIL_ALERT = \"1\"\nLT_SKIPPERMBLOCK = \"0\"\nCT_LIMIT = \"0\"\nCT_INTERVAL = \"30\"\nCT_EMAIL_ALERT = \"1\"\nCT_PERMANENT = \"0\"\nCT_BLOCK_TIME = \"1800\"\nCT_SKIP_TIME_WAIT = \"0\"\nCT_STATES = \"\"\nCT_PORTS = \"\"\nCT_SUBNET_LIMIT = \"0\"\nPT_LIMIT = \"60\"\nPT_INTERVAL = \"60\"\nPT_SKIP_HTTP = \"0\"\nPT_DELETED = \"0\"\nPT_DELETED_ACTION = \"\"\nPT_USERPROC = \"10\"\nPT_USERMEM = \"512\"\nPT_USERRSS = \"256\"\nPT_USERTIME = \"1800\"\nPT_USERKILL = \"0\"\nPT_USERKILL_ALERT = \"1\"\nPT_USER_ACTION = \"\"\nPT_LOAD = \"30\"\nPT_LOAD_AVG = \"5\"\nPT_LOAD_LEVEL = \"6\"\nPT_LOAD_SKIP = \"3600\"\nPT_APACHESTATUS = \"http://127.0.0.1/server-status\"\nPT_LOAD_ACTION = \"\"\nPT_FORKBOMB = \"0\"\nPT_SSHDKILL = \"0\"\nPT_SSHDHUNG = \"0\"\nPS_INTERVAL = \"0\"\nPS_LIMIT = \"10\"\nPS_PORTS = \"0:65535,ICMP\"\nPS_DIVERSITY = \"1\"\nPS_PERMANENT = \"0\"\nPS_BLOCK_TIME = \"3600\"\nPS_EMAIL_ALERT = \"1\"\nUID_INTERVAL = \"0\"\nUID_LIMIT = \"10\"\nUID_PORTS = \"0:65535,ICMP\"\nAT_ALERT = \"2\"\nAT_INTERVAL = \"60\"\nAT_NEW = \"1\"\nAT_OLD = \"1\"\nAT_PASSWD = \"1\"\nAT_UID = \"1\"\nAT_GID = \"1\"\nAT_DIR = \"1\"\nAT_SHELL = \"1\"\nUI = \"1\"\nUI_PORT = \"8546\"\nUI_IP = \"\"\nUI_USER = \"admin\"\nUI_PASS = \"password\"\nUI_BLOCK_PRIVATE_NET = \"1\"\nUI_TIMEOUT = \"300\"\nUI_CHILDREN = \"5\"\nUI_RETRY = \"5\"\nUI_BAN = \"1\"\nUI_ALLOW = \"1\"\nUI_BLOCK = \"1\"\nUI_ALERT = \"4\"\nUI_CIPHER = \"ALL:!ADH:RC4+RSA:+HIGH:+MEDIUM:-LOW:-SSLv2:-EXP:!kEDH\"\nUI_SSL_VERSION = \"SSLv23:!SSLv3:!SSLv2\"\nUI_CXS = \"0\"\nUI_CSE = \"0\"\nMESSENGER = \"0\"\nMESSENGER_TEMP = \"1\"\nMESSENGER_PERM = \"1\"\nMESSENGER_USER = \"csf\"\nMESSENGER_HTTPS_CONF = \"/etc/httpd/conf.d/ssl.conf\"\nMESSENGER_HTTPS_KEY = \"/etc/pki/tls/private/localhost.key\"\nMESSENGER_HTTPS_CRT = \"/etc/pki/tls/certs/localhost.crt\"\nMESSENGER_HTTPS = \"8887\"\nMESSENGER_HTTPS_IN = \"443\"\nMESSENGER_HTML = \"8888\"\nMESSENGER_HTML_IN = \"80\"\nMESSENGER_TEXT = \"8889\"\nMESSENGER_TEXT_IN = \"21\"\nMESSENGER_RATE = \"100/s\"\nMESSENGER_BURST = \"150\"\nMESSENGER_CHILDREN = \"20\"\nMESSENGER_HTTPS_SKIPMAIL = \"1\"\nMESSENGERV3 = \"0\"\nMESSENGERV3LOCATION = \"/etc/httpd/conf.d/\"\nMESSENGERV3RESTART = \"service httpd restart\"\nMESSENGERV3TEST = \"/usr/sbin/apachectl -t\"\nMESSENGERV3HTTPS_CONF = \"/etc/httpd/conf/httpd.conf\"\nMESSENGERV3WEBSERVER = \"apache\"\nMESSENGERV3PERMS = \"711\"\nMESSENGERV3GROUP = \"apache\"\nMESSENGERV3PHPHANDLER = \"\"\nRECAPTCHA_SITEKEY = \"\"\nRECAPTCHA_SECRET = \"\"\nRECAPTCHA_ALERT = \"1\"\nRECAPTCHA_NAT = \"\"\nCLUSTER_SENDTO = \"\"\nCLUSTER_RECVFROM = \"\"\nCLUSTER_MASTER = \"\"\nCLUSTER_NAT = \"\"\nCLUSTER_LOCALADDR = \"\"\nCLUSTER_PORT = \"7777\"\nCLUSTER_KEY = \"\"\nCLUSTER_BLOCK = \"1\"\nCLUSTER_CONFIG = \"0\"\nCLUSTER_CHILDREN = \"10\"\nPORTKNOCKING = \"\"\nPORTKNOCKING_LOG = \"1\"\nPORTKNOCKING_ALERT = \"0\"\nLOGSCANNER = \"0\"\nLOGSCANNER_INTERVAL = \"hourly\"\nLOGSCANNER_STYLE = \"1\"\nLOGSCANNER_EMPTY = \"1\"\nLOGSCANNER_LINES = \"5000\"\nST_ENABLE = \"1\"\nST_IPTABLES = \"100\"\nST_LOOKUP = \"0\"\nST_SYSTEM = \"0\"\nST_SYSTEM_MAXDAYS = \"30\"\nST_MYSQL = \"0\"\nST_MYSQL_USER = \"root\"\nST_MYSQL_PASS = \"\"\nST_MYSQL_HOST = \"localhost\"\nST_APACHE = \"0\"\nST_DISKW = \"0\"\nST_DISKW_FREQ = \"5\"\nST_DISKW_DD = \"if=/dev/zero of=/var/lib/csf/dd_test bs=1MB count=64 conv=fdatasync\"\nDOCKER = \"0\"\nDOCKER_DEVICE = \"docker0\"\nDOCKER_NETWORK4 = \"172.17.0.0/16\"\nDOCKER_NETWORK6 = \"2001:db8:1::/64\"\nIPTABLES = \"/sbin/iptables\"\nIPTABLES_SAVE = \"/sbin/iptables-save\"\nIPTABLES_RESTORE = \"/sbin/iptables-restore\"\nIP6TABLES = \"/sbin/ip6tables\"\nIP6TABLES_SAVE = \"/sbin/ip6tables-save\"\nIP6TABLES_RESTORE = \"/sbin/ip6tables-restore\"\nMODPROBE = \"/sbin/modprobe\"\nIFCONFIG = \"/sbin/ifconfig\"\nSENDMAIL = \"/usr/sbin/sendmail\"\nPS = \"/bin/ps\"\nVMSTAT = \"/usr/bin/vmstat\"\nNETSTAT = \"/bin/netstat\"\nLS = \"/bin/ls\"\nMD5SUM = \"/usr/bin/md5sum\"\nTAR = \"/bin/tar\"\nCHATTR = \"/usr/bin/chattr\"\nUNZIP = \"/usr/bin/unzip\"\nGUNZIP = \"/bin/gunzip\"\nDD = \"/bin/dd\"\nTAIL = \"/usr/bin/tail\"\nGREP = \"/bin/grep\"\nZGREP = \"/bin/zgrep\"\nIPSET = \"/sbin/ipset\"\nSYSTEMCTL = \"/bin/systemctl\"\nHOST = \"/usr/bin/host\"\nIP = \"/bin/ip\"\nCURL = \"/usr/bin/curl\"\nWGET = \"/usr/bin/wget\"\nHTACCESS_LOG = \"/var/log/apache2/error.log\"\nMODSEC_LOG = \"/var/log/apache2/error.log\"\nSSHD_LOG = \"/var/log/auth.log\"\nSU_LOG = \"/var/log/messages\"\nSUDO_LOG = \"/var/log/secure\"\nFTPD_LOG = \"/var/log/messages\"\nSMTPAUTH_LOG = \"/var/log/secure\"\nPOP3D_LOG = \"/var/log/mail.log\"\nIMAPD_LOG = \"/var/log/mail.log\"\nIPTABLES_LOG = \"/var/log/messages\"\nSUHOSIN_LOG = \"/var/log/messages\"\nBIND_LOG = \"/var/log/messages\"\nSYSLOG_LOG = \"/var/log/messages\"\nWEBMIN_LOG = \"/var/log/auth.log\"\nCUSTOM1_LOG = \"/var/log/customlog\"\nCUSTOM2_LOG = \"/var/log/customlog\"\nCUSTOM3_LOG = \"/var/log/customlog\"\nCUSTOM4_LOG = \"/var/log/customlog\"\nCUSTOM5_LOG = \"/var/log/customlog\"\nCUSTOM6_LOG = \"/var/log/customlog\"\nCUSTOM7_LOG = \"/var/log/customlog\"\nCUSTOM8_LOG = \"/var/log/customlog\"\nCUSTOM9_LOG = \"/var/log/customlog\"\nPORTS_pop3d = \"110,995\"\nPORTS_imapd = \"143,993\"\nPORTS_htpasswd = \"80,443\"\nPORTS_mod_security = \"80,443\"\nPORTS_mod_qos = \"80,443\"\nPORTS_symlink = \"80,443\"\nPORTS_suhosin = \"80,443\"\nPORTS_cxs = \"80,443\"\nPORTS_bind = \"53;udp,53;tcp\"\nPORTS_ftpd = \"20,21\"\nPORTS_webmin = \"10000\"\nPORTS_smtpauth = \"25,465,587\"\nPORTS_eximsyntax = \"25,465,587\"\nPORTS_sshd = \"22\"\nGENERIC = \"1\"\nDEBUG = \"0\"\n</code></pre> <p></p> <p></p>", "tags": ["cheatsheet", "configure", "configs", "resource"]}, {"location": "usage/cheatsheet/home/", "title": "Cheatsheet \u203a Home", "text": "", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/home/#cheatsheet-home", "title": "Cheatsheet \u203a Home", "text": "<p>Our Cheatsheet provides a quick reference for ConfigServer Security &amp; Firewall (CSF).  This section includes:</p> <ul> <li>The key files that make up CSF, and a description of their purpose</li> <li>An overview of commands you can run to manage your firewall  </li> </ul>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/ports/", "title": "Cheatsheet \u203a Ports List", "text": "", "tags": ["cheatsheet", "configure", "configs", "resource", "ports"]}, {"location": "usage/cheatsheet/ports/#cheatsheet-port-list", "title": "Cheatsheet: Port List", "text": "<p>The following list of ports can be referenced when setting up CSF firewall with your other applications:</p> Port TCP UDP Description <code>20</code> \u2705 \u2705 FTP Data (mostly TCP, rarely UDP) <code>21</code> \u2705 \u2705 FTP Control (mostly TCP, rarely UDP) <code>22</code> \u2705 SSH <sup>1</sup> / SCP / SFTP <code>23</code> \u2705 Telnet <code>25</code> \u2705 SMTP (non-secure email sending) <code>26</code> \u2705 SMTP (non-secure email sending, alternate when 25 blocked) <code>37</code> \u2705 \u2705 Machine-readable time protocol (rdate) <code>43</code> \u2705 Whois <code>53</code> \u2705 \u2705 DNS (Pihole, AdGuard) <code>67</code> \u2705 DHCP Server <code>68</code> \u2705 DHCP Client <code>69</code> \u2705 TFTP (Trivial File Transfer Protocol) <code>70</code> \u2705 Gopher <code>71</code> \u2705 Genius protocol <code>80</code> \u2705 \u2705 HTTP (web traffic) <code>88</code> \u2705 \u2705 Kerberos authentication <code>110</code> \u2705 POP3 (non-secure email retrieval) <code>113</code> \u2705 \u2705 Identification Protocol (Ident) (RFC 1413) <code>123</code> \u2705 NTP (Network Time Protocol) / Pihole <code>137</code> \u2705 NetBIOS Name Service (Samba name resolution) <code>138</code> \u2705 NetBIOS Datagram Service (Samba broadcasts) <code>139</code> \u2705 NetBIOS Session Service (Samba file/printer sharing) <code>143</code> \u2705 IMAP (non-secure email retrieval) <code>443</code> \u2705 \u2705 HTTPS / QUIC / DoH (DNS over HTTPS, HTTP/3) <code>445</code> \u2705 \u2705 Microsoft-DS / SMB over TCP/IP (Samba) <code>458</code> Apple QuickTime / Real-Time Streaming Protocol (RTSP) <code>465</code> \u2705 SMTPS (secure SMTP) <code>546</code> \u2705 DHCPv6 Client <code>547</code> \u2705 DHCPv6 Server (Pihole, etc) <code>565</code> \u2705 \u2705 Whoami <code>566</code> \u2705 \u2705 Streettalk <code>587</code> \u2705 SMTP submission <code>574</code> \u2705 \u2705 FTP Software Agent System <code>596</code> \u2705 \u2705 SysMan Station daemon <code>783</code> \u2705 Spamassassin Razor Agent <code>853</code> \u2705 \u2705 DNS over TLS (DoT) <code>873</code> \u2705 Rsync file transfer <code>953</code> \u2705 Unbound Remote control / statistics (RPC for unbound-control) <code>993</code> \u2705 IMAPS (secure IMAP) <code>995</code> \u2705 POP3S (secure POP3) <code>1025</code> \u2705 Microsoft Remote Procedure Call <code>1194</code> \u2705 \u2705 OpenVPN <code>1241</code> \u2705 \u2705 Nessus security scanner <code>1311</code> \u2705 Dell OpenManage server administrator web GUI (EMC) <code>1337</code> \u2705 WASTE peer-to-peer encrypted file-sharing Program <code>1589</code> \u2705 \u2705 Cisco VLAN Query Protocol (VQP) <code>1701</code> \u2705 Layer Two Tunneling Protocol Virtual Private Networking <code>1723</code> \u2705 \u2705 Microsoft PPTP <code>1725</code> \u2705 Steam Client <code>1863</code> \u2705 MSN Live Messenger, Xbox Live 360 <code>1900</code> \u2705 Universal Plug and Play (UPnP) <code>2049</code> \u2705 \u2705 Network File Sharing (NFS) <code>2077</code> \u2705 cPanel Web Disk (HTTPS) / WebDAV <code>2078</code> \u2705 Web Disk (HTTP) / WebDAV <code>2079</code> \u2705 Web Disk (HTTPS) / CalDAV <code>2080</code> \u2705 Web Disk (HTTP) <code>2082</code> \u2705 cPanel (HTTP) / CWP User Panel (HTTP) <code>2083</code> \u2705 cPanel (HTTPS) / CWP User Panel (HTTPS) <code>2086</code> \u2705 WHM (HTTP) / CWP Admin (HTTP) <code>2087</code> \u2705 WHM (HTTPS) / CWP Admin (HTTPS) / Event Logging Integration (ELI) <code>2095</code> \u2705 Webmail (HTTP) <code>2096</code> \u2705 Webmail (HTTPS) <code>2089</code> \u2705 cPanel Licensing <code>2091</code> \u2705 ActiveSync <code>2222</code> \u2705 DirectAdmin control panel <code>2304</code> \u2705 CWP External API SSL (HTTPS for API access) <code>2703</code> \u2705 Local Spamassassin / CSF+LFD <code>3000</code> \u2705 Gogs \ud83d\udd39 Gitea \ud83d\udd39 Grafana \ud83d\udd39 Jellyfin Stats  \ud83d\udd39 Linkwarden \ud83d\udd39 Obsidian LiveSync \ud83d\udd39 Slink / Zipline <code>3001</code> \u2705 Uptime Kuma / Obsidian <code>3306</code> \u2705 MySQL / MariaDB <code>3389</code> \u2705 Remote Desktop Protocol (RDP) <code>3875</code> \u2705 Duplicacy <code>5001</code> \u2705 Dockge <code>5224</code> \u2705 Plesk license check <code>5432</code> \u2705 Postgres <code>5601</code> \u2705 Kibana web interface \ud83d\udd39 visualization/dashboard for Elastic Search (HTTP) <code>5938</code> \u2705 Teamviewer <code>5984</code> \u2705 CouchDB Clustered Mode <code>6077</code> \u2705 Cabernet <code>6157</code> \u2705 Opengist <code>6277</code> \u2705 \u2705 CSF / LFD internal service <code>6379</code> \u2705 Redis <code>6568</code> \u2705 \u2705 AnyDesk streaming (peer-to-peer connections) <code>6881</code> \u2705 \u2705 qBittorrent <code>6666</code> \u2705 CSF / LFD web interface <code>7080</code> \u2705 LiteSpeed WebAdmin Console <code>8083</code> \u2705 VestaCP control panel <code>8096</code> \u2705 Jellyfin <code>8200</code> \u2705 Hashicorp Vault \ud83d\udd39 Duplicati control panel <code>8384</code> \u2705 Syncthing <code>8443</code> \u2705 Plesk administrative interface (HTTPS) <code>8840</code> \u2705 \u2705 WatchYourLan <code>8880</code> \u2705 Plesk administrative interface (HTTP) / Vuetorrent <code>8853</code> \u2705 \u2705 WatchYourPorts <code>9000</code> \u2705 Portainer (HTTP) <code>9001</code> \u2705 Portainer agent <code>9090</code> \u2705 Prometheus <code>9100</code> \u2705 Prometheus Node Exporter <code>9200</code> \u2705 Elastic Search REST API <code>9300</code> \u2705 Elastic Search internal cluster communication <code>9443</code> \u2705 Portainer (HTTPS) <code>9600</code> \u2705 Elastic Search monitoring API (used by X-Pack/Elastic Search stack monitoring) <code>9999</code> \u2705 Stash <code>10000</code> \u2705 Webmin control panel <code>11211</code> \u2705 \u2705 Memcached <code>22067</code> \u2705 Syncthing Relay Server <code>22070</code> \u2705 Syncthing Relay Server <code>22000</code> \u2705 Syncthing Relay Server <code>27017</code> \u2705 MongoDB <code>24441</code> \u2705 \u2705 CSF / LFD internal services / Spamassassin Pyzor <code>32400</code> \u2705 Plesk <code>34400</code> \u2705 Threadfin <code>50001</code> \u2705 AnyDesk Discovery - Identify devices on the local network <code>50002</code> \u2705 AnyDesk Discovery - Identify devices on the local network <code>50003</code> \u2705 AnyDesk Discovery - Identify devices on the local network <p> </p> <ol> <li> <p>Some sources list UDP for port 22, but officially SSH only uses TCP. UDP is not standard for this service.\u00a0\u21a9</p> </li> </ol>", "tags": ["cheatsheet", "configure", "configs", "resource", "ports"]}, {"location": "usage/cheatsheet/structure/", "title": "Cheatsheet \u203a Structure", "text": "", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/structure/#cheatsheet-structure", "title": "Cheatsheet: Structure", "text": "<p>This page provides a summary of the files and folders associated with ConfigServer Security &amp; Firewall (CSF). Use it as a reference to locate and edit specific configuration files or resources.</p> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/structure/#directory-structure", "title": "\ud83d\udcc1 Directory Structure", "text": "<p>Directories associated with ConfigServer Filewall which house all of the files used to configure and manage CSF.</p> Folder Description <code>/etc/csf/</code> CSF configuration files, blocklists, whitelists, etc <code>/var/lib/csf/</code> Runtime data, temporary files, and logs for CSF and LFD <code>/var/lib/csf/ui</code> Runtime data and cache for the CSF WebUI. <code>/usr/local/csf/bin/</code> Pre &amp; post initialzation scripts <code>csfpre.sh</code> and <code>csfpost.sh</code>, test script <code>csftest.pl</code>, and csf uninstaller <code>uninstall.sh</code> <code>/usr/local/csf/lib/</code> Perl modules and static data <code>/usr/local/csf/profiles/</code> Pre-configured CSF setup profiles <code>/usr/local/csf/tpl/</code> Email alert templates <code>/usr/local/include/csf/pre.d/</code> Scripts to execute when CSF started. Runs before CSF configures iptables. These are triggered by <code>/usr/local/csf/bin/csfpre.sh</code> <code>/usr/local/include/csf/post.d/</code> Scripts to execute when CSF started. Runs after CSF configures iptables. These are triggered by <code>/usr/local/csf/bin/csfpost.sh</code> <p></p> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/structure/#file-structure", "title": "\ud83d\udcc4 File Structure", "text": "<p>Files associated with ConfigServer Firewall configuration and management.</p> File Description <code>/etc/csf/changelog.txt</code> List of changes made to each release of CSF / LFD <code>/etc/csf/cpanel.allow</code> List of addresses allowed through iptables for unimpeded access to cpanel license servers <code>/etc/csf/cpanel.comodo.allow</code> List of Sectigo (Comodo) IPs explicitly allowed through iptables to ensure AutoSSL connections are never blocked. <code>/etc/csf/cpanel.comodo.ignore</code> List of Sectigo (Comodo) IPs ignored by LFD\u2019s login/banning system to prevent them from being auto-blocked. <code>/etc/csf/cpanel.allow</code> List of addresses which ensure traffic from cPanel\u2019s license servers is explicitly allowed through iptables. <code>/etc/csf/cpanel.ignore</code> List of addresses from cPanel\u2019s license servers that are excluded from LFD (Login Failure Daemon) monitoring. <code>/etc/csf/csf.allow</code> List of IP's &amp; CIDR addresses allowed through the firewall <code>/etc/csf/csf.blocklists</code> URLs for external blocklists used by CSF to block malicious IPs <code>/etc/csf/csf.cloudflare</code> Contains configuration elements for the <code>CF_ENABLE</code> CloudFlare feature <code>/etc/csf/csf.conf</code> Main configuration file <code>/etc/csf/csf.deny</code> IP's and CIDR addresses that should never be allowed through the firewall <code>/etc/csf/csf.dirwatch</code> Directories &amp; files you want to be alerted when changed. Must specify full paths for entries <code>/etc/csf/csf.dyndns</code> IPs &amp; hostnames of systems that are dynamically updated (like via a dynamic DNS service) <code>/etc/csf/csf.fignore</code> Files that lfd directory watching will ignore. You must specify the full path to the file <code>/etc/csf/csf.ignore</code> IP's &amp; CIDR addresses that the login failure daemon should ignore and not not block if detected <code>/etc/csf/csf.logfiles</code> Log files for the <code>LOGSCANNER</code> feature <code>/etc/csf/csf.logignore</code> Regular expressions for the <code>LOGSCANNER</code> feature. If a line matches it will be ignored, otherwise it will be reported <code>/etc/csf/csf.mignore</code> Usernames and local IP addresses that <code>RT_LOCALRELAY_ALERT</code> will ignore <code>/etc/csf/csf.pignore</code> Processes LFD should ignore (for example, trusted services). <code>/etc/csf/csf.rblconf</code> Optional entries for the IP checking against RBLs within csf <code>/etc/csf/csf.redirect</code> Port and/or IP address assignments to direct traffic to alternative ports/IP addresses <code>/etc/csf/csf.resellers</code> Reseller accounts to allow access to limited csf functionality. <code>/etc/csf/csf.rignore</code> Domains &amp; partial domain that lfd process tracking will ignore based on reverse &amp; forward DNS lookups <code>/etc/csf/csf.signore</code> Files that <code>LF_SCRIPT_ALERT</code> will ignore. Specify the full path to the directory containing the script <code>/etc/csf/csf.sips</code> List any server configured IP addresses for which you don't want to allow any incoming or outgoing traffic <code>/etc/csf/csf.smtpauth</code> Will allow EXIM to advertise SMTP AUTH. One IP address per line. <code>/etc/csf/csf.suignore</code> Usernames that are ignored during the <code>LF_EXPLOIT</code> SUPERUSER check <code>/etc/csf/csf.syslogs</code> Log files for the UI System Log Watch and Search features. IF they exists they will apear in the drop-down lists <code>/etc/csf/csf.syslogusers</code> Usernames which should be allowed to log via syslog/rsyslog <code>/etc/csf/csf.uidignore</code> User ID's (UID) that are ignored by the User ID Tracking feature <code>/etc/csf/downloadservers</code> Servers that will be pinged to fetch updates for CSF <code>/etc/csf/ui/ui.allow</code> IPs allowed to access the CSF WebUI. IPs in this file bypass CSF's IP restrictions for the web ui <code>/etc/csf/ui/ui.ban</code> IPs that are explicitly denied access to the CSF WebUI <code>/lib/systemd/system/csf.service</code> Service file for csf (Login Failure Daemon) <code>/lib/systemd/system/lfd.service</code> Service file for lfd (ConfigServer Firewall) <code>/var/lib/csf/lfd.log</code> Main LFD log file recording login attempts, blocked IPs, and alerts. <code>/var/lib/csf/lfd.pid</code> PID file for Login Failure Daemon (LFD). <p></p> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/structure/#advanced-structure", "title": "Advanced Structure", "text": "<p>We have provided a very detailed tree below that make up CSF and LFD's entire structure. This assists you with locating specific files that you may need to modify. Each file or folder will contain an icon; we have provided a list below to be used as an icon lenend:</p> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/structure/#etccsf", "title": "/etc/csf/", "text": "<p>The files within the subfolder <code>/etc/csf</code> contain most of your configurable files, including the main <code>csf.conf</code> configuration file. This location also holds all of your allow and block lists that will be used to restrict access to your server and to your CSF web interface (if enabled).</p> <p><code> \u2514\u2500\u2500  etc \u00a0\u00a0\u00a0\u00a0 \u2514\u2500\u2500  csf \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u251c\u2500\u2500  alerts -&gt;  /usr/local/csf/tpl \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u251c\u2500\u2500  changelog.txt  \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u251c\u2500\u2500  cpanel.allow \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u251c\u2500\u2500  cpanel.comodo.allow \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u251c\u2500\u2500  cpanel.comodo.ignore \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u251c\u2500\u2500  cpanel.ignore \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u251c\u2500\u2500  csf.allow \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u251c\u2500\u2500  csf.blocklists \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u251c\u2500\u2500  csf.cloudflare \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u251c\u2500\u2500  csf.conf \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u251c\u2500\u2500  csf.deny \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u251c\u2500\u2500  csf.dirwatch \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u251c\u2500\u2500  csf.dyndns \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u251c\u2500\u2500  csf.fignore \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u251c\u2500\u2500  csf.ignore \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u251c\u2500\u2500  csf.logfiles \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u251c\u2500\u2500  csf.logignore \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u251c\u2500\u2500  csf.mignore \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u251c\u2500\u2500  csf.pignore \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u251c\u2500\u2500  csf.pl -&gt;  /usr/sbin/csf \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u251c\u2500\u2500  csf.rblconf \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u251c\u2500\u2500  csf.redirect \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u251c\u2500\u2500  csf.resellers \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u251c\u2500\u2500  csf.rignore \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u251c\u2500\u2500  csf.signore \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u251c\u2500\u2500  csf.sips \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u251c\u2500\u2500  csf.smtpauth \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u251c\u2500\u2500  csf.suignore \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u251c\u2500\u2500  csf.syslogs \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u251c\u2500\u2500  csf.syslogusers \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u251c\u2500\u2500  csftest.pl -&gt;  /usr/local/csf/bin/csftest.pl \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u251c\u2500\u2500  csf.uidignore \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u251c\u2500\u2500  csfwebmin.tgz -&gt;  /usr/local/csf/csfwebmin.tgz \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u251c\u2500\u2500  downloadservers \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u251c\u2500\u2500  install.txt \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u251c\u2500\u2500  lfd.pl -&gt;  /usr/sbin/lfd \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u251c\u2500\u2500  license.txt \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u251c\u2500\u2500  messenger \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u2502\u00a0\u00a0 \u251c\u2500\u2500  en.php \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u2502\u00a0\u00a0 \u251c\u2500\u2500  index.html \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u2502\u00a0\u00a0 \u251c\u2500\u2500  index.php \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u2502\u00a0\u00a0 \u251c\u2500\u2500  index.recaptcha.html \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u2502\u00a0\u00a0 \u251c\u2500\u2500  index.recaptcha.php \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u2502\u00a0\u00a0 \u2514\u2500\u2500  index.text \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u251c\u2500\u2500  pt_deleted_action.pl -&gt;  /usr/local/csf/bin/pt_deleted_action.pl \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u251c\u2500\u2500  readme.txt \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u251c\u2500\u2500  regex.custom.pm -&gt;  /usr/local/csf/bin/regex.custom.pm \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u251c\u2500\u2500  remove_apf_bfd.sh -&gt;  /usr/local/csf/bin/remove_apf_bfd.sh \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u251c\u2500\u2500  ui \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u2502\u00a0\u00a0 \u251c\u2500\u2500  images \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 admin_icon.svg \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500  bootstrap \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500  css \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500  bootstrap.min.css \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500  bootstrap.min.css.map \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500  fonts \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500  glyphicons-halflings-regular.eot \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500  glyphicons-halflings-regular.svg \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500  glyphicons-halflings-regular.ttf \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500  glyphicons-halflings-regular.woff \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500  glyphicons-halflings-regular.woff2 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500  js \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u2514\u2500\u2500  bootstrap.min.js \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500  bootstrap-chosen.css \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500  chosen.min.css \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500  chosen.min.js \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500  chosen-sprite@2x.png \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500  chosen-sprite.png \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500  configserver.css \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500  csf-loader.gif \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500  csf-logo-alt.svg \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500  csf-logo.svg \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500  csf_small.png \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500  csf.svg \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500  jquery.min.js \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500  LICENSE.txt \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500  loader.gif \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500  reseller_icon.svg \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u2502\u00a0\u00a0 \u251c\u2500\u2500  server.crt \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u2502\u00a0\u00a0 \u251c\u2500\u2500  server.key \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u2502\u00a0\u00a0 \u251c\u2500\u2500  ui.allow \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u2502\u00a0\u00a0 \u2514\u2500\u2500  ui.ban \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u251c\u2500\u2500  uninstall.sh -&gt;  /usr/local/csf/bin/uninstall.sh \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u251c\u2500\u2500  version.txt \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u2514\u2500\u2500  webmin -&gt;  /usr/local/csf/lib/webmin </code></p> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/structure/#usrlocalcsf", "title": "/usr/local/csf/", "text": "<p>The files and subfolders of this path contain most of the functionality for CSF and LFD. For most scenarios, you should not need to modify any of the files here.</p> <p>The one exception is the <code>tpl</code> subfolder, which contains all of the email alert templates. However, you can also find these within <code>/etc/csf/alerts</code></p> <p><code> \u2514\u2500\u2500  usr \u00a0\u00a0\u00a0\u00a0\u2514\u2500\u2500  local \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2514\u2500\u2500  csf \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500  bin \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0\u00a0\u251c\u2500\u2500  csfpre.sh \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0\u00a0\u2514\u2500\u2500  csfpost.sh \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u251c\u2500\u2500  csftest.pl \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u251c\u2500\u2500  pt_deleted_action.pl \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u251c\u2500\u2500  regex.custom.pm \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u251c\u2500\u2500  remove_apf_bfd.sh \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u2514\u2500\u2500  uninstall.sh \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500  csfwebmin.tgz \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500  lib \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u251c\u2500\u2500  ConfigServer \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u2502\u00a0\u00a0  \u251c\u2500\u2500 AbuseIP.pm \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u2502\u00a0\u00a0  \u251c\u2500\u2500 CheckIP.pm \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u2502\u00a0\u00a0  \u251c\u2500\u2500 CloudFlare.pm \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u2502\u00a0\u00a0  \u251c\u2500\u2500 Config.pm \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u2502\u00a0\u00a0  \u251c\u2500\u2500 cseUI.pm \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u2502\u00a0\u00a0  \u251c\u2500\u2500 DisplayResellerUI.pm \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u2502\u00a0\u00a0  \u251c\u2500\u2500 DisplayUI.pm \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u2502\u00a0\u00a0  \u251c\u2500\u2500 GetEthDev.pm \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u2502\u00a0\u00a0  \u251c\u2500\u2500 GetIPs.pm \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u2502\u00a0\u00a0  \u251c\u2500\u2500 KillSSH.pm \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u2502\u00a0\u00a0  \u251c\u2500\u2500 Logger.pm \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u2502\u00a0\u00a0  \u251c\u2500\u2500 LookUpIP.pm \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u2502\u00a0\u00a0  \u251c\u2500\u2500 Messenger.pm \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u2502\u00a0\u00a0  \u251c\u2500\u2500 Ports.pm \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u2502\u00a0\u00a0  \u251c\u2500\u2500 RBLCheck.pm \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u2502\u00a0\u00a0  \u251c\u2500\u2500 RBLLookup.pm \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u2502\u00a0\u00a0  \u251c\u2500\u2500 RegexMain.pm \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u2502\u00a0\u00a0  \u251c\u2500\u2500 Sanity.pm \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u2502\u00a0\u00a0  \u251c\u2500\u2500 Sendmail.pm \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u2502\u00a0\u00a0  \u251c\u2500\u2500 ServerCheck.pm \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u2502\u00a0\u00a0  \u251c\u2500\u2500 ServerStats.pm \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u2502\u00a0\u00a0  \u251c\u2500\u2500 Service.pm \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u2502\u00a0\u00a0  \u251c\u2500\u2500 Slurp.pm \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u2502\u00a0\u00a0  \u2514\u2500\u2500 URLGet.pm \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u251c\u2500\u2500  Crypt \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u2502\u00a0\u00a0  \u251c\u2500\u2500 Blowfish_PP.pm \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u2502\u00a0\u00a0  \u2514\u2500\u2500 CBC.pm \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u251c\u2500\u2500  csfajaxtail.js \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u251c\u2500\u2500  csf.div \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u251c\u2500\u2500  csf.help \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u251c\u2500\u2500  csf.rbls \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u251c\u2500\u2500  HTTP \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500  Tiny.pm \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u251c\u2500\u2500  JSON \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500  Tiny.pm \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u251c\u2500\u2500  Net \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500  CIDR \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500  Lite.pm \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500  IP.pm \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u251c\u2500\u2500  restricted.txt \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u251c\u2500\u2500  sanity.txt \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u251c\u2500\u2500  version \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500  regex.pm \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500  vpp.pm \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u251c\u2500\u2500  version.pm \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u2514\u2500\u2500  webmin \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2514\u2500\u2500  csf \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u251c\u2500\u2500  images \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500  admin_icon.svg \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500  bootstrap \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500  css \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500  bootstrap.min.css \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500  bootstrap.min.css.map \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500  fonts \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500  glyphicons-halflings-regular.eot \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500  glyphicons-halflings-regular.svg \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500  glyphicons-halflings-regular.ttf \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500  glyphicons-halflings-regular.woff \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500  glyphicons-halflings-regular.woff2 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500  js \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2514\u2500\u2500  bootstrap.min.js \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500  bootstrap-chosen.css \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500  chosen.min.css \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500  chosen.min.js \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500  chosen-sprite@2x.png \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500  chosen-sprite.png \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500  configserver.css \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500  csf-loader.gif \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500  csf-logo-alt.svg \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500  csf-logo.svg \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500  csf_small.png \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500  csf.svg \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500  jquery.min.js \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500  LICENSE.txt \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500  loader.gif \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500  reseller_icon.svg \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u251c\u2500\u2500  index.cgi \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2514\u2500\u2500  module.info \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500  profiles \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u251c\u2500\u2500  block_all_perm.conf \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u251c\u2500\u2500  block_all_temp.conf \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u251c\u2500\u2500  disable_alerts.conf \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u251c\u2500\u2500  protection_high.conf \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u251c\u2500\u2500  protection_low.conf \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u251c\u2500\u2500  protection_medium.conf \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u2514\u2500\u2500  reset_to_defaults.conf \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2514\u2500\u2500  tpl \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500  accounttracking.txt \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500  alert.txt \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500  apache.https.txt \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500  apache.http.txt \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500  apache.main.txt \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500  connectiontracking.txt \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500  consolealert.txt \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500  cpanelalert.txt \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500  exploitalert.txt \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500  filealert.txt \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500  forkbombalert.txt \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500  integrityalert.txt \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500  litespeed.https.txt \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500  litespeed.http.txt \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500  litespeed.main.txt \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500  loadalert.txt \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500  logalert.txt \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500  logfloodalert.txt \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500  modsecipdbalert.txt \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500  netblock.txt \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500  permblock.txt \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500  portknocking.txt \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500  portscan.txt \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500  processtracking.txt \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500  queuealert.txt \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500  recaptcha.txt \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500  relayalert.txt \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500  resalert.txt \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500  reselleralert.txt \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500  scriptalert.txt \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500  sshalert.txt \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500  sualert.txt \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500  sudoalert.txt \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500  syslogalert.txt \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500  tracking.txt \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500  uialert.txt \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500  uidscan.txt \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500  usertracking.txt \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500  watchalert.txt \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500  webminalert.txt \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2514\u2500\u2500  x-arf.txt </code></p> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/structure/#usrlocalincludecsf", "title": "/usr/local/include/csf/", "text": "<p>This folder contains your own custom <code>pre</code> and <code>post</code> initialization scripts for CSF. These scripts control the execution of custom Bash scripts before and after CSF applies firewall rules to your IP tables. </p> <ul> <li>Drop custom bash scripts in the <code>pre.d</code> folder if you want to modify your iptables before CSF injects its own rules into iptables.</li> <li>Drop custom bash scripts in the <code>post.d</code> folder if you want to modify your iptables after CSF injects its own rules into iptables.</li> </ul> <p><code> \u2514\u2500\u2500  usr \u00a0\u00a0\u00a0\u00a0\u2514\u2500\u2500  local \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2514\u2500\u2500  include \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2514\u2500\u2500  csf \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2514\u2500\u2500  pre.d \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2514\u2500\u2500  custom_script.sh \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2514\u2500\u2500  post.d \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2514\u2500\u2500  custom_script.sh  </code></p><code> </code><p><code></code></p> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/structure/#varlibcsf", "title": "/var/lib/csf/", "text": "<p>This folder contains your <code>csf.conf</code> backups and also stores files generated by the integrated statistics module, including charts. While backups can be accessed directly from the CSF web interface, this folder is primarily for internal use. You generally won\u2019t need to interact with it, and it\u2019s important not to modify any of the files stored here.</p> <p><code> \u2514\u2500\u2500  var \u00a0\u00a0\u00a0\u00a0\u2514\u2500\u2500  lib \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2514\u2500\u2500  csf \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2514\u2500\u2500  backup \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u2514\u2500\u2500  1759876810_pre_v15_01_upgrade \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500  Geo \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500  lock \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502\u00a0\u00a0 \u2514\u2500\u2500  command.lock \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500  stats \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500  ui \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500  webmin \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2514\u2500\u2500  zone </code></p> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/structure/#usrsbin", "title": "/usr/sbin/", "text": "<p>The <code>/usr/sbin</code> folder contains the two most important files, which are the main CSF and LFD binary files. These files are responsible for how CSF and LFD behave and contain the core code.</p> <p><code> \u2514\u2500\u2500  user \u00a0\u00a0\u00a0\u00a0 \u2514\u2500\u2500  sbin \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u251c\u2500\u2500  csf \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  \u2514\u2500\u2500  lfd </code></p> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/structure/#libsystemdsystem", "title": "/lib/systemd/system", "text": "<p>The <code>/usr/sbin</code> folder contains the CSF and LFD services which are responsible for bringing the two servces online.</p> <p><code> \u2514\u2500\u2500  lib \u00a0\u00a0\u00a0\u00a0 \u2514\u2500\u2500  systemd \u00a0\u00a0\u00a0\u00a0     \u2514\u2500\u2500  system \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0      \u251c\u2500\u2500  csf.service \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0      \u2514\u2500\u2500  lfd.service </code></p> <p></p> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/structure/#patcher-files", "title": "Patcher Files", "text": "<p>The following files are associated with the ConfigServer Firewall scripts located in this repo's <code>extras/scripts</code> folder. These scripts add special iptable rules so that CSF can communicate with Docker &amp; OpenVPN.</p> File Description <code>/usr/local/csf/bin/csfpre.sh</code> Loader for pre scripts. Runs before CSF adds firewall rules. <code>/usr/local/csf/bin/csfpost.sh</code> Loader for post scripts. Runs after CSF adds firewall rules. <code>/usr/local/include/csf/post.d/docker.sh</code> Patch adds specific Docker network compatibility to CSF. <code>/usr/local/include/csf/post.d/openvpn.sh</code> Patch adds specific OpenVPN rules to CSF to allow VPN connections. <p></p> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/troubleshooting/", "title": "Cheatsheet: Troubleshooting", "text": "", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/troubleshooting/#cheatsheet-troubleshooting", "title": "Cheatsheet: Troubleshooting", "text": "<p>The information below is a list of errors you may receive within CSF, and steps on how to correct each issue.</p> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/troubleshooting/#cant-locate-object-method-new-via-package-cryptcbc-at-usrsbincsf-line", "title": "Can't locate object method \"new\" via package \"Crypt::CBC\" at /usr/sbin/csf line ***", "text": "<p>This error occurs when Crypt::CBC cannot be found. It is sometimes seen when executing commands such as <code>sudo csf -cp</code>.</p> <p></p> <p>To correct the issue, open the file <code>/usr/sbin/csf</code> in a text editor.</p> <p>Locate the lines: </p><pre><code>use ConfigServer::Sendmail;\nuse ConfigServer::LookUpIP qw(iplookup);\n</code></pre><p></p> <p>Add a new line with <code>use Crypt::CBC</code> as shown below: </p><pre><code>use ConfigServer::Sendmail;\nuse ConfigServer::LookUpIP qw(iplookup);\nuse Crypt::CBC\n</code></pre><p></p> <p></p> <p>Save the file, and re-execute your previous command which caused the error.</p> <p></p> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "usage/cheatsheet/troubleshooting/#csf46313-open3-exec-of-sbinipset-flush-failed-no-such-file-or-directory-at-usrsbincsf-line", "title": "csf[46313]: open3: exec of /sbin/ipset flush failed: No such file or directory at /usr/sbin/csf line ****.", "text": "<p>This error occurs when you are missing the package <code>ipset</code>. Install it with the following commands:</p> <p></p> <p>Debian based systems:</p> <pre><code>sudo apt update\nsudo apt-get install ipset\n</code></pre> <p>Redhat based systems: </p><pre><code>sudo yum check-update\nsudo yum install ipset\n</code></pre><p></p> <p></p> <p></p>", "tags": ["cheatsheet", "configure"]}, {"location": "blog/2025/", "title": "October 2025", "text": ""}, {"location": "blog/2025/#october-2025", "title": "October 2025", "text": ""}, {"location": "blog/release/", "title": "release", "text": ""}, {"location": "blog/release/#release", "title": "release", "text": ""}, {"location": "blog/changelog/", "title": "changelog", "text": ""}, {"location": "blog/changelog/#changelog", "title": "changelog", "text": ""}, {"location": "blog/v15x/", "title": "v15.x", "text": ""}, {"location": "blog/v15x/#v15x", "title": "v15.x", "text": ""}, {"location": "blog/webmin/", "title": "webmin", "text": ""}, {"location": "blog/webmin/#webmin", "title": "webmin", "text": ""}, {"location": "blog/ui/", "title": "ui", "text": ""}, {"location": "blog/ui/#ui", "title": "ui", "text": ""}, {"location": "blog/csp/", "title": "csp", "text": ""}, {"location": "blog/csp/#csp", "title": "csp", "text": ""}, {"location": "blog/initd/", "title": "init.d", "text": ""}, {"location": "blog/initd/#initd", "title": "init.d", "text": ""}, {"location": "blog/csfajaxtail/", "title": "csfajaxtail", "text": ""}, {"location": "blog/csfajaxtail/#csfajaxtail", "title": "csfajaxtail", "text": ""}, {"location": "blog/web-inteface/", "title": "web-inteface", "text": ""}, {"location": "blog/web-inteface/#web-inteface", "title": "web-inteface", "text": ""}, {"location": "blog/web-login/", "title": "web-login", "text": ""}, {"location": "blog/web-login/#web-login", "title": "web-login", "text": ""}, {"location": "blog/web-theme-dark/", "title": "web-theme-dark", "text": ""}, {"location": "blog/web-theme-dark/#web-theme-dark", "title": "web-theme-dark", "text": ""}, {"location": "blog/release-alpha/", "title": "release-alpha", "text": ""}, {"location": "blog/release-alpha/#release-alpha", "title": "release-alpha", "text": ""}, {"location": "blog/vestacp/", "title": "vestacp", "text": ""}, {"location": "blog/vestacp/#vestacp", "title": "vestacp", "text": ""}, {"location": "blog/cyberpanel/", "title": "cyberpanel", "text": ""}, {"location": "blog/cyberpanel/#cyberpanel", "title": "cyberpanel", "text": ""}, {"location": "blog/downloadconfigserverdev/", "title": "download.configserver.dev", "text": ""}, {"location": "blog/downloadconfigserverdev/#downloadconfigserverdev", "title": "download.configserver.dev", "text": ""}]}